### YamlMime:ManagedReference
items:
- uid: MLEM.Font.GenericFont
  commentId: T:MLEM.Font.GenericFont
  id: GenericFont
  parent: MLEM.Font
  children:
  - MLEM.Font.GenericFont.Bold
  - MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  - MLEM.Font.GenericFont.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  - MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  - MLEM.Font.GenericFont.Emsp
  - MLEM.Font.GenericFont.Italic
  - MLEM.Font.GenericFont.LineHeight
  - MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
  - MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
  - MLEM.Font.GenericFont.MeasureString(System.Text.StringBuilder,System.Boolean)
  - MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  - MLEM.Font.GenericFont.Nbsp
  - MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
  - MLEM.Font.GenericFont.SplitString(System.Text.StringBuilder,System.Single,System.Single)
  - MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
  - MLEM.Font.GenericFont.SplitStringSeparate(System.Text.StringBuilder,System.Single,System.Single)
  - MLEM.Font.GenericFont.TransformSingleCharacter(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  - MLEM.Font.GenericFont.TruncateString(System.Text.StringBuilder,System.Single,System.Single,System.Boolean,System.String)
  - MLEM.Font.GenericFont.Zwsp
  langs:
  - csharp
  - vb
  name: GenericFont
  nameWithType: GenericFont
  fullName: MLEM.Font.GenericFont
  type: Class
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GenericFont
    path: ../MLEM/Font/GenericFont.cs
    startLine: 15
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Represents a font with additional abilities.

    <xref href="MLEM.Font.GenericSpriteFont" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public abstract class GenericFont : GenericDataHolder, IGenericDataHolder'
    content.vb: Public MustInherit Class GenericFont Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  derivedClasses:
  - MLEM.Extended.Font.GenericStashFont
  - MLEM.Font.GenericSpriteFont
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Font.GenericFont.Emsp
  commentId: F:MLEM.Font.GenericFont.Emsp
  id: Emsp
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: Emsp
  nameWithType: GenericFont.Emsp
  fullName: MLEM.Font.GenericFont.Emsp
  type: Field
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Emsp
    path: ../MLEM/Font/GenericFont.cs
    startLine: 22
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    This field holds the unicode representation of a one em space.

    This is a character that isn't drawn, but has the same width as <xref href="MLEM.Font.GenericFont.LineHeight" data-throw-if-not-resolved="false"></xref>.

    Whereas a regular <xref href="Microsoft.Xna.Framework.Graphics.SpriteFont" data-throw-if-not-resolved="false"></xref> would have to explicitly support this character for width calculations, generic fonts implicitly support it in <xref href="MLEM.Font.GenericFont.MeasureString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const char Emsp = ' '
    return:
      type: System.Char
    content.vb: Public Const Emsp As Char = " "c
- uid: MLEM.Font.GenericFont.Nbsp
  commentId: F:MLEM.Font.GenericFont.Nbsp
  id: Nbsp
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: Nbsp
  nameWithType: GenericFont.Nbsp
  fullName: MLEM.Font.GenericFont.Nbsp
  type: Field
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Nbsp
    path: ../MLEM/Font/GenericFont.cs
    startLine: 27
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    This field holds the unicode representation of a non-breaking space.

    Whereas a regular <xref href="Microsoft.Xna.Framework.Graphics.SpriteFont" data-throw-if-not-resolved="false"></xref> would have to explicitly support this character for width calculations, generic fonts implicitly support it in <xref href="MLEM.Font.GenericFont.MeasureString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const char Nbsp = ' '
    return:
      type: System.Char
    content.vb: Public Const Nbsp As Char = " "c
- uid: MLEM.Font.GenericFont.Zwsp
  commentId: F:MLEM.Font.GenericFont.Zwsp
  id: Zwsp
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: Zwsp
  nameWithType: GenericFont.Zwsp
  fullName: MLEM.Font.GenericFont.Zwsp
  type: Field
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Zwsp
    path: ../MLEM/Font/GenericFont.cs
    startLine: 32
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    This field holds the unicode representation of a zero-width space.

    Whereas a regular <xref href="Microsoft.Xna.Framework.Graphics.SpriteFont" data-throw-if-not-resolved="false"></xref> would have to explicitly support this character for width calculations and string splitting, generic fonts implicitly support it in <xref href="MLEM.Font.GenericFont.MeasureString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Font.GenericFont.SplitString(System.String%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public const char Zwsp = '​'
    return:
      type: System.Char
    content.vb: Public Const Zwsp As Char = "​"c
- uid: MLEM.Font.GenericFont.Bold
  commentId: P:MLEM.Font.GenericFont.Bold
  id: Bold
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: Bold
  nameWithType: GenericFont.Bold
  fullName: MLEM.Font.GenericFont.Bold
  type: Property
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Bold
    path: ../MLEM/Font/GenericFont.cs
    startLine: 37
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: The bold version of this font.
  example: []
  syntax:
    content: public abstract GenericFont Bold { get; }
    parameters: []
    return:
      type: MLEM.Font.GenericFont
    content.vb: Public MustOverride ReadOnly Property Bold As GenericFont
  overload: MLEM.Font.GenericFont.Bold*
- uid: MLEM.Font.GenericFont.Italic
  commentId: P:MLEM.Font.GenericFont.Italic
  id: Italic
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: Italic
  nameWithType: GenericFont.Italic
  fullName: MLEM.Font.GenericFont.Italic
  type: Property
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Italic
    path: ../MLEM/Font/GenericFont.cs
    startLine: 42
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: The italic version of this font.
  example: []
  syntax:
    content: public abstract GenericFont Italic { get; }
    parameters: []
    return:
      type: MLEM.Font.GenericFont
    content.vb: Public MustOverride ReadOnly Property Italic As GenericFont
  overload: MLEM.Font.GenericFont.Italic*
- uid: MLEM.Font.GenericFont.LineHeight
  commentId: P:MLEM.Font.GenericFont.LineHeight
  id: LineHeight
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: LineHeight
  nameWithType: GenericFont.LineHeight
  fullName: MLEM.Font.GenericFont.LineHeight
  type: Property
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LineHeight
    path: ../MLEM/Font/GenericFont.cs
    startLine: 48
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    The height of each line of text of this font.

    This is the value that the text's draw position is offset by every time a newline character is reached.
  example: []
  syntax:
    content: public abstract float LineHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public MustOverride ReadOnly Property LineHeight As Single
  overload: MLEM.Font.GenericFont.LineHeight*
- uid: MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
  commentId: M:MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
  id: MeasureCharacter(System.Int32)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: MeasureCharacter(int)
  nameWithType: GenericFont.MeasureCharacter(int)
  fullName: MLEM.Font.GenericFont.MeasureCharacter(int)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MeasureCharacter
    path: ../MLEM/Font/GenericFont.cs
    startLine: 56
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Measures the width of the given code point with the default scale for use in <xref href="MLEM.Font.GenericFont.MeasureString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.

    Note that this method does not support <xref href="MLEM.Font.GenericFont.Nbsp" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Font.GenericFont.Zwsp" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Font.GenericFont.Emsp" data-throw-if-not-resolved="false"></xref> for most generic fonts, which is why <xref href="MLEM.Font.GenericFont.MeasureString(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> should be used even for single characters.
  example: []
  syntax:
    content: protected abstract float MeasureCharacter(int codePoint)
    parameters:
    - id: codePoint
      type: System.Int32
      description: The code point whose width to calculate
    return:
      type: System.Single
      description: The width of the given character with the default scale
    content.vb: Protected MustOverride Function MeasureCharacter(codePoint As Integer) As Single
  overload: MLEM.Font.GenericFont.MeasureCharacter*
  nameWithType.vb: GenericFont.MeasureCharacter(Integer)
  fullName.vb: MLEM.Font.GenericFont.MeasureCharacter(Integer)
  name.vb: MeasureCharacter(Integer)
- uid: MLEM.Font.GenericFont.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  id: DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawCharacter(SpriteBatch, int, string, Vector2, Color, float, Vector2, SpriteEffects, float)
  nameWithType: GenericFont.DrawCharacter(SpriteBatch, int, string, Vector2, Color, float, Vector2, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch, int, string, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawCharacter
    path: ../MLEM/Font/GenericFont.cs
    startLine: 71
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Draws the given code point with the given data for use in <xref href="MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch%2cSystem.Text.StringBuilder%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Color%2cSystem.Single%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cSystem.Single)" data-throw-if-not-resolved="false"></xref>.

    Note that this method should only be called internally for rendering of more complex strings, like in <xref href="MLEM.Formatting.TextFormatter" data-throw-if-not-resolved="false"></xref> <xref href="MLEM.Formatting.Codes.Code" data-throw-if-not-resolved="false"></xref> implementations.
  example: []
  syntax:
    content: public abstract void DrawCharacter(SpriteBatch batch, int codePoint, string character, Vector2 position, Color color, float rotation, Vector2 scale, SpriteEffects effects, float layerDepth)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to draw with.
    - id: codePoint
      type: System.Int32
      description: The code point which will be drawn.
    - id: character
      type: System.String
      description: A string representation of the character which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: rotation
      type: System.Single
      description: A rotation of this character.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: A scaling of this character.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: layerDepth
      type: System.Single
      description: A depth of the layer of this character.
    content.vb: Public MustOverride Sub DrawCharacter(batch As SpriteBatch, codePoint As Integer, character As String, position As Vector2, color As Color, rotation As Single, scale As Vector2, effects As SpriteEffects, layerDepth As Single)
  overload: MLEM.Font.GenericFont.DrawCharacter*
  nameWithType.vb: GenericFont.DrawCharacter(SpriteBatch, Integer, String, Vector2, Color, Single, Vector2, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawCharacter(Microsoft.Xna.Framework.Graphics.SpriteBatch, Integer, String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawCharacter(SpriteBatch, Integer, String, Vector2, Color, Single, Vector2, SpriteEffects, Single)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, string, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  nameWithType: GenericFont.DrawString(SpriteBatch, string, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, string, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 74
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, string text, Vector2 position, Color color, float rotation, Vector2 origin, Vector2 scale, SpriteEffects effects, float layerDepth)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.String
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: A scaling of this string.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: layerDepth
      type: System.Single
      description: A depth of the layer of this string.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As String, position As Vector2, color As Color, rotation As Single, origin As Vector2, scale As Vector2, effects As SpriteEffects, layerDepth As Single)
  overload: MLEM.Font.GenericFont.DrawString*
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, String, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawString(SpriteBatch, String, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  nameWithType: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 79
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, StringBuilder text, Vector2 position, Color color, float rotation, Vector2 origin, Vector2 scale, SpriteEffects effects, float layerDepth)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.Text.StringBuilder
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: A scaling of this string.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: layerDepth
      type: System.Single
      description: A depth of the layer of this string.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As StringBuilder, position As Vector2, color As Color, rotation As Single, origin As Vector2, scale As Vector2, effects As SpriteEffects, layerDepth As Single)
  overload: MLEM.Font.GenericFont.DrawString*
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, string, Vector2, Color, float, Vector2, float, SpriteEffects, float)
  nameWithType: GenericFont.DrawString(SpriteBatch, string, Vector2, Color, float, Vector2, float, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, string, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 84
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, string text, Vector2 position, Color color, float rotation, Vector2 origin, float scale, SpriteEffects effects, float layerDepth)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.String
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: scale
      type: System.Single
      description: A scaling of this string.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: layerDepth
      type: System.Single
      description: A depth of the layer of this string.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As String, position As Vector2, color As Color, rotation As Single, origin As Vector2, scale As Single, effects As SpriteEffects, layerDepth As Single)
  overload: MLEM.Font.GenericFont.DrawString*
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, String, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawString(SpriteBatch, String, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, float, SpriteEffects, float)
  nameWithType: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, float, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 89
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, StringBuilder text, Vector2 position, Color color, float rotation, Vector2 origin, float scale, SpriteEffects effects, float layerDepth)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.Text.StringBuilder
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: scale
      type: System.Single
      description: A scaling of this string.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: layerDepth
      type: System.Single
      description: A depth of the layer of this string.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As StringBuilder, position As Vector2, color As Color, rotation As Single, origin As Vector2, scale As Single, effects As SpriteEffects, layerDepth As Single)
  overload: MLEM.Font.GenericFont.DrawString*
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Single, SpriteEffects, Single)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, string, Vector2, Color)
  nameWithType: GenericFont.DrawString(SpriteBatch, string, Vector2, Color)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, string, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 94
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, string text, Vector2 position, Color color)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.String
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As String, position As Vector2, color As Color)
  overload: MLEM.Font.GenericFont.DrawString*
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, String, Vector2, Color)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  name.vb: DrawString(SpriteBatch, String, Vector2, Color)
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  id: DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: DrawString(SpriteBatch, StringBuilder, Vector2, Color)
  nameWithType: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 99
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void DrawString(SpriteBatch batch, StringBuilder text, Vector2 position, Color color)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: text
      type: System.Text.StringBuilder
      description: The text which will be drawn.
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The drawing location on screen.
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    content.vb: Public Sub DrawString(batch As SpriteBatch, text As StringBuilder, position As Vector2, color As Color)
  overload: MLEM.Font.GenericFont.DrawString*
- uid: MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
  commentId: M:MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
  id: MeasureString(System.String,System.Boolean)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: MeasureString(string, bool)
  nameWithType: GenericFont.MeasureString(string, bool)
  fullName: MLEM.Font.GenericFont.MeasureString(string, bool)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MeasureString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 111
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Measures the width of the given string when drawn with this font's underlying font.

    This method uses <xref href="MLEM.Font.GenericFont.MeasureCharacter(System.Int32)" data-throw-if-not-resolved="false"></xref> internally to calculate the size of known characters and calculates additional characters like <xref href="MLEM.Font.GenericFont.Nbsp" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Font.GenericFont.Zwsp" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Font.GenericFont.Emsp" data-throw-if-not-resolved="false"></xref>.

    If the text contains newline characters (\n), the size returned will represent a rectangle that encompasses the width of the longest line and the string's full height.
  example: []
  syntax:
    content: public Vector2 MeasureString(string text, bool ignoreTrailingSpaces = false)
    parameters:
    - id: text
      type: System.String
      description: The text whose size to calculate
    - id: ignoreTrailingSpaces
      type: System.Boolean
      description: Whether trailing whitespace should be ignored in the returned size, causing the end of each line to be effectively trimmed
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string when drawn with this font
    content.vb: Public Function MeasureString(text As String, ignoreTrailingSpaces As Boolean = False) As Vector2
  overload: MLEM.Font.GenericFont.MeasureString*
  nameWithType.vb: GenericFont.MeasureString(String, Boolean)
  fullName.vb: MLEM.Font.GenericFont.MeasureString(String, Boolean)
  name.vb: MeasureString(String, Boolean)
- uid: MLEM.Font.GenericFont.MeasureString(System.Text.StringBuilder,System.Boolean)
  commentId: M:MLEM.Font.GenericFont.MeasureString(System.Text.StringBuilder,System.Boolean)
  id: MeasureString(System.Text.StringBuilder,System.Boolean)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: MeasureString(StringBuilder, bool)
  nameWithType: GenericFont.MeasureString(StringBuilder, bool)
  fullName: MLEM.Font.GenericFont.MeasureString(System.Text.StringBuilder, bool)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MeasureString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 116
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Measures the width of the given string when drawn with this font's underlying font.

    This method uses <xref href="MLEM.Font.GenericFont.MeasureCharacter(System.Int32)" data-throw-if-not-resolved="false"></xref> internally to calculate the size of known characters and calculates additional characters like <xref href="MLEM.Font.GenericFont.Nbsp" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Font.GenericFont.Zwsp" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Font.GenericFont.Emsp" data-throw-if-not-resolved="false"></xref>.

    If the text contains newline characters (\n), the size returned will represent a rectangle that encompasses the width of the longest line and the string's full height.
  example: []
  syntax:
    content: public Vector2 MeasureString(StringBuilder text, bool ignoreTrailingSpaces = false)
    parameters:
    - id: text
      type: System.Text.StringBuilder
      description: The text whose size to calculate
    - id: ignoreTrailingSpaces
      type: System.Boolean
      description: Whether trailing whitespace should be ignored in the returned size, causing the end of each line to be effectively trimmed
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string when drawn with this font
    content.vb: Public Function MeasureString(text As StringBuilder, ignoreTrailingSpaces As Boolean = False) As Vector2
  overload: MLEM.Font.GenericFont.MeasureString*
  nameWithType.vb: GenericFont.MeasureString(StringBuilder, Boolean)
  fullName.vb: MLEM.Font.GenericFont.MeasureString(System.Text.StringBuilder, Boolean)
  name.vb: MeasureString(StringBuilder, Boolean)
- uid: MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  commentId: M:MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  id: TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: TruncateString(string, float, float, bool, string)
  nameWithType: GenericFont.TruncateString(string, float, float, bool, string)
  fullName: MLEM.Font.GenericFont.TruncateString(string, float, float, bool, string)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TruncateString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 130
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Truncates a string to a given width. If the string's displayed area is larger than the maximum width, the string is cut off.

    Optionally, the string can be cut off a bit sooner, adding the <code class="paramref">ellipsis</code> at the end instead.
  example: []
  syntax:
    content: public string TruncateString(string text, float width, float scale, bool fromBack = false, string ellipsis = "")
    parameters:
    - id: text
      type: System.String
      description: The text to truncate
    - id: width
      type: System.Single
      description: The maximum width, in display pixels based on the font and scale
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    - id: fromBack
      type: System.Boolean
      description: If the string should be truncated from the back rather than the front
    - id: ellipsis
      type: System.String
      description: The characters to add to the end of the string if it is too long
    return:
      type: System.String
      description: The truncated string, or the same string if it is shorter than the maximum width
    content.vb: Public Function TruncateString(text As String, width As Single, scale As Single, fromBack As Boolean = False, ellipsis As String = "") As String
  overload: MLEM.Font.GenericFont.TruncateString*
  nameWithType.vb: GenericFont.TruncateString(String, Single, Single, Boolean, String)
  fullName.vb: MLEM.Font.GenericFont.TruncateString(String, Single, Single, Boolean, String)
  name.vb: TruncateString(String, Single, Single, Boolean, String)
- uid: MLEM.Font.GenericFont.TruncateString(System.Text.StringBuilder,System.Single,System.Single,System.Boolean,System.String)
  commentId: M:MLEM.Font.GenericFont.TruncateString(System.Text.StringBuilder,System.Single,System.Single,System.Boolean,System.String)
  id: TruncateString(System.Text.StringBuilder,System.Single,System.Single,System.Boolean,System.String)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: TruncateString(StringBuilder, float, float, bool, string)
  nameWithType: GenericFont.TruncateString(StringBuilder, float, float, bool, string)
  fullName: MLEM.Font.GenericFont.TruncateString(System.Text.StringBuilder, float, float, bool, string)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TruncateString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 135
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Truncates a string to a given width. If the string's displayed area is larger than the maximum width, the string is cut off.

    Optionally, the string can be cut off a bit sooner, adding the <code class="paramref">ellipsis</code> at the end instead.
  example: []
  syntax:
    content: public StringBuilder TruncateString(StringBuilder text, float width, float scale, bool fromBack = false, string ellipsis = "")
    parameters:
    - id: text
      type: System.Text.StringBuilder
      description: The text to truncate
    - id: width
      type: System.Single
      description: The maximum width, in display pixels based on the font and scale
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    - id: fromBack
      type: System.Boolean
      description: If the string should be truncated from the back rather than the front
    - id: ellipsis
      type: System.String
      description: The characters to add to the end of the string if it is too long
    return:
      type: System.Text.StringBuilder
      description: The truncated string, or the same string if it is shorter than the maximum width
    content.vb: Public Function TruncateString(text As StringBuilder, width As Single, scale As Single, fromBack As Boolean = False, ellipsis As String = "") As StringBuilder
  overload: MLEM.Font.GenericFont.TruncateString*
  nameWithType.vb: GenericFont.TruncateString(StringBuilder, Single, Single, Boolean, String)
  fullName.vb: MLEM.Font.GenericFont.TruncateString(System.Text.StringBuilder, Single, Single, Boolean, String)
  name.vb: TruncateString(StringBuilder, Single, Single, Boolean, String)
- uid: MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
  id: SplitString(System.String,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: SplitString(string, float, float)
  nameWithType: GenericFont.SplitString(string, float, float)
  fullName: MLEM.Font.GenericFont.SplitString(string, float, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SplitString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 148
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Splits a string to a given maximum width, adding newline characters between each line.

    Also splits long words and supports zero-width spaces and takes into account existing newline characters in the passed <code class="paramref">text</code>.

    See <xref href="MLEM.Font.GenericFont.SplitStringSeparate(System.String%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> for a method that differentiates between existing newline characters and splits due to maximum width.
  example: []
  syntax:
    content: public string SplitString(string text, float width, float scale)
    parameters:
    - id: text
      type: System.String
      description: The text to split into multiple lines
    - id: width
      type: System.Single
      description: The maximum width that each line should have
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    return:
      type: System.String
      description: The split string, containing newline characters at each new line
    content.vb: Public Function SplitString(text As String, width As Single, scale As Single) As String
  overload: MLEM.Font.GenericFont.SplitString*
  nameWithType.vb: GenericFont.SplitString(String, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitString(String, Single, Single)
  name.vb: SplitString(String, Single, Single)
- uid: MLEM.Font.GenericFont.SplitString(System.Text.StringBuilder,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitString(System.Text.StringBuilder,System.Single,System.Single)
  id: SplitString(System.Text.StringBuilder,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: SplitString(StringBuilder, float, float)
  nameWithType: GenericFont.SplitString(StringBuilder, float, float)
  fullName: MLEM.Font.GenericFont.SplitString(System.Text.StringBuilder, float, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SplitString
    path: ../MLEM/Font/GenericFont.cs
    startLine: 153
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Splits a string to a given maximum width, adding newline characters between each line.

    Also splits long words and supports zero-width spaces and takes into account existing newline characters in the passed <code class="paramref">text</code>.

    See <xref href="MLEM.Font.GenericFont.SplitStringSeparate(System.String%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> for a method that differentiates between existing newline characters and splits due to maximum width.
  example: []
  syntax:
    content: public string SplitString(StringBuilder text, float width, float scale)
    parameters:
    - id: text
      type: System.Text.StringBuilder
      description: The text to split into multiple lines
    - id: width
      type: System.Single
      description: The maximum width that each line should have
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    return:
      type: System.String
      description: The split string, containing newline characters at each new line
    content.vb: Public Function SplitString(text As StringBuilder, width As Single, scale As Single) As String
  overload: MLEM.Font.GenericFont.SplitString*
  nameWithType.vb: GenericFont.SplitString(StringBuilder, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitString(System.Text.StringBuilder, Single, Single)
  name.vb: SplitString(StringBuilder, Single, Single)
- uid: MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
  id: SplitStringSeparate(System.String,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: SplitStringSeparate(string, float, float)
  nameWithType: GenericFont.SplitStringSeparate(string, float, float)
  fullName: MLEM.Font.GenericFont.SplitStringSeparate(string, float, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SplitStringSeparate
    path: ../MLEM/Font/GenericFont.cs
    startLine: 166
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Splits a string to a given maximum width and returns each split section as a separate string.

    Note that existing new lines are taken into account for line length, but not split in the resulting strings.

    This method differs from <xref href="MLEM.Font.GenericFont.SplitString(System.String%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> in that it differentiates between pre-existing newline characters and splits due to maximum width.
  example: []
  syntax:
    content: public IEnumerable<string> SplitStringSeparate(string text, float width, float scale)
    parameters:
    - id: text
      type: System.String
      description: The text to split into multiple lines
    - id: width
      type: System.Single
      description: The maximum width that each line should have
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The split string as an enumerable of split sections
    content.vb: Public Function SplitStringSeparate(text As String, width As Single, scale As Single) As IEnumerable(Of String)
  overload: MLEM.Font.GenericFont.SplitStringSeparate*
  nameWithType.vb: GenericFont.SplitStringSeparate(String, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitStringSeparate(String, Single, Single)
  name.vb: SplitStringSeparate(String, Single, Single)
- uid: MLEM.Font.GenericFont.SplitStringSeparate(System.Text.StringBuilder,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitStringSeparate(System.Text.StringBuilder,System.Single,System.Single)
  id: SplitStringSeparate(System.Text.StringBuilder,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: SplitStringSeparate(StringBuilder, float, float)
  nameWithType: GenericFont.SplitStringSeparate(StringBuilder, float, float)
  fullName: MLEM.Font.GenericFont.SplitStringSeparate(System.Text.StringBuilder, float, float)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SplitStringSeparate
    path: ../MLEM/Font/GenericFont.cs
    startLine: 171
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Splits a string to a given maximum width and returns each split section as a separate string.

    Note that existing new lines are taken into account for line length, but not split in the resulting strings.

    This method differs from <xref href="MLEM.Font.GenericFont.SplitString(System.String%2cSystem.Single%2cSystem.Single)" data-throw-if-not-resolved="false"></xref> in that it differentiates between pre-existing newline characters and splits due to maximum width.
  example: []
  syntax:
    content: public IEnumerable<string> SplitStringSeparate(StringBuilder text, float width, float scale)
    parameters:
    - id: text
      type: System.Text.StringBuilder
      description: The text to split into multiple lines
    - id: width
      type: System.Single
      description: The maximum width that each line should have
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The split string as an enumerable of split sections
    content.vb: Public Function SplitStringSeparate(text As StringBuilder, width As Single, scale As Single) As IEnumerable(Of String)
  overload: MLEM.Font.GenericFont.SplitStringSeparate*
  nameWithType.vb: GenericFont.SplitStringSeparate(StringBuilder, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitStringSeparate(System.Text.StringBuilder, Single, Single)
  name.vb: SplitStringSeparate(StringBuilder, Single, Single)
- uid: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  id: CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: CalculateStringTransform(Vector2, float, Vector2, Vector2, SpriteEffects, Vector2)
  nameWithType: GenericFont.CalculateStringTransform(Vector2, float, Vector2, Vector2, SpriteEffects, Vector2)
  fullName: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: CalculateStringTransform
    path: ../MLEM/Font/GenericFont.cs
    startLine: 185
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Calculates a transformation matrix for drawing a string with the given data.
  example: []
  syntax:
    content: public Matrix CalculateStringTransform(Vector2 position, float rotation, Vector2 origin, Vector2 scale, SpriteEffects effects, Vector2 flipSize)
    parameters:
    - id: position
      type: Microsoft.Xna.Framework.Vector2
      description: The position to draw at.
    - id: rotation
      type: System.Single
      description: The rotation to draw with.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin to subtract from the position.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale to draw with.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The flipping to draw with.
    - id: flipSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string, which is only used when <code class="paramref">effects</code> is not <xref href="Microsoft.Xna.Framework.Graphics.SpriteEffects.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Matrix
      description: A transformation matrix.
    content.vb: Public Function CalculateStringTransform(position As Vector2, rotation As Single, origin As Vector2, scale As Vector2, effects As SpriteEffects, flipSize As Vector2) As Matrix
  overload: MLEM.Font.GenericFont.CalculateStringTransform*
  nameWithType.vb: GenericFont.CalculateStringTransform(Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2)
  fullName.vb: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  name.vb: CalculateStringTransform(Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2)
- uid: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  id: MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: MoveFlipped(Vector2, SpriteEffects, Vector2)
  nameWithType: GenericFont.MoveFlipped(Vector2, SpriteEffects, Vector2)
  fullName: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MoveFlipped
    path: ../MLEM/Font/GenericFont.cs
    startLine: 226
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Moves the passed <code class="paramref">charPos</code> based on the given flipping data.
  example: []
  syntax:
    content: public Vector2 MoveFlipped(Vector2 charPos, SpriteEffects effects, Vector2 charSize)
    parameters:
    - id: charPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position to move.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The flipping to move based on.
    - id: charSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the object to move, which is only used when <code class="paramref">effects</code> is not <xref href="Microsoft.Xna.Framework.Graphics.SpriteEffects.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The moved position.
    content.vb: Public Function MoveFlipped(charPos As Vector2, effects As SpriteEffects, charSize As Vector2) As Vector2
  overload: MLEM.Font.GenericFont.MoveFlipped*
- uid: MLEM.Font.GenericFont.TransformSingleCharacter(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Font.GenericFont.TransformSingleCharacter(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: TransformSingleCharacter(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Font.GenericFont
  langs:
  - csharp
  - vb
  name: TransformSingleCharacter(Vector2, Vector2, float, Vector2, Vector2, SpriteEffects, Vector2, Vector2)
  nameWithType: GenericFont.TransformSingleCharacter(Vector2, Vector2, float, Vector2, Vector2, SpriteEffects, Vector2, Vector2)
  fullName: MLEM.Font.GenericFont.TransformSingleCharacter(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Font/GenericFont.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TransformSingleCharacter
    path: ../MLEM/Font/GenericFont.cs
    startLine: 247
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Transforms the position of a single character to draw.

    In general, it is efficient to calculate the transformation matrix once at the start (using <xref href="MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2%2cSystem.Single%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cMicrosoft.Xna.Framework.Vector2)" data-throw-if-not-resolved="false"></xref>) and to then apply flipping data for each character individually (using <xref href="MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cMicrosoft.Xna.Framework.Vector2)" data-throw-if-not-resolved="false"></xref>).
  example: []
  syntax:
    content: public Vector2 TransformSingleCharacter(Vector2 stringPos, Vector2 charPosOffset, float rotation, Vector2 origin, Vector2 scale, SpriteEffects effects, Vector2 stringSize, Vector2 charSize)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the string is drawn at.
    - id: charPosOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset from the <code class="paramref">stringPos</code> that the current character is drawn at.
    - id: rotation
      type: System.Single
      description: The rotation to draw with.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin to subtract from the position.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale to draw with.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The flipping to draw with.
    - id: stringSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string, which is only used when <code class="paramref">effects</code> is not <xref href="Microsoft.Xna.Framework.Graphics.SpriteEffects.None" data-throw-if-not-resolved="false"></xref>.
    - id: charSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the current character, which is only used when <code class="paramref">effects</code> is not <xref href="Microsoft.Xna.Framework.Graphics.SpriteEffects.None" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The transformed final draw position.
    content.vb: Public Function TransformSingleCharacter(stringPos As Vector2, charPosOffset As Vector2, rotation As Single, origin As Vector2, scale As Vector2, effects As SpriteEffects, stringSize As Vector2, charSize As Vector2) As Vector2
  overload: MLEM.Font.GenericFont.TransformSingleCharacter*
  nameWithType.vb: GenericFont.TransformSingleCharacter(Vector2, Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2, Vector2)
  fullName.vb: MLEM.Font.GenericFont.TransformSingleCharacter(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  name.vb: TransformSingleCharacter(Vector2, Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2, Vector2)
references:
- uid: MLEM.Font.GenericSpriteFont
  commentId: T:MLEM.Font.GenericSpriteFont
  href: MLEM.Font.GenericSpriteFont.html
  name: GenericSpriteFont
  nameWithType: GenericSpriteFont
  fullName: MLEM.Font.GenericSpriteFont
- uid: MLEM.Font
  commentId: N:MLEM.Font
  href: MLEM.html
  name: MLEM.Font
  nameWithType: MLEM.Font
  fullName: MLEM.Font
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.GenericDataHolder.html
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.IGenericDataHolder.html
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Font.GenericFont.LineHeight
  commentId: P:MLEM.Font.GenericFont.LineHeight
  parent: MLEM.Font.GenericFont
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_LineHeight
  name: LineHeight
  nameWithType: GenericFont.LineHeight
  fullName: MLEM.Font.GenericFont.LineHeight
- uid: Microsoft.Xna.Framework.Graphics.SpriteFont
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteFont
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteFont
  nameWithType: SpriteFont
  fullName: Microsoft.Xna.Framework.Graphics.SpriteFont
- uid: MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
  commentId: M:MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureString_System_String_System_Boolean_
  name: MeasureString(string, bool)
  nameWithType: GenericFont.MeasureString(string, bool)
  fullName: MLEM.Font.GenericFont.MeasureString(string, bool)
  nameWithType.vb: GenericFont.MeasureString(String, Boolean)
  fullName.vb: MLEM.Font.GenericFont.MeasureString(String, Boolean)
  name.vb: MeasureString(String, Boolean)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
    name: MeasureString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureString_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.MeasureString(System.String,System.Boolean)
    name: MeasureString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureString_System_String_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: MLEM.Font.GenericFont
  commentId: T:MLEM.Font.GenericFont
  parent: MLEM.Font
  href: MLEM.Font.GenericFont.html
  name: GenericFont
  nameWithType: GenericFont
  fullName: MLEM.Font.GenericFont
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitString_System_String_System_Single_System_Single_
  name: SplitString(string, float, float)
  nameWithType: GenericFont.SplitString(string, float, float)
  fullName: MLEM.Font.GenericFont.SplitString(string, float, float)
  nameWithType.vb: GenericFont.SplitString(String, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitString(String, Single, Single)
  name.vb: SplitString(String, Single, Single)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
    name: SplitString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitString_System_String_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.SplitString(System.String,System.Single,System.Single)
    name: SplitString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitString_System_String_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Font.GenericFont.Bold*
  commentId: Overload:MLEM.Font.GenericFont.Bold
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Bold
  name: Bold
  nameWithType: GenericFont.Bold
  fullName: MLEM.Font.GenericFont.Bold
- uid: MLEM.Font.GenericFont.Italic*
  commentId: Overload:MLEM.Font.GenericFont.Italic
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Italic
  name: Italic
  nameWithType: GenericFont.Italic
  fullName: MLEM.Font.GenericFont.Italic
- uid: MLEM.Font.GenericFont.LineHeight*
  commentId: Overload:MLEM.Font.GenericFont.LineHeight
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_LineHeight
  name: LineHeight
  nameWithType: GenericFont.LineHeight
  fullName: MLEM.Font.GenericFont.LineHeight
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Font.GenericFont.Nbsp
  commentId: F:MLEM.Font.GenericFont.Nbsp
  parent: MLEM.Font.GenericFont
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Nbsp
  name: Nbsp
  nameWithType: GenericFont.Nbsp
  fullName: MLEM.Font.GenericFont.Nbsp
- uid: MLEM.Font.GenericFont.Zwsp
  commentId: F:MLEM.Font.GenericFont.Zwsp
  parent: MLEM.Font.GenericFont
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Zwsp
  name: Zwsp
  nameWithType: GenericFont.Zwsp
  fullName: MLEM.Font.GenericFont.Zwsp
- uid: MLEM.Font.GenericFont.Emsp
  commentId: F:MLEM.Font.GenericFont.Emsp
  parent: MLEM.Font.GenericFont
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Emsp
  name: Emsp
  nameWithType: GenericFont.Emsp
  fullName: MLEM.Font.GenericFont.Emsp
- uid: MLEM.Font.GenericFont.MeasureCharacter*
  commentId: Overload:MLEM.Font.GenericFont.MeasureCharacter
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureCharacter_System_Int32_
  name: MeasureCharacter
  nameWithType: GenericFont.MeasureCharacter
  fullName: MLEM.Font.GenericFont.MeasureCharacter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  commentId: M:MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_DrawString_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Text_StringBuilder_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Single_
  name: DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  nameWithType: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, float, Vector2, Vector2, SpriteEffects, float)
  fullName: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, float)
  nameWithType.vb: GenericFont.DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
  fullName.vb: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch, System.Text.StringBuilder, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Color, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Single)
  name.vb: DrawString(SpriteBatch, StringBuilder, Vector2, Color, Single, Vector2, Vector2, SpriteEffects, Single)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
    name: DrawString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_DrawString_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Text_StringBuilder_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.DrawString(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Text.StringBuilder,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Color,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Single)
    name: DrawString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_DrawString_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Text_StringBuilder_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Single_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Text.StringBuilder
    name: StringBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Formatting.TextFormatter
  commentId: T:MLEM.Formatting.TextFormatter
  parent: MLEM.Formatting
  href: MLEM.Formatting.TextFormatter.html
  name: TextFormatter
  nameWithType: TextFormatter
  fullName: MLEM.Formatting.TextFormatter
- uid: MLEM.Formatting.Codes.Code
  commentId: T:MLEM.Formatting.Codes.Code
  parent: MLEM.Formatting.Codes
  href: MLEM.Formatting.Codes.Code.html
  name: Code
  nameWithType: Code
  fullName: MLEM.Formatting.Codes.Code
- uid: MLEM.Font.GenericFont.DrawCharacter*
  commentId: Overload:MLEM.Font.GenericFont.DrawCharacter
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_DrawCharacter_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_String_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Single_
  name: DrawCharacter
  nameWithType: GenericFont.DrawCharacter
  fullName: MLEM.Font.GenericFont.DrawCharacter
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: MLEM.Formatting
  commentId: N:MLEM.Formatting
  href: MLEM.html
  name: MLEM.Formatting
  nameWithType: MLEM.Formatting
  fullName: MLEM.Formatting
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
- uid: MLEM.Formatting.Codes
  commentId: N:MLEM.Formatting.Codes
  href: MLEM.html
  name: MLEM.Formatting.Codes
  nameWithType: MLEM.Formatting.Codes
  fullName: MLEM.Formatting.Codes
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Font.GenericFont.DrawString*
  commentId: Overload:MLEM.Font.GenericFont.DrawString
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_DrawString_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_String_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Color_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Single_
  name: DrawString
  nameWithType: GenericFont.DrawString
  fullName: MLEM.Font.GenericFont.DrawString
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
  commentId: M:MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureCharacter_System_Int32_
  name: MeasureCharacter(int)
  nameWithType: GenericFont.MeasureCharacter(int)
  fullName: MLEM.Font.GenericFont.MeasureCharacter(int)
  nameWithType.vb: GenericFont.MeasureCharacter(Integer)
  fullName.vb: MLEM.Font.GenericFont.MeasureCharacter(Integer)
  name.vb: MeasureCharacter(Integer)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
    name: MeasureCharacter
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureCharacter_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.MeasureCharacter(System.Int32)
    name: MeasureCharacter
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureCharacter_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MLEM.Font.GenericFont.MeasureString*
  commentId: Overload:MLEM.Font.GenericFont.MeasureString
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MeasureString_System_String_System_Boolean_
  name: MeasureString
  nameWithType: GenericFont.MeasureString
  fullName: MLEM.Font.GenericFont.MeasureString
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Font.GenericFont.TruncateString*
  commentId: Overload:MLEM.Font.GenericFont.TruncateString
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_TruncateString_System_String_System_Single_System_Single_System_Boolean_System_String_
  name: TruncateString
  nameWithType: GenericFont.TruncateString
  fullName: MLEM.Font.GenericFont.TruncateString
- uid: MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
  commentId: M:MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitStringSeparate_System_String_System_Single_System_Single_
  name: SplitStringSeparate(string, float, float)
  nameWithType: GenericFont.SplitStringSeparate(string, float, float)
  fullName: MLEM.Font.GenericFont.SplitStringSeparate(string, float, float)
  nameWithType.vb: GenericFont.SplitStringSeparate(String, Single, Single)
  fullName.vb: MLEM.Font.GenericFont.SplitStringSeparate(String, Single, Single)
  name.vb: SplitStringSeparate(String, Single, Single)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
    name: SplitStringSeparate
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitStringSeparate_System_String_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.SplitStringSeparate(System.String,System.Single,System.Single)
    name: SplitStringSeparate
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitStringSeparate_System_String_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Font.GenericFont.SplitString*
  commentId: Overload:MLEM.Font.GenericFont.SplitString
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitString_System_String_System_Single_System_Single_
  name: SplitString
  nameWithType: GenericFont.SplitString
  fullName: MLEM.Font.GenericFont.SplitString
- uid: MLEM.Font.GenericFont.SplitStringSeparate*
  commentId: Overload:MLEM.Font.GenericFont.SplitStringSeparate
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_SplitStringSeparate_System_String_System_Single_System_Single_
  name: SplitStringSeparate
  nameWithType: GenericFont.SplitStringSeparate
  fullName: MLEM.Font.GenericFont.SplitStringSeparate
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects.None
  commentId: F:Microsoft.Xna.Framework.Graphics.SpriteEffects.None
  isExternal: true
  name: None
  nameWithType: SpriteEffects.None
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects.None
- uid: MLEM.Font.GenericFont.CalculateStringTransform*
  commentId: Overload:MLEM.Font.GenericFont.CalculateStringTransform
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_CalculateStringTransform_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  name: CalculateStringTransform
  nameWithType: GenericFont.CalculateStringTransform
  fullName: MLEM.Font.GenericFont.CalculateStringTransform
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: MLEM.Font.GenericFont.MoveFlipped*
  commentId: Overload:MLEM.Font.GenericFont.MoveFlipped
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MoveFlipped_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  name: MoveFlipped
  nameWithType: GenericFont.MoveFlipped
  fullName: MLEM.Font.GenericFont.MoveFlipped
- uid: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_CalculateStringTransform_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  name: CalculateStringTransform(Vector2, float, Vector2, Vector2, SpriteEffects, Vector2)
  nameWithType: GenericFont.CalculateStringTransform(Vector2, float, Vector2, Vector2, SpriteEffects, Vector2)
  fullName: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  nameWithType.vb: GenericFont.CalculateStringTransform(Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2)
  fullName.vb: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  name.vb: CalculateStringTransform(Vector2, Single, Vector2, Vector2, SpriteEffects, Vector2)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
    name: CalculateStringTransform
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_CalculateStringTransform_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.CalculateStringTransform(Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
    name: CalculateStringTransform
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_CalculateStringTransform_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MoveFlipped_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  name: MoveFlipped(Vector2, SpriteEffects, Vector2)
  nameWithType: GenericFont.MoveFlipped(Vector2, SpriteEffects, Vector2)
  fullName: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
    name: MoveFlipped
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MoveFlipped_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.MoveFlipped(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
    name: MoveFlipped
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_MoveFlipped_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Font.GenericFont.TransformSingleCharacter*
  commentId: Overload:MLEM.Font.GenericFont.TransformSingleCharacter
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_TransformSingleCharacter_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: TransformSingleCharacter
  nameWithType: GenericFont.TransformSingleCharacter
  fullName: MLEM.Font.GenericFont.TransformSingleCharacter
