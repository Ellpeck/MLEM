### YamlMime:ManagedReference
items:
- uid: MLEM.Formatting.TextFormatter
  commentId: T:MLEM.Formatting.TextFormatter
  id: TextFormatter
  parent: MLEM.Formatting
  children:
  - MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - MLEM.Formatting.TextFormatter.Codes
  - MLEM.Formatting.TextFormatter.DefaultOutlineColor
  - MLEM.Formatting.TextFormatter.DefaultOutlineThickness
  - MLEM.Formatting.TextFormatter.DefaultShadowColor
  - MLEM.Formatting.TextFormatter.DefaultShadowOffset
  - MLEM.Formatting.TextFormatter.DefaultSubOffset
  - MLEM.Formatting.TextFormatter.DefaultSupOffset
  - MLEM.Formatting.TextFormatter.DefaultWobblyHeight
  - MLEM.Formatting.TextFormatter.DefaultWobblyModifier
  - MLEM.Formatting.TextFormatter.LineThickness
  - MLEM.Formatting.TextFormatter.Macros
  - MLEM.Formatting.TextFormatter.OutlineDiagonals
  - MLEM.Formatting.TextFormatter.ResolveMacros(System.String)
  - MLEM.Formatting.TextFormatter.StrikethroughOffset
  - MLEM.Formatting.TextFormatter.StripAllFormatting(System.String)
  - MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  - MLEM.Formatting.TextFormatter.UnderlineOffset
  langs:
  - csharp
  - vb
  name: TextFormatter
  nameWithType: TextFormatter
  fullName: MLEM.Formatting.TextFormatter
  type: Class
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TextFormatter
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 16
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    A text formatter is used for drawing text using <xref href="MLEM.Font.GenericFont" data-throw-if-not-resolved="false"></xref> that contains different colors, bold/italic sections and animations.

    To format a string of text, use the codes as specified in the constructor. To tokenize and render a formatted string, use <xref href="MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont%2cSystem.String%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class TextFormatter : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class TextFormatter Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - MLEM.Formatting.TextFormatter.MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  - MLEM.Formatting.TextFormatter.MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(System.String,MLEM.Textures.TextureRegion,System.Boolean)
- uid: MLEM.Formatting.TextFormatter.Codes
  commentId: F:MLEM.Formatting.TextFormatter.Codes
  id: Codes
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: Codes
  nameWithType: TextFormatter.Codes
  fullName: MLEM.Formatting.TextFormatter.Codes
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Codes
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 22
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The formatting codes that this text formatter uses.

    The <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> defines how the formatting code should be matched.
  example: []
  syntax:
    content: public readonly Dictionary<Regex, Code.Constructor> Codes
    return:
      type: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.Codes.Code.Constructor}
    content.vb: Public ReadOnly Codes As Dictionary(Of Regex, Code.Constructor)
- uid: MLEM.Formatting.TextFormatter.Macros
  commentId: F:MLEM.Formatting.TextFormatter.Macros
  id: Macros
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: Macros
  nameWithType: TextFormatter.Macros
  fullName: MLEM.Formatting.TextFormatter.Macros
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Macros
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 28
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The macros that this text formatter uses.

    A macro is a <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref> that turns a snippet of text into another snippet of text.

    Macros can resolve recursively and can resolve into formatting codes.
  example: []
  syntax:
    content: public readonly Dictionary<Regex, TextFormatter.Macro> Macros
    return:
      type: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.TextFormatter.Macro}
    content.vb: Public ReadOnly Macros As Dictionary(Of Regex, TextFormatter.Macro)
- uid: MLEM.Formatting.TextFormatter.LineThickness
  commentId: F:MLEM.Formatting.TextFormatter.LineThickness
  id: LineThickness
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: LineThickness
  nameWithType: TextFormatter.LineThickness
  fullName: MLEM.Formatting.TextFormatter.LineThickness
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LineThickness
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 34
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The line thickness used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.UnderlineCode" data-throw-if-not-resolved="false"></xref>-based formatting codes are drawn.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float LineThickness
    return:
      type: System.Single
    content.vb: Public LineThickness As Single
- uid: MLEM.Formatting.TextFormatter.UnderlineOffset
  commentId: F:MLEM.Formatting.TextFormatter.UnderlineOffset
  id: UnderlineOffset
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: UnderlineOffset
  nameWithType: TextFormatter.UnderlineOffset
  fullName: MLEM.Formatting.TextFormatter.UnderlineOffset
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: UnderlineOffset
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 39
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The underline offset used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.UnderlineCode" data-throw-if-not-resolved="false"></xref> is drawn.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float UnderlineOffset
    return:
      type: System.Single
    content.vb: Public UnderlineOffset As Single
- uid: MLEM.Formatting.TextFormatter.StrikethroughOffset
  commentId: F:MLEM.Formatting.TextFormatter.StrikethroughOffset
  id: StrikethroughOffset
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: StrikethroughOffset
  nameWithType: TextFormatter.StrikethroughOffset
  fullName: MLEM.Formatting.TextFormatter.StrikethroughOffset
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: StrikethroughOffset
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The strikethrough offset used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.UnderlineCode" data-throw-if-not-resolved="false"></xref>'s strikethrough variant is drawn.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float StrikethroughOffset
    return:
      type: System.Single
    content.vb: Public StrikethroughOffset As Single
- uid: MLEM.Formatting.TextFormatter.DefaultSubOffset
  commentId: F:MLEM.Formatting.TextFormatter.DefaultSubOffset
  id: DefaultSubOffset
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultSubOffset
  nameWithType: TextFormatter.DefaultSubOffset
  fullName: MLEM.Formatting.TextFormatter.DefaultSubOffset
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultSubOffset
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 49
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default subscript offset used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.SubSupCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float DefaultSubOffset
    return:
      type: System.Single
    content.vb: Public DefaultSubOffset As Single
- uid: MLEM.Formatting.TextFormatter.DefaultSupOffset
  commentId: F:MLEM.Formatting.TextFormatter.DefaultSupOffset
  id: DefaultSupOffset
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultSupOffset
  nameWithType: TextFormatter.DefaultSupOffset
  fullName: MLEM.Formatting.TextFormatter.DefaultSupOffset
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultSupOffset
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 54
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default superscript offset used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.SubSupCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float DefaultSupOffset
    return:
      type: System.Single
    content.vb: Public DefaultSupOffset As Single
- uid: MLEM.Formatting.TextFormatter.DefaultShadowColor
  commentId: F:MLEM.Formatting.TextFormatter.DefaultShadowColor
  id: DefaultShadowColor
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultShadowColor
  nameWithType: TextFormatter.DefaultShadowColor
  fullName: MLEM.Formatting.TextFormatter.DefaultShadowColor
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultShadowColor
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 59
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default shadow color used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.ShadowCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public Color DefaultShadowColor
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public DefaultShadowColor As Color
- uid: MLEM.Formatting.TextFormatter.DefaultShadowOffset
  commentId: F:MLEM.Formatting.TextFormatter.DefaultShadowOffset
  id: DefaultShadowOffset
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultShadowOffset
  nameWithType: TextFormatter.DefaultShadowOffset
  fullName: MLEM.Formatting.TextFormatter.DefaultShadowOffset
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultShadowOffset
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 64
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default shadow offset used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.ShadowCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public Vector2 DefaultShadowOffset
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public DefaultShadowOffset As Vector2
- uid: MLEM.Formatting.TextFormatter.DefaultWobblyModifier
  commentId: F:MLEM.Formatting.TextFormatter.DefaultWobblyModifier
  id: DefaultWobblyModifier
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultWobblyModifier
  nameWithType: TextFormatter.DefaultWobblyModifier
  fullName: MLEM.Formatting.TextFormatter.DefaultWobblyModifier
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultWobblyModifier
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 69
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default wobbly modifier used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.WobblyCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float DefaultWobblyModifier
    return:
      type: System.Single
    content.vb: Public DefaultWobblyModifier As Single
- uid: MLEM.Formatting.TextFormatter.DefaultWobblyHeight
  commentId: F:MLEM.Formatting.TextFormatter.DefaultWobblyHeight
  id: DefaultWobblyHeight
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultWobblyHeight
  nameWithType: TextFormatter.DefaultWobblyHeight
  fullName: MLEM.Formatting.TextFormatter.DefaultWobblyHeight
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultWobblyHeight
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 74
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default wobbly modifier used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.WobblyCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float DefaultWobblyHeight
    return:
      type: System.Single
    content.vb: Public DefaultWobblyHeight As Single
- uid: MLEM.Formatting.TextFormatter.DefaultOutlineThickness
  commentId: F:MLEM.Formatting.TextFormatter.DefaultOutlineThickness
  id: DefaultOutlineThickness
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultOutlineThickness
  nameWithType: TextFormatter.DefaultOutlineThickness
  fullName: MLEM.Formatting.TextFormatter.DefaultOutlineThickness
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultOutlineThickness
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 79
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default outline thickness used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.OutlineCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public float DefaultOutlineThickness
    return:
      type: System.Single
    content.vb: Public DefaultOutlineThickness As Single
- uid: MLEM.Formatting.TextFormatter.DefaultOutlineColor
  commentId: F:MLEM.Formatting.TextFormatter.DefaultOutlineColor
  id: DefaultOutlineColor
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: DefaultOutlineColor
  nameWithType: TextFormatter.DefaultOutlineColor
  fullName: MLEM.Formatting.TextFormatter.DefaultOutlineColor
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultOutlineColor
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 84
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The default outline color used by this text formatter, which determines how the default <xref href="MLEM.Formatting.Codes.OutlineCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public Color DefaultOutlineColor
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public DefaultOutlineColor As Color
- uid: MLEM.Formatting.TextFormatter.OutlineDiagonals
  commentId: F:MLEM.Formatting.TextFormatter.OutlineDiagonals
  id: OutlineDiagonals
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: OutlineDiagonals
  nameWithType: TextFormatter.OutlineDiagonals
  fullName: MLEM.Formatting.TextFormatter.OutlineDiagonals
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: OutlineDiagonals
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 89
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Whether the default outline used by this text formatter should also draw outlines diagonally, which determines how the default <xref href="MLEM.Formatting.Codes.OutlineCode" data-throw-if-not-resolved="false"></xref> is drawn if no custom value is used. Non-diagonally drawn outlines might generally look better when using a pixelart font.

    Note that this value only has an effect on the default formatting codes created through the <xref href="MLEM.Formatting.TextFormatter.%23ctor(System.Boolean%2cSystem.Boolean%2cSystem.Boolean%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> constructor.
  example: []
  syntax:
    content: public bool OutlineDiagonals
    return:
      type: System.Boolean
    content.vb: Public OutlineDiagonals As Boolean
- uid: MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: TextFormatter(bool, bool, bool, bool)
  nameWithType: TextFormatter.TextFormatter(bool, bool, bool, bool)
  fullName: MLEM.Formatting.TextFormatter.TextFormatter(bool, bool, bool, bool)
  type: Constructor
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 98
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Creates a new text formatter with an optional set of default formatting codes.
  example: []
  syntax:
    content: public TextFormatter(bool hasFontModifiers = true, bool hasColors = true, bool hasAnimations = true, bool hasMacros = true)
    parameters:
    - id: hasFontModifiers
      type: System.Boolean
      description: Whether default font modifier codes should be added, including bold, italic, strikethrough, shadow, subscript, and more.
    - id: hasColors
      type: System.Boolean
      description: Whether default color codes should be added, including all <xref href="Microsoft.Xna.Framework.Color" data-throw-if-not-resolved="false"></xref> values and the ability to use custom colors.
    - id: hasAnimations
      type: System.Boolean
      description: Whether default animation codes should be added, namely the wobbly animation.
    - id: hasMacros
      type: System.Boolean
      description: Whether default macros should be added, including TeX's ~ non-breaking space and more.
    content.vb: Public Sub New(hasFontModifiers As Boolean = True, hasColors As Boolean = True, hasAnimations As Boolean = True, hasMacros As Boolean = True)
  overload: MLEM.Formatting.TextFormatter.#ctor*
  nameWithType.vb: TextFormatter.New(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: MLEM.Formatting.TextFormatter.New(Boolean, Boolean, Boolean, Boolean)
  name.vb: New(Boolean, Boolean, Boolean, Boolean)
- uid: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  id: Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: Tokenize(GenericFont, string, TextAlignment)
  nameWithType: TextFormatter.Tokenize(GenericFont, string, TextAlignment)
  fullName: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont, string, MLEM.Formatting.TextAlignment)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Tokenize
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 154
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Tokenizes a string, returning a tokenized string that is ready for splitting, measuring and drawing.
  example: []
  syntax:
    content: public TokenizedString Tokenize(GenericFont font, string s, TextAlignment alignment = TextAlignment.Left)
    parameters:
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use for tokenization. Note that this font needs to be the same that will later be used for splitting, measuring and/or drawing.
    - id: s
      type: System.String
      description: The string to tokenize
    - id: alignment
      type: MLEM.Formatting.TextAlignment
      description: The text alignment that should be used. This alignment can later be changed using <xref href="MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref>.
    return:
      type: MLEM.Formatting.TokenizedString
      description: The tokenized string.
    content.vb: Public Function Tokenize(font As GenericFont, s As String, alignment As TextAlignment = TextAlignment.Left) As TokenizedString
  overload: MLEM.Formatting.TextFormatter.Tokenize*
  nameWithType.vb: TextFormatter.Tokenize(GenericFont, String, TextAlignment)
  fullName.vb: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont, String, MLEM.Formatting.TextAlignment)
  name.vb: Tokenize(GenericFont, String, TextAlignment)
- uid: MLEM.Formatting.TextFormatter.ResolveMacros(System.String)
  commentId: M:MLEM.Formatting.TextFormatter.ResolveMacros(System.String)
  id: ResolveMacros(System.String)
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: ResolveMacros(string)
  nameWithType: TextFormatter.ResolveMacros(string)
  fullName: MLEM.Formatting.TextFormatter.ResolveMacros(string)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ResolveMacros
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 198
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Resolves the macros in the given string recursively, until no more macros can be resolved.

    This method is used by <xref href="MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont%2cSystem.String%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref>, meaning that it does not explicitly have to be called when using text formatting.
  example: []
  syntax:
    content: public string ResolveMacros(string s)
    parameters:
    - id: s
      type: System.String
      description: The string to resolve macros for
    return:
      type: System.String
      description: The final, recursively resolved string
    content.vb: Public Function ResolveMacros(s As String) As String
  overload: MLEM.Formatting.TextFormatter.ResolveMacros*
  nameWithType.vb: TextFormatter.ResolveMacros(String)
  fullName.vb: MLEM.Formatting.TextFormatter.ResolveMacros(String)
  name.vb: ResolveMacros(String)
- uid: MLEM.Formatting.TextFormatter.StripAllFormatting(System.String)
  commentId: M:MLEM.Formatting.TextFormatter.StripAllFormatting(System.String)
  id: StripAllFormatting(System.String)
  parent: MLEM.Formatting.TextFormatter
  langs:
  - csharp
  - vb
  name: StripAllFormatting(string)
  nameWithType: TextFormatter.StripAllFormatting(string)
  fullName: MLEM.Formatting.TextFormatter.StripAllFormatting(string)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TextFormatter.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: StripAllFormatting
    path: ../MLEM/Formatting/TextFormatter.cs
    startLine: 225
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Strips all formatting codes from the given string, causing a string without any formatting codes to be returned.

    Note that, if a <xref href="MLEM.Formatting.TokenizedString" data-throw-if-not-resolved="false"></xref> has already been created using <xref href="MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont%2cSystem.String%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref>, it is more efficient to use <xref href="MLEM.Formatting.TokenizedString.String" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Formatting.TokenizedString.DisplayString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string StripAllFormatting(string s)
    parameters:
    - id: s
      type: System.String
      description: The string to strip formatting codes from.
    return:
      type: System.String
      description: The stripped string.
    content.vb: Public Function StripAllFormatting(s As String) As String
  overload: MLEM.Formatting.TextFormatter.StripAllFormatting*
  nameWithType.vb: TextFormatter.StripAllFormatting(String)
  fullName.vb: MLEM.Formatting.TextFormatter.StripAllFormatting(String)
  name.vb: StripAllFormatting(String)
references:
- uid: MLEM.Font.GenericFont
  commentId: T:MLEM.Font.GenericFont
  parent: MLEM.Font
  href: MLEM.Font.GenericFont.html
  name: GenericFont
  nameWithType: GenericFont
  fullName: MLEM.Font.GenericFont
- uid: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
  isExternal: true
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_Tokenize_MLEM_Font_GenericFont_System_String_MLEM_Formatting_TextAlignment_
  name: Tokenize(GenericFont, string, TextAlignment)
  nameWithType: TextFormatter.Tokenize(GenericFont, string, TextAlignment)
  fullName: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont, string, MLEM.Formatting.TextAlignment)
  nameWithType.vb: TextFormatter.Tokenize(GenericFont, String, TextAlignment)
  fullName.vb: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont, String, MLEM.Formatting.TextAlignment)
  name.vb: Tokenize(GenericFont, String, TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
    name: Tokenize
    href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_Tokenize_MLEM_Font_GenericFont_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TextFormatter.Tokenize(MLEM.Font.GenericFont,System.String,MLEM.Formatting.TextAlignment)
    name: Tokenize
    href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_Tokenize_MLEM_Font_GenericFont_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting
  commentId: N:MLEM.Formatting
  href: MLEM.html
  name: MLEM.Formatting
  nameWithType: MLEM.Formatting
  fullName: MLEM.Formatting
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.GenericDataHolder.html
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.IGenericDataHolder.html
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: MLEM.Formatting.TextFormatter.MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  commentId: M:MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  parent: MLEM.Formatting.Codes.ImageCodeExtensions
  definition: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  name: AddImage(TextFormatter, string, SpriteAnimation, bool)
  nameWithType: ImageCodeExtensions.AddImage(TextFormatter, string, SpriteAnimation, bool)
  fullName: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, string, MLEM.Animations.SpriteAnimation, bool)
  nameWithType.vb: ImageCodeExtensions.AddImage(TextFormatter, String, SpriteAnimation, Boolean)
  fullName.vb: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, String, MLEM.Animations.SpriteAnimation, Boolean)
  name.vb: AddImage(TextFormatter, String, SpriteAnimation, Boolean)
  spec.csharp:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Animations.SpriteAnimation
    name: SpriteAnimation
    href: MLEM.Animations.SpriteAnimation.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Animations.SpriteAnimation
    name: SpriteAnimation
    href: MLEM.Animations.SpriteAnimation.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Formatting.TextFormatter.MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(System.String,MLEM.Textures.TextureRegion,System.Boolean)
  commentId: M:MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
  parent: MLEM.Formatting.Codes.ImageCodeExtensions
  definition: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
  href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  name: AddImage(TextFormatter, string, TextureRegion, bool)
  nameWithType: ImageCodeExtensions.AddImage(TextFormatter, string, TextureRegion, bool)
  fullName: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, string, MLEM.Textures.TextureRegion, bool)
  nameWithType.vb: ImageCodeExtensions.AddImage(TextFormatter, String, TextureRegion, Boolean)
  fullName.vb: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, String, MLEM.Textures.TextureRegion, Boolean)
  name.vb: AddImage(TextFormatter, String, TextureRegion, Boolean)
  spec.csharp:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Font
  commentId: N:MLEM.Font
  href: MLEM.html
  name: MLEM.Font
  nameWithType: MLEM.Font
  fullName: MLEM.Font
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  commentId: M:MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
  isExternal: true
  href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  name: AddImage(TextFormatter, string, SpriteAnimation, bool)
  nameWithType: ImageCodeExtensions.AddImage(TextFormatter, string, SpriteAnimation, bool)
  fullName: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, string, MLEM.Animations.SpriteAnimation, bool)
  nameWithType.vb: ImageCodeExtensions.AddImage(TextFormatter, String, SpriteAnimation, Boolean)
  fullName.vb: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, String, MLEM.Animations.SpriteAnimation, Boolean)
  name.vb: AddImage(TextFormatter, String, SpriteAnimation, Boolean)
  spec.csharp:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Animations.SpriteAnimation
    name: SpriteAnimation
    href: MLEM.Animations.SpriteAnimation.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Animations.SpriteAnimation,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Animations_SpriteAnimation_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Animations.SpriteAnimation
    name: SpriteAnimation
    href: MLEM.Animations.SpriteAnimation.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Formatting.Codes.ImageCodeExtensions
  commentId: T:MLEM.Formatting.Codes.ImageCodeExtensions
  parent: MLEM.Formatting.Codes
  href: MLEM.Formatting.Codes.ImageCodeExtensions.html
  name: ImageCodeExtensions
  nameWithType: ImageCodeExtensions
  fullName: MLEM.Formatting.Codes.ImageCodeExtensions
- uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
  commentId: M:MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
  isExternal: true
  href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  name: AddImage(TextFormatter, string, TextureRegion, bool)
  nameWithType: ImageCodeExtensions.AddImage(TextFormatter, string, TextureRegion, bool)
  fullName: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, string, MLEM.Textures.TextureRegion, bool)
  nameWithType.vb: ImageCodeExtensions.AddImage(TextFormatter, String, TextureRegion, Boolean)
  fullName.vb: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter, String, MLEM.Textures.TextureRegion, Boolean)
  name.vb: AddImage(TextFormatter, String, TextureRegion, Boolean)
  spec.csharp:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.Codes.ImageCodeExtensions.AddImage(MLEM.Formatting.TextFormatter,System.String,MLEM.Textures.TextureRegion,System.Boolean)
    name: AddImage
    href: MLEM.Formatting.Codes.ImageCodeExtensions.html#MLEM_Formatting_Codes_ImageCodeExtensions_AddImage_MLEM_Formatting_TextFormatter_System_String_MLEM_Textures_TextureRegion_System_Boolean_
  - name: (
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Formatting.Codes
  commentId: N:MLEM.Formatting.Codes
  href: MLEM.html
  name: MLEM.Formatting.Codes
  nameWithType: MLEM.Formatting.Codes
  fullName: MLEM.Formatting.Codes
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.Codes.Code.Constructor}
  commentId: T:System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.Codes.Code.Constructor}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Regex, Code.Constructor>
  nameWithType: Dictionary<Regex, Code.Constructor>
  fullName: System.Collections.Generic.Dictionary<System.Text.RegularExpressions.Regex, MLEM.Formatting.Codes.Code.Constructor>
  nameWithType.vb: Dictionary(Of Regex, Code.Constructor)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Text.RegularExpressions.Regex, MLEM.Formatting.Codes.Code.Constructor)
  name.vb: Dictionary(Of Regex, Code.Constructor)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: .
  - uid: MLEM.Formatting.Codes.Code.Constructor
    name: Constructor
    href: MLEM.Formatting.Codes.Code.Constructor.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: .
  - uid: MLEM.Formatting.Codes.Code.Constructor
    name: Constructor
    href: MLEM.Formatting.Codes.Code.Constructor.html
  - name: )
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.TextFormatter.Macro}
  commentId: T:System.Collections.Generic.Dictionary{System.Text.RegularExpressions.Regex,MLEM.Formatting.TextFormatter.Macro}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<Regex, TextFormatter.Macro>
  nameWithType: Dictionary<Regex, TextFormatter.Macro>
  fullName: System.Collections.Generic.Dictionary<System.Text.RegularExpressions.Regex, MLEM.Formatting.TextFormatter.Macro>
  nameWithType.vb: Dictionary(Of Regex, TextFormatter.Macro)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Text.RegularExpressions.Regex, MLEM.Formatting.TextFormatter.Macro)
  name.vb: Dictionary(Of Regex, TextFormatter.Macro)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: .
  - uid: MLEM.Formatting.TextFormatter.Macro
    name: Macro
    href: MLEM.Formatting.TextFormatter.Macro.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextFormatter
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html
  - name: .
  - uid: MLEM.Formatting.TextFormatter.Macro
    name: Macro
    href: MLEM.Formatting.TextFormatter.Macro.html
  - name: )
- uid: MLEM.Formatting.Codes.UnderlineCode
  commentId: T:MLEM.Formatting.Codes.UnderlineCode
  parent: MLEM.Formatting.Codes
  href: MLEM.Formatting.Codes.UnderlineCode.html
  name: UnderlineCode
  nameWithType: UnderlineCode
  fullName: MLEM.Formatting.Codes.UnderlineCode
- uid: MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter__ctor_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: TextFormatter(bool, bool, bool, bool)
  nameWithType: TextFormatter.TextFormatter(bool, bool, bool, bool)
  fullName: MLEM.Formatting.TextFormatter.TextFormatter(bool, bool, bool, bool)
  nameWithType.vb: TextFormatter.New(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: MLEM.Formatting.TextFormatter.New(Boolean, Boolean, Boolean, Boolean)
  name.vb: New(Boolean, Boolean, Boolean, Boolean)
  spec.csharp:
  - uid: MLEM.Formatting.TextFormatter.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: TextFormatter
    href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter__ctor_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Formatting.Codes.SubSupCode
  commentId: T:MLEM.Formatting.Codes.SubSupCode
  href: MLEM.Formatting.Codes.SubSupCode.html
  name: SubSupCode
  nameWithType: SubSupCode
  fullName: MLEM.Formatting.Codes.SubSupCode
- uid: MLEM.Formatting.Codes.ShadowCode
  commentId: T:MLEM.Formatting.Codes.ShadowCode
  href: MLEM.Formatting.Codes.ShadowCode.html
  name: ShadowCode
  nameWithType: ShadowCode
  fullName: MLEM.Formatting.Codes.ShadowCode
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Formatting.Codes.WobblyCode
  commentId: T:MLEM.Formatting.Codes.WobblyCode
  href: MLEM.Formatting.Codes.WobblyCode.html
  name: WobblyCode
  nameWithType: WobblyCode
  fullName: MLEM.Formatting.Codes.WobblyCode
- uid: MLEM.Formatting.Codes.OutlineCode
  commentId: T:MLEM.Formatting.Codes.OutlineCode
  href: MLEM.Formatting.Codes.OutlineCode.html
  name: OutlineCode
  nameWithType: OutlineCode
  fullName: MLEM.Formatting.Codes.OutlineCode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Formatting.TextFormatter.#ctor*
  commentId: Overload:MLEM.Formatting.TextFormatter.#ctor
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter__ctor_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: TextFormatter
  nameWithType: TextFormatter.TextFormatter
  fullName: MLEM.Formatting.TextFormatter.TextFormatter
  nameWithType.vb: TextFormatter.New
  fullName.vb: MLEM.Formatting.TextFormatter.New
  name.vb: New
- uid: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Realign_MLEM_Font_GenericFont_MLEM_Formatting_TextAlignment_
  name: Realign(GenericFont, TextAlignment)
  nameWithType: TokenizedString.Realign(GenericFont, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont, MLEM.Formatting.TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
    name: Realign
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Realign_MLEM_Font_GenericFont_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
    name: Realign
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Realign_MLEM_Font_GenericFont_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting.TextFormatter.Tokenize*
  commentId: Overload:MLEM.Formatting.TextFormatter.Tokenize
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_Tokenize_MLEM_Font_GenericFont_System_String_MLEM_Formatting_TextAlignment_
  name: Tokenize
  nameWithType: TextFormatter.Tokenize
  fullName: MLEM.Formatting.TextFormatter.Tokenize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Formatting.TextAlignment
  commentId: T:MLEM.Formatting.TextAlignment
  parent: MLEM.Formatting
  href: MLEM.Formatting.TextAlignment.html
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: MLEM.Formatting.TextAlignment
- uid: MLEM.Formatting.TokenizedString
  commentId: T:MLEM.Formatting.TokenizedString
  parent: MLEM.Formatting
  href: MLEM.Formatting.TokenizedString.html
  name: TokenizedString
  nameWithType: TokenizedString
  fullName: MLEM.Formatting.TokenizedString
- uid: MLEM.Formatting.TextFormatter.ResolveMacros*
  commentId: Overload:MLEM.Formatting.TextFormatter.ResolveMacros
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_ResolveMacros_System_String_
  name: ResolveMacros
  nameWithType: TextFormatter.ResolveMacros
  fullName: MLEM.Formatting.TextFormatter.ResolveMacros
- uid: MLEM.Formatting.TokenizedString.String
  commentId: F:MLEM.Formatting.TokenizedString.String
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_String
  name: String
  nameWithType: TokenizedString.String
  fullName: MLEM.Formatting.TokenizedString.String
- uid: MLEM.Formatting.TokenizedString.DisplayString
  commentId: P:MLEM.Formatting.TokenizedString.DisplayString
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_DisplayString
  name: DisplayString
  nameWithType: TokenizedString.DisplayString
  fullName: MLEM.Formatting.TokenizedString.DisplayString
- uid: MLEM.Formatting.TextFormatter.StripAllFormatting*
  commentId: Overload:MLEM.Formatting.TextFormatter.StripAllFormatting
  href: MLEM.Formatting.TextFormatter.html#MLEM_Formatting_TextFormatter_StripAllFormatting_System_String_
  name: StripAllFormatting
  nameWithType: TextFormatter.StripAllFormatting
  fullName: MLEM.Formatting.TextFormatter.StripAllFormatting
