### YamlMime:ManagedReference
items:
- uid: MLEM.Extended.Tiled.TiledMapCollisions
  commentId: T:MLEM.Extended.Tiled.TiledMapCollisions
  id: TiledMapCollisions
  parent: MLEM.Extended.Tiled
  children:
  - MLEM.Extended.Tiled.TiledMapCollisions.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  - MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  - MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  - MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  - MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations(System.Func{MonoGame.Extended.RectangleF},System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean},System.Boolean)
  - MLEM.Extended.Tiled.TiledMapCollisions.IsColliding(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  - MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  - MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: TiledMapCollisions
  nameWithType: TiledMapCollisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions
  type: Class
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TiledMapCollisions
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 15
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    A collision handler for a MonoGame.Extended tiled tile map.

    The idea behind this collision handler is that, on the map's tileset, each tile is assigned a certain rectangular area. That area is converted into a collision map that is dealt with in tile units, where each tile's covered area is 1x1 units big.
  example: []
  syntax:
    content: public class TiledMapCollisions
    content.vb: Public Class TiledMapCollisions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
- uid: MLEM.Extended.Tiled.TiledMapCollisions.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  id: '#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)'
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: TiledMapCollisions(TiledMap, CollectCollisions)
  nameWithType: TiledMapCollisions.TiledMapCollisions(TiledMap, TiledMapCollisions.CollectCollisions)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TiledMapCollisions(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  type: Constructor
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 26
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Creates a new tiled map collision handler for the given map
  example: []
  syntax:
    content: public TiledMapCollisions(TiledMap map = null, TiledMapCollisions.CollectCollisions collisionFunction = null)
    parameters:
    - id: map
      type: MonoGame.Extended.Tiled.TiledMap
      description: The map
    - id: collisionFunction
      type: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
      description: The function used to collect the collision info of a tile, or null to use <xref href="MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List%7bMonoGame.Extended.RectangleF%7d%2cMLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(map As TiledMap = Nothing, collisionFunction As TiledMapCollisions.CollectCollisions = Nothing)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.#ctor*
  nameWithType.vb: TiledMapCollisions.New(TiledMap, TiledMapCollisions.CollectCollisions)
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.New(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  name.vb: New(TiledMap, CollectCollisions)
- uid: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  id: SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: SetMap(TiledMap, CollectCollisions)
  nameWithType: TiledMapCollisions.SetMap(TiledMap, TiledMapCollisions.CollectCollisions)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SetMap
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 36
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Sets this collision handler's handled map
  example: []
  syntax:
    content: public void SetMap(TiledMap map, TiledMapCollisions.CollectCollisions collisionFunction = null)
    parameters:
    - id: map
      type: MonoGame.Extended.Tiled.TiledMap
      description: The map
    - id: collisionFunction
      type: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
      description: The function used to collect the collision info of a tile, or null to use <xref href="MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List%7bMonoGame.Extended.RectangleF%7d%2cMLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub SetMap(map As TiledMap, collisionFunction As TiledMapCollisions.CollectCollisions = Nothing)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.SetMap*
- uid: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo(System.Int32,System.Int32,System.Int32)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo(System.Int32,System.Int32,System.Int32)
  id: UpdateCollisionInfo(System.Int32,System.Int32,System.Int32)
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: UpdateCollisionInfo(int, int, int)
  nameWithType: TiledMapCollisions.UpdateCollisionInfo(int, int, int)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo(int, int, int)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: UpdateCollisionInfo
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 55
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Updates the collision info for the tile at the given position.
  example: []
  syntax:
    content: public void UpdateCollisionInfo(int layerIndex, int x, int y)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: The index of the tile's layer in <xref href="MonoGame.Extended.Tiled.TiledMap.TileLayers" data-throw-if-not-resolved="false"></xref>
    - id: x
      type: System.Int32
      description: The tile's x coordinate
    - id: y
      type: System.Int32
      description: The tile's y coordinate
    content.vb: Public Sub UpdateCollisionInfo(layerIndex As Integer, x As Integer, y As Integer)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo*
  nameWithType.vb: TiledMapCollisions.UpdateCollisionInfo(Integer, Integer, Integer)
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo(Integer, Integer, Integer)
  name.vb: UpdateCollisionInfo(Integer, Integer, Integer)
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  id: GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: GetCollidingTiles(RectangleF, Func<TileCollisionInfo, bool>)
  nameWithType: TiledMapCollisions.GetCollidingTiles(RectangleF, Func<TiledMapCollisions.TileCollisionInfo, bool>)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF, System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetCollidingTiles
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 73
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Returns an enumerable of tile collision infos that intersect the given area.

    Optionally, a predicate can be supplied that narrows the search.
  example: []
  syntax:
    content: public IEnumerable<TiledMapCollisions.TileCollisionInfo> GetCollidingTiles(RectangleF area, Func<TiledMapCollisions.TileCollisionInfo, bool> included = null)
    parameters:
    - id: area
      type: MonoGame.Extended.RectangleF
      description: The area to check for collisions in
    - id: included
      type: System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
      description: A function that determines if a certain info should be included or not
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo}
      description: An enumerable of collision infos for that area
    content.vb: Public Function GetCollidingTiles(area As RectangleF, included As Func(Of TiledMapCollisions.TileCollisionInfo, Boolean) = Nothing) As IEnumerable(Of TiledMapCollisions.TileCollisionInfo)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles*
  nameWithType.vb: TiledMapCollisions.GetCollidingTiles(RectangleF, Func(Of TiledMapCollisions.TileCollisionInfo, Boolean))
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF, System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean))
  name.vb: GetCollidingTiles(RectangleF, Func(Of TileCollisionInfo, Boolean))
- uid: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.IsColliding(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  id: IsColliding(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: IsColliding(RectangleF, Func<TileCollisionInfo, bool>)
  nameWithType: TiledMapCollisions.IsColliding(RectangleF, Func<TiledMapCollisions.TileCollisionInfo, bool>)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding(MonoGame.Extended.RectangleF, System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsColliding
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 107
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Returns whether there are any colliding tiles in the given area.

    Optionally, a predicate can be supplied that narrows the search.
  example: []
  syntax:
    content: public bool IsColliding(RectangleF area, Func<TiledMapCollisions.TileCollisionInfo, bool> included = null)
    parameters:
    - id: area
      type: MonoGame.Extended.RectangleF
      description: The area to check for collisions in
    - id: included
      type: System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
      description: A function that determines if a certain info should be included or not
    return:
      type: System.Boolean
      description: True if there are any colliders in the area, false otherwise
    content.vb: Public Function IsColliding(area As RectangleF, included As Func(Of TiledMapCollisions.TileCollisionInfo, Boolean) = Nothing) As Boolean
  overload: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding*
  nameWithType.vb: TiledMapCollisions.IsColliding(RectangleF, Func(Of TiledMapCollisions.TileCollisionInfo, Boolean))
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding(MonoGame.Extended.RectangleF, System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean))
  name.vb: IsColliding(RectangleF, Func(Of TileCollisionInfo, Boolean))
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  id: GetCollidingAreas(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: GetCollidingAreas(RectangleF, Func<TileCollisionInfo, bool>)
  nameWithType: TiledMapCollisions.GetCollidingAreas(RectangleF, Func<TiledMapCollisions.TileCollisionInfo, bool>)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas(MonoGame.Extended.RectangleF, System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetCollidingAreas
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 118
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Returns an enumerable of all of the <xref href="MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions" data-throw-if-not-resolved="false"></xref> of the colliding tiles in the given area.

    This method is a convenience method based on <xref href="MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF%2cSystem.Func%7bMLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo%2cSystem.Boolean%7d)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public IEnumerable<RectangleF> GetCollidingAreas(RectangleF area, Func<TiledMapCollisions.TileCollisionInfo, bool> included = null)
    parameters:
    - id: area
      type: MonoGame.Extended.RectangleF
      description: The area to check for collisions in
    - id: included
      type: System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
      description: A function that determines if a certain info should be included or not
    return:
      type: System.Collections.Generic.IEnumerable{MonoGame.Extended.RectangleF}
      description: An enumerable of collision rectangles for that area
    content.vb: Public Function GetCollidingAreas(area As RectangleF, included As Func(Of TiledMapCollisions.TileCollisionInfo, Boolean) = Nothing) As IEnumerable(Of RectangleF)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas*
  nameWithType.vb: TiledMapCollisions.GetCollidingAreas(RectangleF, Func(Of TiledMapCollisions.TileCollisionInfo, Boolean))
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas(MonoGame.Extended.RectangleF, System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean))
  name.vb: GetCollidingAreas(RectangleF, Func(Of TileCollisionInfo, Boolean))
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations(System.Func{MonoGame.Extended.RectangleF},System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean},System.Boolean)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations(System.Func{MonoGame.Extended.RectangleF},System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean},System.Boolean)
  id: GetPenetrations(System.Func{MonoGame.Extended.RectangleF},System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean},System.Boolean)
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: GetPenetrations(Func<RectangleF>, Func<TileCollisionInfo, bool>, bool)
  nameWithType: TiledMapCollisions.GetPenetrations(Func<RectangleF>, Func<TiledMapCollisions.TileCollisionInfo, bool>, bool)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations(System.Func<MonoGame.Extended.RectangleF>, System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>, bool)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetPenetrations
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 134
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Returns an enumerable of normals and penetration amounts for each <xref href="MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo" data-throw-if-not-resolved="false"></xref> that intersects with the given <xref href="MonoGame.Extended.RectangleF" data-throw-if-not-resolved="false"></xref> area.

    The normals and penetration amounts are based on <xref href="MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF%2cMLEM.Misc.RectangleF%2cMicrosoft.Xna.Framework.Vector2%40%2cSystem.Single%40)" data-throw-if-not-resolved="false"></xref>.

    Note that all x penetrations are returned before all y penetrations, which improves collision detection in sidescrolling games with gravity. Note that this behavior can be inverted using <code class="paramref">prioritizeX</code>.
  example: []
  syntax:
    content: public IEnumerable<(Vector2, float)> GetPenetrations(Func<RectangleF> getArea, Func<TiledMapCollisions.TileCollisionInfo, bool> included = null, bool prioritizeX = true)
    parameters:
    - id: getArea
      type: System.Func{MonoGame.Extended.RectangleF}
      description: The area to penetrate
    - id: included
      type: System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
      description: A function that determines if a certain info should be included or not
    - id: prioritizeX
      type: System.Boolean
      description: Whether all x penetrations should be prioritized (returned first). If this is false, all y penetrations are prioritized instead.
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}}
      description: A set of normals and penetration amounts
    content.vb: Public Function GetPenetrations(getArea As Func(Of RectangleF), included As Func(Of TiledMapCollisions.TileCollisionInfo, Boolean) = Nothing, prioritizeX As Boolean = True) As IEnumerable(Of (Vector2, Single))
  overload: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations*
  nameWithType.vb: TiledMapCollisions.GetPenetrations(Func(Of RectangleF), Func(Of TiledMapCollisions.TileCollisionInfo, Boolean), Boolean)
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations(System.Func(Of MonoGame.Extended.RectangleF), System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean), Boolean)
  name.vb: GetPenetrations(Func(Of RectangleF), Func(Of TileCollisionInfo, Boolean), Boolean)
- uid: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  id: DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  parent: MLEM.Extended.Tiled.TiledMapCollisions
  langs:
  - csharp
  - vb
  name: DefaultCollectCollisions(List<RectangleF>, TileCollisionInfo)
  nameWithType: TiledMapCollisions.DefaultCollectCollisions(List<RectangleF>, TiledMapCollisions.TileCollisionInfo)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List<MonoGame.Extended.RectangleF>, MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/TiledMapCollisions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultCollectCollisions
    path: ../MLEM.Extended/Tiled/TiledMapCollisions.cs
    startLine: 150
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: The default implementation of <xref href="MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions" data-throw-if-not-resolved="false"></xref> which is used by <xref href="MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap%2cMLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)" data-throw-if-not-resolved="false"></xref> if no custom collision collection function is passed
  example: []
  syntax:
    content: public static void DefaultCollectCollisions(List<RectangleF> collisions, TiledMapCollisions.TileCollisionInfo tile)
    parameters:
    - id: collisions
      type: System.Collections.Generic.List{MonoGame.Extended.RectangleF}
      description: The list of collisions to add to
    - id: tile
      type: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
      description: The tile's collision information
    content.vb: Public Shared Sub DefaultCollectCollisions(collisions As List(Of RectangleF), tile As TiledMapCollisions.TileCollisionInfo)
  overload: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions*
  nameWithType.vb: TiledMapCollisions.DefaultCollectCollisions(List(Of RectangleF), TiledMapCollisions.TileCollisionInfo)
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List(Of MonoGame.Extended.RectangleF), MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  name.vb: DefaultCollectCollisions(List(Of RectangleF), TileCollisionInfo)
references:
- uid: MLEM.Extended.Tiled
  commentId: N:MLEM.Extended.Tiled
  href: MLEM.html
  name: MLEM.Extended.Tiled
  nameWithType: MLEM.Extended.Tiled
  fullName: MLEM.Extended.Tiled
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Tiled
    name: Tiled
    href: MLEM.Extended.Tiled.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Tiled
    name: Tiled
    href: MLEM.Extended.Tiled.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<TiledMapCollisions>(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<TiledMapCollisions>(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<MLEM.Extended.Tiled.TiledMapCollisions>(MLEM.Extended.Tiled.TiledMapCollisions, MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of TiledMapCollisions)(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of MLEM.Extended.Tiled.TiledMapCollisions)(MLEM.Extended.Tiled.TiledMapCollisions, MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of TiledMapCollisions)(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<TiledMapCollisions>(TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<TiledMapCollisions>(TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<MLEM.Extended.Tiled.TiledMapCollisions>(MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of TiledMapCollisions)(TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of MLEM.Extended.Tiled.TiledMapCollisions)(MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of TiledMapCollisions)(TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<TiledMapCollisions>(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<TiledMapCollisions>(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<MLEM.Extended.Tiled.TiledMapCollisions>(MLEM.Extended.Tiled.TiledMapCollisions, MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of TiledMapCollisions)(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of MLEM.Extended.Tiled.TiledMapCollisions)(MLEM.Extended.Tiled.TiledMapCollisions, MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of TiledMapCollisions)(TiledMapCollisions, TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.TiledMapCollisions,MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<TiledMapCollisions>(TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<TiledMapCollisions>(TiledMapCollisions, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<MLEM.Extended.Tiled.TiledMapCollisions>(MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of TiledMapCollisions)(TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of MLEM.Extended.Tiled.TiledMapCollisions)(MLEM.Extended.Tiled.TiledMapCollisions, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of TiledMapCollisions)(TiledMapCollisions, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Extended.Tiled.TiledMapCollisions,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions
  commentId: T:MLEM.Data.CopyExtensions
  parent: MLEM.Data
  href: MLEM.Data.CopyExtensions.html
  name: CopyExtensions
  nameWithType: CopyExtensions
  fullName: MLEM.Data.CopyExtensions
- uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  href: MLEM.html
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
- uid: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  isExternal: true
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_DefaultCollectCollisions_System_Collections_Generic_List_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_
  name: DefaultCollectCollisions(List<RectangleF>, TileCollisionInfo)
  nameWithType: TiledMapCollisions.DefaultCollectCollisions(List<RectangleF>, TiledMapCollisions.TileCollisionInfo)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List<MonoGame.Extended.RectangleF>, MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  nameWithType.vb: TiledMapCollisions.DefaultCollectCollisions(List(Of RectangleF), TiledMapCollisions.TileCollisionInfo)
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List(Of MonoGame.Extended.RectangleF), MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  name.vb: DefaultCollectCollisions(List(Of RectangleF), TileCollisionInfo)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
    name: DefaultCollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_DefaultCollectCollisions_System_Collections_Generic_List_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '>'
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions(System.Collections.Generic.List{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
    name: DefaultCollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_DefaultCollectCollisions_System_Collections_Generic_List_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_
  - name: (
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.#ctor*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.#ctor
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions__ctor_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_TiledMapCollisions_CollectCollisions_
  name: TiledMapCollisions
  nameWithType: TiledMapCollisions.TiledMapCollisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TiledMapCollisions
  nameWithType.vb: TiledMapCollisions.New
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.New
  name.vb: New
- uid: MonoGame.Extended.Tiled.TiledMap
  commentId: T:MonoGame.Extended.Tiled.TiledMap
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMap
  nameWithType: TiledMap
  fullName: MonoGame.Extended.Tiled.TiledMap
- uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
  commentId: T:MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.TiledMapCollisions.html
  name: TiledMapCollisions.CollectCollisions
  nameWithType: TiledMapCollisions.CollectCollisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
  spec.csharp:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
    name: CollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
    name: CollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions.html
- uid: MonoGame.Extended.Tiled
  commentId: N:MonoGame.Extended.Tiled
  isExternal: true
  name: MonoGame.Extended.Tiled
  nameWithType: MonoGame.Extended.Tiled
  fullName: MonoGame.Extended.Tiled
  spec.csharp:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  - name: .
  - uid: MonoGame.Extended.Tiled
    name: Tiled
    isExternal: true
  spec.vb:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  - name: .
  - uid: MonoGame.Extended.Tiled
    name: Tiled
    isExternal: true
- uid: MLEM.Extended.Tiled.TiledMapCollisions.SetMap*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.SetMap
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_SetMap_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_TiledMapCollisions_CollectCollisions_
  name: SetMap
  nameWithType: TiledMapCollisions.SetMap
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.SetMap
- uid: MonoGame.Extended.Tiled.TiledMap.TileLayers
  commentId: P:MonoGame.Extended.Tiled.TiledMap.TileLayers
  isExternal: true
  name: TileLayers
  nameWithType: TiledMap.TileLayers
  fullName: MonoGame.Extended.Tiled.TiledMap.TileLayers
- uid: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_UpdateCollisionInfo_System_Int32_System_Int32_System_Int32_
  name: UpdateCollisionInfo
  nameWithType: TiledMapCollisions.UpdateCollisionInfo
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.UpdateCollisionInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetCollidingTiles_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  name: GetCollidingTiles
  nameWithType: TiledMapCollisions.GetCollidingTiles
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles
- uid: MonoGame.Extended.RectangleF
  commentId: T:MonoGame.Extended.RectangleF
  parent: MonoGame.Extended
  isExternal: true
  name: RectangleF
  nameWithType: RectangleF
  fullName: MonoGame.Extended.RectangleF
- uid: System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
  commentId: T:System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TiledMapCollisions.TileCollisionInfo, bool>
  nameWithType: Func<TiledMapCollisions.TileCollisionInfo, bool>
  fullName: System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>
  nameWithType.vb: Func(Of TiledMapCollisions.TileCollisionInfo, Boolean)
  fullName.vb: System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean)
  name.vb: Func(Of TiledMapCollisions.TileCollisionInfo, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.IEnumerable{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TiledMapCollisions.TileCollisionInfo>
  nameWithType: IEnumerable<TiledMapCollisions.TileCollisionInfo>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo>
  nameWithType.vb: IEnumerable(Of TiledMapCollisions.TileCollisionInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo)
  name.vb: IEnumerable(Of TiledMapCollisions.TileCollisionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: )
- uid: MonoGame.Extended
  commentId: N:MonoGame.Extended
  isExternal: true
  name: MonoGame.Extended
  nameWithType: MonoGame.Extended
  fullName: MonoGame.Extended
  spec.csharp:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  spec.vb:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.IsColliding
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_IsColliding_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  name: IsColliding
  nameWithType: TiledMapCollisions.IsColliding
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.IsColliding
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  commentId: F:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
  href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html#MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_Collisions
  name: Collisions
  nameWithType: TiledMapCollisions.TileCollisionInfo.Collisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.Collisions
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
  isExternal: true
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetCollidingTiles_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  name: GetCollidingTiles(RectangleF, Func<TileCollisionInfo, bool>)
  nameWithType: TiledMapCollisions.GetCollidingTiles(RectangleF, Func<TiledMapCollisions.TileCollisionInfo, bool>)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF, System.Func<MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, bool>)
  nameWithType.vb: TiledMapCollisions.GetCollidingTiles(RectangleF, Func(Of TiledMapCollisions.TileCollisionInfo, Boolean))
  fullName.vb: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF, System.Func(Of MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo, Boolean))
  name.vb: GetCollidingTiles(RectangleF, Func(Of TileCollisionInfo, Boolean))
  spec.csharp:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
    name: GetCollidingTiles
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetCollidingTiles_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  - name: (
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingTiles(MonoGame.Extended.RectangleF,System.Func{MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo,System.Boolean})
    name: GetCollidingTiles
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetCollidingTiles_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  - name: (
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetCollidingAreas_MonoGame_Extended_RectangleF_System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__
  name: GetCollidingAreas
  nameWithType: TiledMapCollisions.GetCollidingAreas
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetCollidingAreas
- uid: System.Collections.Generic.IEnumerable{MonoGame.Extended.RectangleF}
  commentId: T:System.Collections.Generic.IEnumerable{MonoGame.Extended.RectangleF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<RectangleF>
  nameWithType: IEnumerable<RectangleF>
  fullName: System.Collections.Generic.IEnumerable<MonoGame.Extended.RectangleF>
  nameWithType.vb: IEnumerable(Of RectangleF)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MonoGame.Extended.RectangleF)
  name.vb: IEnumerable(Of RectangleF)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  commentId: T:MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.TiledMapCollisions.html
  name: TiledMapCollisions.TileCollisionInfo
  nameWithType: TiledMapCollisions.TileCollisionInfo
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
  spec.csharp:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions
    name: TiledMapCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.html
  - name: .
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo
    name: TileCollisionInfo
    href: MLEM.Extended.Tiled.TiledMapCollisions.TileCollisionInfo.html
- uid: MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF,MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  commentId: M:MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF,MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  isExternal: true
  href: MLEM.Extensions.NumberExtensions.html#MLEM_Extensions_NumberExtensions_Penetrate_MLEM_Misc_RectangleF_MLEM_Misc_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  name: Penetrate(RectangleF, RectangleF, out Vector2, out float)
  nameWithType: NumberExtensions.Penetrate(RectangleF, RectangleF, out Vector2, out float)
  fullName: MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF, MLEM.Misc.RectangleF, out Microsoft.Xna.Framework.Vector2, out float)
  nameWithType.vb: NumberExtensions.Penetrate(RectangleF, RectangleF, Vector2, Single)
  fullName.vb: MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF, MLEM.Misc.RectangleF, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: Penetrate(RectangleF, RectangleF, Vector2, Single)
  spec.csharp:
  - uid: MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF,MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Extensions.NumberExtensions.html#MLEM_Extensions_NumberExtensions_Penetrate_MLEM_Misc_RectangleF_MLEM_Misc_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    href: MLEM.Misc.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    href: MLEM.Misc.RectangleF.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Extensions.NumberExtensions.Penetrate(MLEM.Misc.RectangleF,MLEM.Misc.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Extensions.NumberExtensions.html#MLEM_Extensions_NumberExtensions_Penetrate_MLEM_Misc_RectangleF_MLEM_Misc_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    href: MLEM.Misc.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.RectangleF
    name: RectangleF
    href: MLEM.Misc.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_GetPenetrations_System_Func_MonoGame_Extended_RectangleF__System_Func_MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_System_Boolean__System_Boolean_
  name: GetPenetrations
  nameWithType: TiledMapCollisions.GetPenetrations
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.GetPenetrations
- uid: System.Func{MonoGame.Extended.RectangleF}
  commentId: T:System.Func{MonoGame.Extended.RectangleF}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<RectangleF>
  nameWithType: Func<RectangleF>
  fullName: System.Func<MonoGame.Extended.RectangleF>
  nameWithType.vb: Func(Of RectangleF)
  fullName.vb: System.Func(Of MonoGame.Extended.RectangleF)
  name.vb: Func(Of RectangleF)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{Microsoft.Xna.Framework.Vector2,System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Vector2, float)>
  nameWithType: IEnumerable<(Vector2, float)>
  fullName: System.Collections.Generic.IEnumerable<(Microsoft.Xna.Framework.Vector2, float)>
  nameWithType.vb: IEnumerable(Of (Vector2, Single))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Microsoft.Xna.Framework.Vector2, Single))
  name.vb: IEnumerable(Of (Vector2, Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  commentId: M:MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  isExternal: true
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_SetMap_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_TiledMapCollisions_CollectCollisions_
  name: SetMap(TiledMap, CollectCollisions)
  nameWithType: TiledMapCollisions.SetMap(TiledMap, TiledMapCollisions.CollectCollisions)
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
    name: SetMap
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_SetMap_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_TiledMapCollisions_CollectCollisions_
  - name: (
  - uid: MonoGame.Extended.Tiled.TiledMap
    name: TiledMap
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
    name: CollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions)
    name: SetMap
    href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_SetMap_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_TiledMapCollisions_CollectCollisions_
  - name: (
  - uid: MonoGame.Extended.Tiled.TiledMap
    name: TiledMap
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions
    name: CollectCollisions
    href: MLEM.Extended.Tiled.TiledMapCollisions.CollectCollisions.html
  - name: )
- uid: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions*
  commentId: Overload:MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions
  href: MLEM.Extended.Tiled.TiledMapCollisions.html#MLEM_Extended_Tiled_TiledMapCollisions_DefaultCollectCollisions_System_Collections_Generic_List_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_TiledMapCollisions_TileCollisionInfo_
  name: DefaultCollectCollisions
  nameWithType: TiledMapCollisions.DefaultCollectCollisions
  fullName: MLEM.Extended.Tiled.TiledMapCollisions.DefaultCollectCollisions
- uid: System.Collections.Generic.List{MonoGame.Extended.RectangleF}
  commentId: T:System.Collections.Generic.List{MonoGame.Extended.RectangleF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RectangleF>
  nameWithType: List<RectangleF>
  fullName: System.Collections.Generic.List<MonoGame.Extended.RectangleF>
  nameWithType.vb: List(Of RectangleF)
  fullName.vb: System.Collections.Generic.List(Of MonoGame.Extended.RectangleF)
  name.vb: List(Of RectangleF)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
