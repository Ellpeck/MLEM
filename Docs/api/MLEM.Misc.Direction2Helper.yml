### YamlMime:ManagedReference
items:
- uid: MLEM.Misc.Direction2Helper
  commentId: T:MLEM.Misc.Direction2Helper
  id: Direction2Helper
  parent: MLEM.Misc
  children:
  - MLEM.Misc.Direction2Helper.Adjacent
  - MLEM.Misc.Direction2Helper.All
  - MLEM.Misc.Direction2Helper.AllExceptNone
  - MLEM.Misc.Direction2Helper.Angle(MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.Diagonals
  - MLEM.Misc.Direction2Helper.IsAdjacent(MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.IsDiagonal(MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.Offsets(System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2})
  - MLEM.Misc.Direction2Helper.Opposite(MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.RotateBy(MLEM.Misc.Direction2,MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  - MLEM.Misc.Direction2Helper.RotateCcw(MLEM.Misc.Direction2,System.Boolean)
  - MLEM.Misc.Direction2Helper.RotateCw(MLEM.Misc.Direction2,System.Boolean)
  - MLEM.Misc.Direction2Helper.To90Direction(Microsoft.Xna.Framework.Vector2)
  - MLEM.Misc.Direction2Helper.ToDirection(Microsoft.Xna.Framework.Vector2)
  langs:
  - csharp
  - vb
  name: Direction2Helper
  nameWithType: Direction2Helper
  fullName: MLEM.Misc.Direction2Helper
  type: Class
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Direction2Helper
    path: ../MLEM/Misc/Direction2.cs
    startLine: 68
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: A set of helper and extension methods for dealing with <xref href="MLEM.Misc.Direction2" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class Direction2Helper
    content.vb: Public Module Direction2Helper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Misc.Direction2Helper.All
  commentId: F:MLEM.Misc.Direction2Helper.All
  id: All
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: All
  nameWithType: Direction2Helper.All
  fullName: MLEM.Misc.Direction2Helper.All
  type: Field
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: All
    path: ../MLEM/Misc/Direction2.cs
    startLine: 73
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: All <xref href="MLEM.Misc.Direction2" data-throw-if-not-resolved="false"></xref> enum values
  example: []
  syntax:
    content: public static readonly Direction2[] All
    return:
      type: MLEM.Misc.Direction2[]
    content.vb: Public Shared ReadOnly All As Direction2()
- uid: MLEM.Misc.Direction2Helper.Adjacent
  commentId: F:MLEM.Misc.Direction2Helper.Adjacent
  id: Adjacent
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Adjacent
  nameWithType: Direction2Helper.Adjacent
  fullName: MLEM.Misc.Direction2Helper.Adjacent
  type: Field
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Adjacent
    path: ../MLEM/Misc/Direction2.cs
    startLine: 80
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: The <xref href="MLEM.Misc.Direction2.Up" data-throw-if-not-resolved="false"></xref> through <xref href="MLEM.Misc.Direction2.Left" data-throw-if-not-resolved="false"></xref> directions
  example: []
  syntax:
    content: public static readonly Direction2[] Adjacent
    return:
      type: MLEM.Misc.Direction2[]
    content.vb: Public Shared ReadOnly Adjacent As Direction2()
- uid: MLEM.Misc.Direction2Helper.Diagonals
  commentId: F:MLEM.Misc.Direction2Helper.Diagonals
  id: Diagonals
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Diagonals
  nameWithType: Direction2Helper.Diagonals
  fullName: MLEM.Misc.Direction2Helper.Diagonals
  type: Field
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Diagonals
    path: ../MLEM/Misc/Direction2.cs
    startLine: 84
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: The <xref href="MLEM.Misc.Direction2.UpRight" data-throw-if-not-resolved="false"></xref> through <xref href="MLEM.Misc.Direction2.UpLeft" data-throw-if-not-resolved="false"></xref> directions
  example: []
  syntax:
    content: public static readonly Direction2[] Diagonals
    return:
      type: MLEM.Misc.Direction2[]
    content.vb: Public Shared ReadOnly Diagonals As Direction2()
- uid: MLEM.Misc.Direction2Helper.AllExceptNone
  commentId: F:MLEM.Misc.Direction2Helper.AllExceptNone
  id: AllExceptNone
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: AllExceptNone
  nameWithType: Direction2Helper.AllExceptNone
  fullName: MLEM.Misc.Direction2Helper.AllExceptNone
  type: Field
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AllExceptNone
    path: ../MLEM/Misc/Direction2.cs
    startLine: 88
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: All directions except <xref href="MLEM.Misc.Direction2.None" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static readonly Direction2[] AllExceptNone
    return:
      type: MLEM.Misc.Direction2[]
    content.vb: Public Shared ReadOnly AllExceptNone As Direction2()
- uid: MLEM.Misc.Direction2Helper.IsAdjacent(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.IsAdjacent(MLEM.Misc.Direction2)
  id: IsAdjacent(MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: IsAdjacent(Direction2)
  nameWithType: Direction2Helper.IsAdjacent(Direction2)
  fullName: MLEM.Misc.Direction2Helper.IsAdjacent(MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsAdjacent
    path: ../MLEM/Misc/Direction2.cs
    startLine: 99
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns if the given direction is considered an "adjacent" direction.

    An adjacent direction is one that is not a diagonal.
  example: []
  syntax:
    content: public static bool IsAdjacent(this Direction2 dir)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction to query
    return:
      type: System.Boolean
      description: Whether the direction is adjacent
    content.vb: Public Shared Function IsAdjacent(dir As Direction2) As Boolean
  overload: MLEM.Misc.Direction2Helper.IsAdjacent*
- uid: MLEM.Misc.Direction2Helper.IsDiagonal(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.IsDiagonal(MLEM.Misc.Direction2)
  id: IsDiagonal(MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: IsDiagonal(Direction2)
  nameWithType: Direction2Helper.IsDiagonal(Direction2)
  fullName: MLEM.Misc.Direction2Helper.IsDiagonal(MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsDiagonal
    path: ../MLEM/Misc/Direction2.cs
    startLine: 108
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns if the given direction is considered a diagonal direction.
  example: []
  syntax:
    content: public static bool IsDiagonal(this Direction2 dir)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction to query
    return:
      type: System.Boolean
      description: Whether the direction is diagonal
    content.vb: Public Shared Function IsDiagonal(dir As Direction2) As Boolean
  overload: MLEM.Misc.Direction2Helper.IsDiagonal*
- uid: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  id: Offset(MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Offset(Direction2)
  nameWithType: Direction2Helper.Offset(Direction2)
  fullName: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Offset
    path: ../MLEM/Misc/Direction2.cs
    startLine: 118
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns the directional offset of a given direction.

    The offset direction will be exactly one unit in each axis that the direction represents.
  example: []
  syntax:
    content: public static Point Offset(this Direction2 dir)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction whose offset to query
    return:
      type: Microsoft.Xna.Framework.Point
      description: The direction's offset
    content.vb: Public Shared Function Offset(dir As Direction2) As Point
  overload: MLEM.Misc.Direction2Helper.Offset*
- uid: MLEM.Misc.Direction2Helper.Offsets(System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2})
  commentId: M:MLEM.Misc.Direction2Helper.Offsets(System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2})
  id: Offsets(System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2})
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Offsets(IEnumerable<Direction2>)
  nameWithType: Direction2Helper.Offsets(IEnumerable<Direction2>)
  fullName: MLEM.Misc.Direction2Helper.Offsets(System.Collections.Generic.IEnumerable<MLEM.Misc.Direction2>)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Offsets
    path: ../MLEM/Misc/Direction2.cs
    startLine: 146
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Maps each direction in the given enumerable of directions to its <xref href="MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static IEnumerable<Point> Offsets(this IEnumerable<Direction2> directions)
    parameters:
    - id: directions
      type: System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2}
      description: The direction enumerable
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
      description: The directions' offsets, in the same order as the input directions.
    content.vb: Public Shared Function Offsets(directions As IEnumerable(Of Direction2)) As IEnumerable(Of Point)
  overload: MLEM.Misc.Direction2Helper.Offsets*
  nameWithType.vb: Direction2Helper.Offsets(IEnumerable(Of Direction2))
  fullName.vb: MLEM.Misc.Direction2Helper.Offsets(System.Collections.Generic.IEnumerable(Of MLEM.Misc.Direction2))
  name.vb: Offsets(IEnumerable(Of Direction2))
- uid: MLEM.Misc.Direction2Helper.Opposite(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.Opposite(MLEM.Misc.Direction2)
  id: Opposite(MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Opposite(Direction2)
  nameWithType: Direction2Helper.Opposite(Direction2)
  fullName: MLEM.Misc.Direction2Helper.Opposite(MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Opposite
    path: ../MLEM/Misc/Direction2.cs
    startLine: 158
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns the opposite of the given direction.

    For "adjacent" directions, this is the direction that points into the same axis, but the opposite sign.

    For diagonal directions, this is the direction that points into the opposite of both the x and y axis.
  example: []
  syntax:
    content: public static Direction2 Opposite(this Direction2 dir)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction whose opposite to get
    return:
      type: MLEM.Misc.Direction2
      description: The opposite of the direction
    content.vb: Public Shared Function Opposite(dir As Direction2) As Direction2
  overload: MLEM.Misc.Direction2Helper.Opposite*
- uid: MLEM.Misc.Direction2Helper.Angle(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.Angle(MLEM.Misc.Direction2)
  id: Angle(MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: Angle(Direction2)
  nameWithType: Direction2Helper.Angle(Direction2)
  fullName: MLEM.Misc.Direction2Helper.Angle(MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Angle
    path: ../MLEM/Misc/Direction2.cs
    startLine: 186
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns the angle of the direction in radians, where <xref href="MLEM.Misc.Direction2.Right" data-throw-if-not-resolved="false"></xref> has an angle of 0.
  example: []
  syntax:
    content: public static float Angle(this Direction2 dir)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction whose angle to get
    return:
      type: System.Single
      description: The direction's angle
    content.vb: Public Shared Function Angle(dir As Direction2) As Single
  overload: MLEM.Misc.Direction2Helper.Angle*
- uid: MLEM.Misc.Direction2Helper.RotateCw(MLEM.Misc.Direction2,System.Boolean)
  commentId: M:MLEM.Misc.Direction2Helper.RotateCw(MLEM.Misc.Direction2,System.Boolean)
  id: RotateCw(MLEM.Misc.Direction2,System.Boolean)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: RotateCw(Direction2, bool)
  nameWithType: Direction2Helper.RotateCw(Direction2, bool)
  fullName: MLEM.Misc.Direction2Helper.RotateCw(MLEM.Misc.Direction2, bool)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RotateCw
    path: ../MLEM/Misc/Direction2.cs
    startLine: 197
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Rotates the given direction clockwise and returns the resulting direction.
  example: []
  syntax:
    content: public static Direction2 RotateCw(this Direction2 dir, bool fortyFiveDegrees = false)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction to rotate
    - id: fortyFiveDegrees
      type: System.Boolean
      description: Whether to rotate by 45 degrees. If this is false, the rotation is 90 degrees instead.
    return:
      type: MLEM.Misc.Direction2
      description: The rotated direction
    content.vb: Public Shared Function RotateCw(dir As Direction2, fortyFiveDegrees As Boolean = False) As Direction2
  overload: MLEM.Misc.Direction2Helper.RotateCw*
  nameWithType.vb: Direction2Helper.RotateCw(Direction2, Boolean)
  fullName.vb: MLEM.Misc.Direction2Helper.RotateCw(MLEM.Misc.Direction2, Boolean)
  name.vb: RotateCw(Direction2, Boolean)
- uid: MLEM.Misc.Direction2Helper.RotateCcw(MLEM.Misc.Direction2,System.Boolean)
  commentId: M:MLEM.Misc.Direction2Helper.RotateCcw(MLEM.Misc.Direction2,System.Boolean)
  id: RotateCcw(MLEM.Misc.Direction2,System.Boolean)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: RotateCcw(Direction2, bool)
  nameWithType: Direction2Helper.RotateCcw(Direction2, bool)
  fullName: MLEM.Misc.Direction2Helper.RotateCcw(MLEM.Misc.Direction2, bool)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RotateCcw
    path: ../MLEM/Misc/Direction2.cs
    startLine: 209
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Rotates the given direction counter-clockwise and returns the resulting direction.
  example: []
  syntax:
    content: public static Direction2 RotateCcw(this Direction2 dir, bool fortyFiveDegrees = false)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction to rotate counter-clockwise
    - id: fortyFiveDegrees
      type: System.Boolean
      description: Whether to rotate by 45 degrees. If this is false, the rotation is 90 degrees instead.
    return:
      type: MLEM.Misc.Direction2
      description: The rotated direction
    content.vb: Public Shared Function RotateCcw(dir As Direction2, fortyFiveDegrees As Boolean = False) As Direction2
  overload: MLEM.Misc.Direction2Helper.RotateCcw*
  nameWithType.vb: Direction2Helper.RotateCcw(Direction2, Boolean)
  fullName.vb: MLEM.Misc.Direction2Helper.RotateCcw(MLEM.Misc.Direction2, Boolean)
  name.vb: RotateCcw(Direction2, Boolean)
- uid: MLEM.Misc.Direction2Helper.ToDirection(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Misc.Direction2Helper.ToDirection(Microsoft.Xna.Framework.Vector2)
  id: ToDirection(Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: ToDirection(Vector2)
  nameWithType: Direction2Helper.ToDirection(Vector2)
  fullName: MLEM.Misc.Direction2Helper.ToDirection(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToDirection
    path: ../MLEM/Misc/Direction2.cs
    startLine: 221
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns the <xref href="MLEM.Misc.Direction2" data-throw-if-not-resolved="false"></xref> that is closest to the given position's facing direction.
  example: []
  syntax:
    content: public static Direction2 ToDirection(this Vector2 offset)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The vector whose corresponding direction to get
    return:
      type: MLEM.Misc.Direction2
      description: The vector's direction
    content.vb: Public Shared Function ToDirection(offset As Vector2) As Direction2
  overload: MLEM.Misc.Direction2Helper.ToDirection*
- uid: MLEM.Misc.Direction2Helper.To90Direction(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Misc.Direction2Helper.To90Direction(Microsoft.Xna.Framework.Vector2)
  id: To90Direction(Microsoft.Xna.Framework.Vector2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: To90Direction(Vector2)
  nameWithType: Direction2Helper.To90Direction(Vector2)
  fullName: MLEM.Misc.Direction2Helper.To90Direction(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: To90Direction
    path: ../MLEM/Misc/Direction2.cs
    startLine: 236
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns the <xref href="MLEM.Misc.Direction2" data-throw-if-not-resolved="false"></xref> that is closest to the given position's facing direction, only taking <xref href="MLEM.Misc.Direction2Helper.Adjacent" data-throw-if-not-resolved="false"></xref> directions into account.

    Diagonal directions will be rounded to the nearest vertical direction.
  example: []
  syntax:
    content: public static Direction2 To90Direction(this Vector2 offset)
    parameters:
    - id: offset
      type: Microsoft.Xna.Framework.Vector2
      description: The vector whose corresponding direction to get
    return:
      type: MLEM.Misc.Direction2
      description: The vector's direction
    content.vb: Public Shared Function To90Direction(offset As Vector2) As Direction2
  overload: MLEM.Misc.Direction2Helper.To90Direction*
- uid: MLEM.Misc.Direction2Helper.RotateBy(MLEM.Misc.Direction2,MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.RotateBy(MLEM.Misc.Direction2,MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  id: RotateBy(MLEM.Misc.Direction2,MLEM.Misc.Direction2,MLEM.Misc.Direction2)
  isExtensionMethod: true
  parent: MLEM.Misc.Direction2Helper
  langs:
  - csharp
  - vb
  name: RotateBy(Direction2, Direction2, Direction2)
  nameWithType: Direction2Helper.RotateBy(Direction2, Direction2, Direction2)
  fullName: MLEM.Misc.Direction2Helper.RotateBy(MLEM.Misc.Direction2, MLEM.Misc.Direction2, MLEM.Misc.Direction2)
  type: Method
  source:
    remote:
      path: MLEM/Misc/Direction2.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RotateBy
    path: ../MLEM/Misc/Direction2.cs
    startLine: 251
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Rotates the given direction by a given reference direction
  example: []
  syntax:
    content: public static Direction2 RotateBy(this Direction2 dir, Direction2 reference, Direction2 start = Direction2.Up)
    parameters:
    - id: dir
      type: MLEM.Misc.Direction2
      description: The direction to rotate
    - id: reference
      type: MLEM.Misc.Direction2
      description: The direction to rotate by
    - id: start
      type: MLEM.Misc.Direction2
      description: The direction to use as the default direction
    return:
      type: MLEM.Misc.Direction2
      description: The direction, rotated by the reference direction
    content.vb: Public Shared Function RotateBy(dir As Direction2, reference As Direction2, start As Direction2 = Direction2.Up) As Direction2
  overload: MLEM.Misc.Direction2Helper.RotateBy*
references:
- uid: MLEM.Misc.Direction2
  commentId: T:MLEM.Misc.Direction2
  parent: MLEM.Misc
  href: MLEM.Misc.Direction2.html
  name: Direction2
  nameWithType: Direction2
  fullName: MLEM.Misc.Direction2
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc.Direction2[]
  isExternal: true
  href: MLEM.Misc.Direction2.html
  name: Direction2[]
  nameWithType: Direction2[]
  fullName: MLEM.Misc.Direction2[]
  nameWithType.vb: Direction2()
  fullName.vb: MLEM.Misc.Direction2()
  name.vb: Direction2()
  spec.csharp:
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: (
  - name: )
- uid: MLEM.Misc.Direction2.Up
  commentId: F:MLEM.Misc.Direction2.Up
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_Up
  name: Up
  nameWithType: Direction2.Up
  fullName: MLEM.Misc.Direction2.Up
- uid: MLEM.Misc.Direction2.Left
  commentId: F:MLEM.Misc.Direction2.Left
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_Left
  name: Left
  nameWithType: Direction2.Left
  fullName: MLEM.Misc.Direction2.Left
- uid: MLEM.Misc.Direction2.UpRight
  commentId: F:MLEM.Misc.Direction2.UpRight
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_UpRight
  name: UpRight
  nameWithType: Direction2.UpRight
  fullName: MLEM.Misc.Direction2.UpRight
- uid: MLEM.Misc.Direction2.UpLeft
  commentId: F:MLEM.Misc.Direction2.UpLeft
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_UpLeft
  name: UpLeft
  nameWithType: Direction2.UpLeft
  fullName: MLEM.Misc.Direction2.UpLeft
- uid: MLEM.Misc.Direction2.None
  commentId: F:MLEM.Misc.Direction2.None
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_None
  name: None
  nameWithType: Direction2.None
  fullName: MLEM.Misc.Direction2.None
- uid: MLEM.Misc.Direction2Helper.IsAdjacent*
  commentId: Overload:MLEM.Misc.Direction2Helper.IsAdjacent
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_IsAdjacent_MLEM_Misc_Direction2_
  name: IsAdjacent
  nameWithType: Direction2Helper.IsAdjacent
  fullName: MLEM.Misc.Direction2Helper.IsAdjacent
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Misc.Direction2Helper.IsDiagonal*
  commentId: Overload:MLEM.Misc.Direction2Helper.IsDiagonal
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_IsDiagonal_MLEM_Misc_Direction2_
  name: IsDiagonal
  nameWithType: Direction2Helper.IsDiagonal
  fullName: MLEM.Misc.Direction2Helper.IsDiagonal
- uid: MLEM.Misc.Direction2Helper.Offset*
  commentId: Overload:MLEM.Misc.Direction2Helper.Offset
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Offset_MLEM_Misc_Direction2_
  name: Offset
  nameWithType: Direction2Helper.Offset
  fullName: MLEM.Misc.Direction2Helper.Offset
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  commentId: M:MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Offset_MLEM_Misc_Direction2_
  name: Offset(Direction2)
  nameWithType: Direction2Helper.Offset(Direction2)
  fullName: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
  spec.csharp:
  - uid: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
    name: Offset
    href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Offset_MLEM_Misc_Direction2_
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: )
  spec.vb:
  - uid: MLEM.Misc.Direction2Helper.Offset(MLEM.Misc.Direction2)
    name: Offset
    href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Offset_MLEM_Misc_Direction2_
  - name: (
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: )
- uid: MLEM.Misc.Direction2Helper.Offsets*
  commentId: Overload:MLEM.Misc.Direction2Helper.Offsets
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Offsets_System_Collections_Generic_IEnumerable_MLEM_Misc_Direction2__
  name: Offsets
  nameWithType: Direction2Helper.Offsets
  fullName: MLEM.Misc.Direction2Helper.Offsets
- uid: System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Misc.Direction2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Direction2>
  nameWithType: IEnumerable<Direction2>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Misc.Direction2>
  nameWithType.vb: IEnumerable(Of Direction2)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Misc.Direction2)
  name.vb: IEnumerable(Of Direction2)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.Direction2
    name: Direction2
    href: MLEM.Misc.Direction2.html
  - name: )
- uid: System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
  commentId: T:System.Collections.Generic.IEnumerable{Microsoft.Xna.Framework.Point}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Point>
  nameWithType: IEnumerable<Point>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Xna.Framework.Point>
  nameWithType.vb: IEnumerable(Of Point)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Microsoft.Xna.Framework.Point)
  name.vb: IEnumerable(Of Point)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MLEM.Misc.Direction2Helper.Opposite*
  commentId: Overload:MLEM.Misc.Direction2Helper.Opposite
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Opposite_MLEM_Misc_Direction2_
  name: Opposite
  nameWithType: Direction2Helper.Opposite
  fullName: MLEM.Misc.Direction2Helper.Opposite
- uid: MLEM.Misc.Direction2.Right
  commentId: F:MLEM.Misc.Direction2.Right
  href: MLEM.Misc.Direction2.html#MLEM_Misc_Direction2_Right
  name: Right
  nameWithType: Direction2.Right
  fullName: MLEM.Misc.Direction2.Right
- uid: MLEM.Misc.Direction2Helper.Angle*
  commentId: Overload:MLEM.Misc.Direction2Helper.Angle
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Angle_MLEM_Misc_Direction2_
  name: Angle
  nameWithType: Direction2Helper.Angle
  fullName: MLEM.Misc.Direction2Helper.Angle
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Misc.Direction2Helper.RotateCw*
  commentId: Overload:MLEM.Misc.Direction2Helper.RotateCw
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_RotateCw_MLEM_Misc_Direction2_System_Boolean_
  name: RotateCw
  nameWithType: Direction2Helper.RotateCw
  fullName: MLEM.Misc.Direction2Helper.RotateCw
- uid: MLEM.Misc.Direction2Helper.RotateCcw*
  commentId: Overload:MLEM.Misc.Direction2Helper.RotateCcw
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_RotateCcw_MLEM_Misc_Direction2_System_Boolean_
  name: RotateCcw
  nameWithType: Direction2Helper.RotateCcw
  fullName: MLEM.Misc.Direction2Helper.RotateCcw
- uid: MLEM.Misc.Direction2Helper.ToDirection*
  commentId: Overload:MLEM.Misc.Direction2Helper.ToDirection
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_ToDirection_Microsoft_Xna_Framework_Vector2_
  name: ToDirection
  nameWithType: Direction2Helper.ToDirection
  fullName: MLEM.Misc.Direction2Helper.ToDirection
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Misc.Direction2Helper.Adjacent
  commentId: F:MLEM.Misc.Direction2Helper.Adjacent
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_Adjacent
  name: Adjacent
  nameWithType: Direction2Helper.Adjacent
  fullName: MLEM.Misc.Direction2Helper.Adjacent
- uid: MLEM.Misc.Direction2Helper.To90Direction*
  commentId: Overload:MLEM.Misc.Direction2Helper.To90Direction
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_To90Direction_Microsoft_Xna_Framework_Vector2_
  name: To90Direction
  nameWithType: Direction2Helper.To90Direction
  fullName: MLEM.Misc.Direction2Helper.To90Direction
- uid: MLEM.Misc.Direction2Helper.RotateBy*
  commentId: Overload:MLEM.Misc.Direction2Helper.RotateBy
  href: MLEM.Misc.Direction2Helper.html#MLEM_Misc_Direction2Helper_RotateBy_MLEM_Misc_Direction2_MLEM_Misc_Direction2_MLEM_Misc_Direction2_
  name: RotateBy
  nameWithType: Direction2Helper.RotateBy
  fullName: MLEM.Misc.Direction2Helper.RotateBy
