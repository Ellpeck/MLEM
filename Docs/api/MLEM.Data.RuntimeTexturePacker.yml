### YamlMime:ManagedReference
items:
- uid: MLEM.Data.RuntimeTexturePacker
  commentId: T:MLEM.Data.RuntimeTexturePacker
  id: RuntimeTexturePacker
  parent: MLEM.Data
  children:
  - MLEM.Data.RuntimeTexturePacker.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - MLEM.Data.RuntimeTexturePacker.Add(MLEM.Data.DataTextureAtlas,System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean)
  - MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.TextureRegion,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  - MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.UniformTextureAtlas,System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean,System.Boolean)
  - MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  - MLEM.Data.RuntimeTexturePacker.Dispose
  - MLEM.Data.RuntimeTexturePacker.LastCalculationTime
  - MLEM.Data.RuntimeTexturePacker.LastPackTime
  - MLEM.Data.RuntimeTexturePacker.LastTotalTime
  - MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  - MLEM.Data.RuntimeTexturePacker.PackedTexture
  - MLEM.Data.RuntimeTexturePacker.PackedTextures
  - MLEM.Data.RuntimeTexturePacker.Reset
  langs:
  - csharp
  - vb
  name: RuntimeTexturePacker
  nameWithType: RuntimeTexturePacker
  fullName: MLEM.Data.RuntimeTexturePacker
  type: Class
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RuntimeTexturePacker
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 16
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    A runtime texture packer provides the user with the ability to combine multiple <xref href="Microsoft.Xna.Framework.Graphics.Texture2D" data-throw-if-not-resolved="false"></xref> instances into a single texture.

    Packing textures in this manner allows for faster rendering, as fewer texture swaps are required.

    The resulting texture segments are returned as <xref href="MLEM.Textures.TextureRegion" data-throw-if-not-resolved="false"></xref> instances.
  example: []
  syntax:
    content: 'public class RuntimeTexturePacker : IDisposable'
    content.vb: Public Class RuntimeTexturePacker Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Data.RuntimeTexturePacker.PackedTexture
  commentId: P:MLEM.Data.RuntimeTexturePacker.PackedTexture
  id: PackedTexture
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: PackedTexture
  nameWithType: RuntimeTexturePacker.PackedTexture
  fullName: MLEM.Data.RuntimeTexturePacker.PackedTexture
  type: Property
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: PackedTexture
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 22
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    The generated packed texture.

    This value is null before <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public Texture2D PackedTexture { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.Texture2D
    content.vb: Public Property PackedTexture As Texture2D
  overload: MLEM.Data.RuntimeTexturePacker.PackedTexture*
- uid: MLEM.Data.RuntimeTexturePacker.LastCalculationTime
  commentId: P:MLEM.Data.RuntimeTexturePacker.LastCalculationTime
  id: LastCalculationTime
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: LastCalculationTime
  nameWithType: RuntimeTexturePacker.LastCalculationTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastCalculationTime
  type: Property
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LastCalculationTime
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 26
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: The time that it took to calculate the required areas the last time that <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> was called
  example: []
  syntax:
    content: public TimeSpan LastCalculationTime { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property LastCalculationTime As TimeSpan
  overload: MLEM.Data.RuntimeTexturePacker.LastCalculationTime*
- uid: MLEM.Data.RuntimeTexturePacker.LastPackTime
  commentId: P:MLEM.Data.RuntimeTexturePacker.LastPackTime
  id: LastPackTime
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: LastPackTime
  nameWithType: RuntimeTexturePacker.LastPackTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastPackTime
  type: Property
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LastPackTime
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 30
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: The time that it took to copy the texture data from the invidiual textures onto the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref> the last time that <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> was called
  example: []
  syntax:
    content: public TimeSpan LastPackTime { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public Property LastPackTime As TimeSpan
  overload: MLEM.Data.RuntimeTexturePacker.LastPackTime*
- uid: MLEM.Data.RuntimeTexturePacker.LastTotalTime
  commentId: P:MLEM.Data.RuntimeTexturePacker.LastTotalTime
  id: LastTotalTime
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: LastTotalTime
  nameWithType: RuntimeTexturePacker.LastTotalTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastTotalTime
  type: Property
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LastTotalTime
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 34
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: The time that <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> took the last time it was called
  example: []
  syntax:
    content: public TimeSpan LastTotalTime { get; }
    parameters: []
    return:
      type: System.TimeSpan
    content.vb: Public ReadOnly Property LastTotalTime As TimeSpan
  overload: MLEM.Data.RuntimeTexturePacker.LastTotalTime*
- uid: MLEM.Data.RuntimeTexturePacker.PackedTextures
  commentId: P:MLEM.Data.RuntimeTexturePacker.PackedTextures
  id: PackedTextures
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: PackedTextures
  nameWithType: RuntimeTexturePacker.PackedTextures
  fullName: MLEM.Data.RuntimeTexturePacker.PackedTextures
  type: Property
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: PackedTextures
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 38
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: The amount of currently packed texture regions.
  example: []
  syntax:
    content: public int PackedTextures { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PackedTextures As Integer
  overload: MLEM.Data.RuntimeTexturePacker.PackedTextures*
- uid: MLEM.Data.RuntimeTexturePacker.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)'
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: RuntimeTexturePacker(int, bool, bool, bool, bool)
  nameWithType: RuntimeTexturePacker.RuntimeTexturePacker(int, bool, bool, bool, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.RuntimeTexturePacker(int, bool, bool, bool, bool)
  type: Constructor
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 60
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: Creates a new runtime texture packer with the given settings.
  example: []
  syntax:
    content: public RuntimeTexturePacker(int maxWidth = 2048, bool autoIncreaseMaxWidth = false, bool forcePowerOfTwo = false, bool forceSquare = false, bool disposeTextures = false)
    parameters:
    - id: maxWidth
      type: System.Int32
      description: The maximum width that the packed texture can have. Defaults to 2048.
    - id: autoIncreaseMaxWidth
      type: System.Boolean
      description: Whether the maximum width should be increased if there is a texture to be packed that is wider than the maximum width specified in the constructor. Defaults to false.
    - id: forcePowerOfTwo
      type: System.Boolean
      description: Whether the resulting <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref> should have a width and height that is a power of two.
    - id: forceSquare
      type: System.Boolean
      description: Whether the resulting <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref> should be square regardless of required size.
    - id: disposeTextures
      type: System.Boolean
      description: Whether the original textures submitted to this texture packer should be disposed after packing.
    content.vb: Public Sub New(maxWidth As Integer = 2048, autoIncreaseMaxWidth As Boolean = False, forcePowerOfTwo As Boolean = False, forceSquare As Boolean = False, disposeTextures As Boolean = False)
  overload: MLEM.Data.RuntimeTexturePacker.#ctor*
  nameWithType.vb: RuntimeTexturePacker.New(Integer, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.New(Integer, Boolean, Boolean, Boolean, Boolean)
  name.vb: New(Integer, Boolean, Boolean, Boolean, Boolean)
- uid: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.UniformTextureAtlas,System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.UniformTextureAtlas,System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean,System.Boolean)
  id: Add(MLEM.Textures.UniformTextureAtlas,System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean,System.Boolean)
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Add(UniformTextureAtlas, Action<Dictionary<Point, TextureRegion>>, int, bool, bool)
  nameWithType: RuntimeTexturePacker.Add(UniformTextureAtlas, Action<Dictionary<Point, TextureRegion>>, int, bool, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.UniformTextureAtlas, System.Action<System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>>, int, bool, bool)
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 79
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Adds a new <xref href="MLEM.Textures.UniformTextureAtlas" data-throw-if-not-resolved="false"></xref> to this texture packer to be packed.

    The passed <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> is invoked in <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> and provides the caller with the resulting dictionary of texture regions on the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>, mapped to their x and y positions on the original <xref href="MLEM.Textures.UniformTextureAtlas" data-throw-if-not-resolved="false"></xref>.

    Note that the resulting data cannot be converted back into a <xref href="MLEM.Textures.UniformTextureAtlas" data-throw-if-not-resolved="false"></xref>, since the resulting texture regions might be scattered throughout the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(UniformTextureAtlas atlas, Action<Dictionary<Point, TextureRegion>> result, int padding = 0, bool padWithPixels = false, bool ignoreTransparent = false)
    parameters:
    - id: atlas
      type: MLEM.Textures.UniformTextureAtlas
      description: The texture atlas to pack.
    - id: result
      type: System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}}
      description: The result callback which will receive the resulting texture regions.
    - id: padding
      type: System.Int32
      description: The padding that the texture should have around itself. This can be useful if texture bleeding issues occur due to texture coordinate rounding.
    - id: padWithPixels
      type: System.Boolean
      description: Whether the texture's padding should be filled with a copy of the texture's border, rather than transparent pixels. This value only has an effect if <code class="paramref">padding</code> is greater than 0.
    - id: ignoreTransparent
      type: System.Boolean
      description: Whether completely transparent texture regions in the <code class="paramref">atlas</code> should be ignored. If this is true, they will not be part of the <code class="paramref">result</code> collection either.
    content.vb: Public Sub Add(atlas As UniformTextureAtlas, result As Action(Of Dictionary(Of Point, TextureRegion)), padding As Integer = 0, padWithPixels As Boolean = False, ignoreTransparent As Boolean = False)
  overload: MLEM.Data.RuntimeTexturePacker.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to add a texture width a width greater than the defined max width.
  nameWithType.vb: RuntimeTexturePacker.Add(UniformTextureAtlas, Action(Of Dictionary(Of Point, TextureRegion)), Integer, Boolean, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.UniformTextureAtlas, System.Action(Of System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion)), Integer, Boolean, Boolean)
  name.vb: Add(UniformTextureAtlas, Action(Of Dictionary(Of Point, TextureRegion)), Integer, Boolean, Boolean)
- uid: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Data.DataTextureAtlas,System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Add(MLEM.Data.DataTextureAtlas,System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean)
  id: Add(MLEM.Data.DataTextureAtlas,System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}},System.Int32,System.Boolean)
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Add(DataTextureAtlas, Action<Dictionary<string, TextureRegion>>, int, bool)
  nameWithType: RuntimeTexturePacker.Add(DataTextureAtlas, Action<Dictionary<string, TextureRegion>>, int, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Data.DataTextureAtlas, System.Action<System.Collections.Generic.Dictionary<string, MLEM.Textures.TextureRegion>>, int, bool)
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 112
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Adds a new <xref href="MLEM.Data.DataTextureAtlas" data-throw-if-not-resolved="false"></xref> to this texture packer to be packed.

    The passed <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> is invoked in <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> and provides the caller with the resulting dictionary of texture regions on the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>, mapped to their name on the original <xref href="MLEM.Data.DataTextureAtlas" data-throw-if-not-resolved="false"></xref>.

    Note that the resulting data cannot be converted back into a <xref href="MLEM.Data.DataTextureAtlas" data-throw-if-not-resolved="false"></xref>, since the resulting texture regions might be scattered throughout the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(DataTextureAtlas atlas, Action<Dictionary<string, TextureRegion>> result, int padding = 0, bool padWithPixels = false)
    parameters:
    - id: atlas
      type: MLEM.Data.DataTextureAtlas
      description: The texture atlas to pack.
    - id: result
      type: System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}}
      description: The result callback which will receive the resulting texture regions.
    - id: padding
      type: System.Int32
      description: The padding that the texture should have around itself. This can be useful if texture bleeding issues occur due to texture coordinate rounding.
    - id: padWithPixels
      type: System.Boolean
      description: Whether the texture's padding should be filled with a copy of the texture's border, rather than transparent pixels. This value only has an effect if <code class="paramref">padding</code> is greater than 0.
    content.vb: Public Sub Add(atlas As DataTextureAtlas, result As Action(Of Dictionary(Of String, TextureRegion)), padding As Integer = 0, padWithPixels As Boolean = False)
  overload: MLEM.Data.RuntimeTexturePacker.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to add a texture width a width greater than the defined max width.
  nameWithType.vb: RuntimeTexturePacker.Add(DataTextureAtlas, Action(Of Dictionary(Of String, TextureRegion)), Integer, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Data.DataTextureAtlas, System.Action(Of System.Collections.Generic.Dictionary(Of String, MLEM.Textures.TextureRegion)), Integer, Boolean)
  name.vb: Add(DataTextureAtlas, Action(Of Dictionary(Of String, TextureRegion)), Integer, Boolean)
- uid: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  id: Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Add(Texture2D, Action<TextureRegion>, int, bool)
  nameWithType: RuntimeTexturePacker.Add(Texture2D, Action<TextureRegion>, int, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D, System.Action<MLEM.Textures.TextureRegion>, int, bool)
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 133
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Adds a new <xref href="Microsoft.Xna.Framework.Graphics.Texture2D" data-throw-if-not-resolved="false"></xref> to this texture packer to be packed.

    The passed <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> is invoked in <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> and provides the caller with the resulting texture region on the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(Texture2D texture, Action<TextureRegion> result, int padding = 0, bool padWithPixels = false)
    parameters:
    - id: texture
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: The texture to pack.
    - id: result
      type: System.Action{MLEM.Textures.TextureRegion}
      description: The result callback which will receive the resulting texture region.
    - id: padding
      type: System.Int32
      description: The padding that the texture should have around itself. This can be useful if texture bleeding issues occur due to texture coordinate rounding.
    - id: padWithPixels
      type: System.Boolean
      description: Whether the texture's padding should be filled with a copy of the texture's border, rather than transparent pixels. This value only has an effect if <code class="paramref">padding</code> is greater than 0.
    content.vb: Public Sub Add(texture As Texture2D, result As Action(Of TextureRegion), padding As Integer = 0, padWithPixels As Boolean = False)
  overload: MLEM.Data.RuntimeTexturePacker.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to add a texture width a width greater than the defined max width.
  nameWithType.vb: RuntimeTexturePacker.Add(Texture2D, Action(Of TextureRegion), Integer, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D, System.Action(Of MLEM.Textures.TextureRegion), Integer, Boolean)
  name.vb: Add(Texture2D, Action(Of TextureRegion), Integer, Boolean)
- uid: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.TextureRegion,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.TextureRegion,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  id: Add(MLEM.Textures.TextureRegion,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Add(TextureRegion, Action<TextureRegion>, int, bool)
  nameWithType: RuntimeTexturePacker.Add(TextureRegion, Action<TextureRegion>, int, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.TextureRegion, System.Action<MLEM.Textures.TextureRegion>, int, bool)
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 146
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Adds a new <xref href="MLEM.Textures.TextureRegion" data-throw-if-not-resolved="false"></xref> to this texture packer to be packed.

    The passed <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> is invoked in <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> and provides the caller with the resulting texture region on the <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Add(TextureRegion texture, Action<TextureRegion> result, int padding = 0, bool padWithPixels = false)
    parameters:
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture region to pack.
    - id: result
      type: System.Action{MLEM.Textures.TextureRegion}
      description: The result callback which will receive the resulting texture region.
    - id: padding
      type: System.Int32
      description: The padding that the texture should have around itself. This can be useful if texture bleeding issues occur due to texture coordinate rounding.
    - id: padWithPixels
      type: System.Boolean
      description: Whether the texture's padding should be filled with a copy of the texture's border, rather than transparent pixels. This value only has an effect if <code class="paramref">padding</code> is greater than 0.
    content.vb: Public Sub Add(texture As TextureRegion, result As Action(Of TextureRegion), padding As Integer = 0, padWithPixels As Boolean = False)
  overload: MLEM.Data.RuntimeTexturePacker.Add*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when trying to add a texture width a width greater than the defined max width.
  nameWithType.vb: RuntimeTexturePacker.Add(TextureRegion, Action(Of TextureRegion), Integer, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.Add(MLEM.Textures.TextureRegion, System.Action(Of MLEM.Textures.TextureRegion), Integer, Boolean)
  name.vb: Add(TextureRegion, Action(Of TextureRegion), Integer, Boolean)
- uid: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  id: Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Pack(GraphicsDevice)
  nameWithType: RuntimeTexturePacker.Pack(GraphicsDevice)
  fullName: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Pack
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 164
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Packs all of the textures and texture regions added using <xref href="MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D%2cSystem.Action%7bMLEM.Textures.TextureRegion%7d%2cSystem.Int32%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref> into one texture, which can be retrieved using <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>.

    All of the result callbacks that were added will also be invoked.

    This method can be called multiple times if regions are added after <xref href="MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)" data-throw-if-not-resolved="false"></xref> has already been called. When doing so, result callbacks of previous regions may be invoked again if the resulting <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref> has to be resized to accommodate newly added regions.
  example: []
  syntax:
    content: public void Pack(GraphicsDevice device)
    parameters:
    - id: device
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
      description: The graphics device to use for texture generation
    content.vb: Public Sub Pack(device As GraphicsDevice)
  overload: MLEM.Data.RuntimeTexturePacker.Pack*
- uid: MLEM.Data.RuntimeTexturePacker.Reset
  commentId: M:MLEM.Data.RuntimeTexturePacker.Reset
  id: Reset
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: RuntimeTexturePacker.Reset()
  fullName: MLEM.Data.RuntimeTexturePacker.Reset()
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Reset
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 222
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: Resets this texture packer entirely, disposing its <xref href="MLEM.Data.RuntimeTexturePacker.PackedTexture" data-throw-if-not-resolved="false"></xref>, clearing all previously added requests, and readying it to be re-used.
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: MLEM.Data.RuntimeTexturePacker.Reset*
- uid: MLEM.Data.RuntimeTexturePacker.Dispose
  commentId: M:MLEM.Data.RuntimeTexturePacker.Dispose
  id: Dispose
  parent: MLEM.Data.RuntimeTexturePacker
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: RuntimeTexturePacker.Dispose()
  fullName: MLEM.Data.RuntimeTexturePacker.Dispose()
  type: Method
  source:
    remote:
      path: MLEM.Data/RuntimeTexturePacker.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Dispose
    path: ../MLEM.Data/RuntimeTexturePacker.cs
    startLine: 235
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: MLEM.Data.RuntimeTexturePacker.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  href: MLEM.Textures.TextureRegion.html
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: MLEM.Data
  commentId: N:MLEM.Data
  href: MLEM.html
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  href: MLEM.html
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  isExternal: true
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Pack_Microsoft_Xna_Framework_Graphics_GraphicsDevice_
  name: Pack(GraphicsDevice)
  nameWithType: RuntimeTexturePacker.Pack(GraphicsDevice)
  fullName: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
  spec.csharp:
  - uid: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
    name: Pack
    href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Pack_Microsoft_Xna_Framework_Graphics_GraphicsDevice_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    name: GraphicsDevice
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Data.RuntimeTexturePacker.Pack(Microsoft.Xna.Framework.Graphics.GraphicsDevice)
    name: Pack
    href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Pack_Microsoft_Xna_Framework_Graphics_GraphicsDevice_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
    name: GraphicsDevice
    isExternal: true
  - name: )
- uid: MLEM.Data.RuntimeTexturePacker.PackedTexture*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.PackedTexture
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_PackedTexture
  name: PackedTexture
  nameWithType: RuntimeTexturePacker.PackedTexture
  fullName: MLEM.Data.RuntimeTexturePacker.PackedTexture
- uid: MLEM.Data.RuntimeTexturePacker.LastCalculationTime*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.LastCalculationTime
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_LastCalculationTime
  name: LastCalculationTime
  nameWithType: RuntimeTexturePacker.LastCalculationTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastCalculationTime
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: MLEM.Data.RuntimeTexturePacker.PackedTexture
  commentId: P:MLEM.Data.RuntimeTexturePacker.PackedTexture
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_PackedTexture
  name: PackedTexture
  nameWithType: RuntimeTexturePacker.PackedTexture
  fullName: MLEM.Data.RuntimeTexturePacker.PackedTexture
- uid: MLEM.Data.RuntimeTexturePacker.LastPackTime*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.LastPackTime
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_LastPackTime
  name: LastPackTime
  nameWithType: RuntimeTexturePacker.LastPackTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastPackTime
- uid: MLEM.Data.RuntimeTexturePacker.LastTotalTime*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.LastTotalTime
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_LastTotalTime
  name: LastTotalTime
  nameWithType: RuntimeTexturePacker.LastTotalTime
  fullName: MLEM.Data.RuntimeTexturePacker.LastTotalTime
- uid: MLEM.Data.RuntimeTexturePacker.PackedTextures*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.PackedTextures
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_PackedTextures
  name: PackedTextures
  nameWithType: RuntimeTexturePacker.PackedTextures
  fullName: MLEM.Data.RuntimeTexturePacker.PackedTextures
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Data.RuntimeTexturePacker.#ctor*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.#ctor
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker__ctor_System_Int32_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: RuntimeTexturePacker
  nameWithType: RuntimeTexturePacker.RuntimeTexturePacker
  fullName: MLEM.Data.RuntimeTexturePacker.RuntimeTexturePacker
  nameWithType.vb: RuntimeTexturePacker.New
  fullName.vb: MLEM.Data.RuntimeTexturePacker.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Textures.UniformTextureAtlas
  commentId: T:MLEM.Textures.UniformTextureAtlas
  parent: MLEM.Textures
  href: MLEM.Textures.UniformTextureAtlas.html
  name: UniformTextureAtlas
  nameWithType: UniformTextureAtlas
  fullName: MLEM.Textures.UniformTextureAtlas
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: MLEM.Data.RuntimeTexturePacker.Add*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.Add
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Add_MLEM_Textures_UniformTextureAtlas_System_Action_System_Collections_Generic_Dictionary_Microsoft_Xna_Framework_Point_MLEM_Textures_TextureRegion___System_Int32_System_Boolean_System_Boolean_
  name: Add
  nameWithType: RuntimeTexturePacker.Add
  fullName: MLEM.Data.RuntimeTexturePacker.Add
- uid: System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}}
  commentId: T:System.Action{System.Collections.Generic.Dictionary{Microsoft.Xna.Framework.Point,MLEM.Textures.TextureRegion}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Dictionary<Point, TextureRegion>>
  nameWithType: Action<Dictionary<Point, TextureRegion>>
  fullName: System.Action<System.Collections.Generic.Dictionary<Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion>>
  nameWithType.vb: Action(Of Dictionary(Of Point, TextureRegion))
  fullName.vb: System.Action(Of System.Collections.Generic.Dictionary(Of Microsoft.Xna.Framework.Point, MLEM.Textures.TextureRegion))
  name.vb: Action(Of Dictionary(Of Point, TextureRegion))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Microsoft.Xna.Framework.Point
    name: Point
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: )
  - name: )
- uid: MLEM.Data.DataTextureAtlas
  commentId: T:MLEM.Data.DataTextureAtlas
  parent: MLEM.Data
  href: MLEM.Data.DataTextureAtlas.html
  name: DataTextureAtlas
  nameWithType: DataTextureAtlas
  fullName: MLEM.Data.DataTextureAtlas
- uid: System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}}
  commentId: T:System.Action{System.Collections.Generic.Dictionary{System.String,MLEM.Textures.TextureRegion}}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<Dictionary<string, TextureRegion>>
  nameWithType: Action<Dictionary<string, TextureRegion>>
  fullName: System.Action<System.Collections.Generic.Dictionary<string, MLEM.Textures.TextureRegion>>
  nameWithType.vb: Action(Of Dictionary(Of String, TextureRegion))
  fullName.vb: System.Action(Of System.Collections.Generic.Dictionary(Of String, MLEM.Textures.TextureRegion))
  name.vb: Action(Of Dictionary(Of String, TextureRegion))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: )
  - name: )
- uid: System.Action{MLEM.Textures.TextureRegion}
  commentId: T:System.Action{MLEM.Textures.TextureRegion}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<TextureRegion>
  nameWithType: Action<TextureRegion>
  fullName: System.Action<MLEM.Textures.TextureRegion>
  nameWithType.vb: Action(Of TextureRegion)
  fullName.vb: System.Action(Of MLEM.Textures.TextureRegion)
  name.vb: Action(Of TextureRegion)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: )
- uid: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  commentId: M:MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
  isExternal: true
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Add_Microsoft_Xna_Framework_Graphics_Texture2D_System_Action_MLEM_Textures_TextureRegion__System_Int32_System_Boolean_
  name: Add(Texture2D, Action<TextureRegion>, int, bool)
  nameWithType: RuntimeTexturePacker.Add(Texture2D, Action<TextureRegion>, int, bool)
  fullName: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D, System.Action<MLEM.Textures.TextureRegion>, int, bool)
  nameWithType.vb: RuntimeTexturePacker.Add(Texture2D, Action(Of TextureRegion), Integer, Boolean)
  fullName.vb: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D, System.Action(Of MLEM.Textures.TextureRegion), Integer, Boolean)
  name.vb: Add(Texture2D, Action(Of TextureRegion), Integer, Boolean)
  spec.csharp:
  - uid: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
    name: Add
    href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Add_Microsoft_Xna_Framework_Graphics_Texture2D_System_Action_MLEM_Textures_TextureRegion__System_Int32_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Data.RuntimeTexturePacker.Add(Microsoft.Xna.Framework.Graphics.Texture2D,System.Action{MLEM.Textures.TextureRegion},System.Int32,System.Boolean)
    name: Add
    href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Add_Microsoft_Xna_Framework_Graphics_Texture2D_System_Action_MLEM_Textures_TextureRegion__System_Int32_System_Boolean_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Textures.TextureRegion
    name: TextureRegion
    href: MLEM.Textures.TextureRegion.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Data.RuntimeTexturePacker.Pack*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.Pack
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Pack_Microsoft_Xna_Framework_Graphics_GraphicsDevice_
  name: Pack
  nameWithType: RuntimeTexturePacker.Pack
  fullName: MLEM.Data.RuntimeTexturePacker.Pack
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: MLEM.Data.RuntimeTexturePacker.Reset*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.Reset
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Reset
  name: Reset
  nameWithType: RuntimeTexturePacker.Reset
  fullName: MLEM.Data.RuntimeTexturePacker.Reset
- uid: MLEM.Data.RuntimeTexturePacker.Dispose*
  commentId: Overload:MLEM.Data.RuntimeTexturePacker.Dispose
  href: MLEM.Data.RuntimeTexturePacker.html#MLEM_Data_RuntimeTexturePacker_Dispose
  name: Dispose
  nameWithType: RuntimeTexturePacker.Dispose
  fullName: MLEM.Data.RuntimeTexturePacker.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
