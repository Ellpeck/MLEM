### YamlMime:ManagedReference
items:
- uid: MLEM.Extended.Extensions.RandomExtensions
  commentId: T:MLEM.Extended.Extensions.RandomExtensions
  id: RandomExtensions
  parent: MLEM.Extended.Extensions
  children:
  - MLEM.Extended.Extensions.RandomExtensions.NextVector2(System.Random,System.Single,System.Single)
  - MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Int32})
  - MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Single})
  langs:
  - csharp
  - vb
  name: RandomExtensions
  nameWithType: RandomExtensions
  fullName: MLEM.Extended.Extensions.RandomExtensions
  type: Class
  source:
    remote:
      path: MLEM.Extended/Extensions/RandomExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RandomExtensions
    path: ../MLEM.Extended/Extensions/RandomExtensions.cs
    startLine: 8
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  summary: A set of extension methods for dealing with <xref href="System.Random" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static class RandomExtensions
    content.vb: Public Module RandomExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Int32})
  commentId: M:MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Int32})
  id: Range(System.Random,MonoGame.Extended.Range{System.Int32})
  isExtensionMethod: true
  parent: MLEM.Extended.Extensions.RandomExtensions
  langs:
  - csharp
  - vb
  name: Range(Random, Range<int>)
  nameWithType: RandomExtensions.Range(Random, Range<int>)
  fullName: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random, MonoGame.Extended.Range<int>)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Extensions/RandomExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Range
    path: ../MLEM.Extended/Extensions/RandomExtensions.cs
    startLine: 16
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  summary: Returns a random number in the given range.
  example: []
  syntax:
    content: public static int Range(this Random random, Range<int> range)
    parameters:
    - id: random
      type: System.Random
      description: The random to use for generation
    - id: range
      type: MonoGame.Extended.Range{System.Int32}
      description: The range in which numbers will be generated
    return:
      type: System.Int32
      description: A number in the given range
    content.vb: Public Shared Function Range(random As Random, range As Range(Of Integer)) As Integer
  overload: MLEM.Extended.Extensions.RandomExtensions.Range*
  nameWithType.vb: RandomExtensions.Range(Random, Range(Of Integer))
  fullName.vb: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random, MonoGame.Extended.Range(Of Integer))
  name.vb: Range(Random, Range(Of Integer))
- uid: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Single})
  commentId: M:MLEM.Extended.Extensions.RandomExtensions.Range(System.Random,MonoGame.Extended.Range{System.Single})
  id: Range(System.Random,MonoGame.Extended.Range{System.Single})
  isExtensionMethod: true
  parent: MLEM.Extended.Extensions.RandomExtensions
  langs:
  - csharp
  - vb
  name: Range(Random, Range<float>)
  nameWithType: RandomExtensions.Range(Random, Range<float>)
  fullName: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random, MonoGame.Extended.Range<float>)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Extensions/RandomExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Range
    path: ../MLEM.Extended/Extensions/RandomExtensions.cs
    startLine: 26
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  summary: Returns a random number in the given range.
  example: []
  syntax:
    content: public static float Range(this Random random, Range<float> range)
    parameters:
    - id: random
      type: System.Random
      description: The random to use for generation
    - id: range
      type: MonoGame.Extended.Range{System.Single}
      description: The range in which numbers will be generated
    return:
      type: System.Single
      description: A number in the given range
    content.vb: Public Shared Function Range(random As Random, range As Range(Of Single)) As Single
  overload: MLEM.Extended.Extensions.RandomExtensions.Range*
  nameWithType.vb: RandomExtensions.Range(Random, Range(Of Single))
  fullName.vb: MLEM.Extended.Extensions.RandomExtensions.Range(System.Random, MonoGame.Extended.Range(Of Single))
  name.vb: Range(Random, Range(Of Single))
- uid: MLEM.Extended.Extensions.RandomExtensions.NextVector2(System.Random,System.Single,System.Single)
  commentId: M:MLEM.Extended.Extensions.RandomExtensions.NextVector2(System.Random,System.Single,System.Single)
  id: NextVector2(System.Random,System.Single,System.Single)
  isExtensionMethod: true
  parent: MLEM.Extended.Extensions.RandomExtensions
  langs:
  - csharp
  - vb
  name: NextVector2(Random, float, float)
  nameWithType: RandomExtensions.NextVector2(Random, float, float)
  fullName: MLEM.Extended.Extensions.RandomExtensions.NextVector2(System.Random, float, float)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Extensions/RandomExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: NextVector2
    path: ../MLEM.Extended/Extensions/RandomExtensions.cs
    startLine: 37
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Extensions
  summary: Returns a random vector whose x and y values are in the given range.
  example: []
  syntax:
    content: public static Vector2 NextVector2(this Random random, float min, float max)
    parameters:
    - id: random
      type: System.Random
      description: The random to use for generation
    - id: min
      type: System.Single
      description: The minimum value for each coordinate
    - id: max
      type: System.Single
      description: The maximum value for each coordinate
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: A random vector in the given range
    content.vb: Public Shared Function NextVector2(random As Random, min As Single, max As Single) As Vector2
  overload: MLEM.Extended.Extensions.RandomExtensions.NextVector2*
  nameWithType.vb: RandomExtensions.NextVector2(Random, Single, Single)
  fullName.vb: MLEM.Extended.Extensions.RandomExtensions.NextVector2(System.Random, Single, Single)
  name.vb: NextVector2(Random, Single, Single)
references:
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: MLEM.Extended.Extensions
  commentId: N:MLEM.Extended.Extensions
  href: MLEM.html
  name: MLEM.Extended.Extensions
  nameWithType: MLEM.Extended.Extensions
  fullName: MLEM.Extended.Extensions
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Extensions
    name: Extensions
    href: MLEM.Extended.Extensions.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Extensions
    name: Extensions
    href: MLEM.Extended.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Extended.Extensions.RandomExtensions.Range*
  commentId: Overload:MLEM.Extended.Extensions.RandomExtensions.Range
  href: MLEM.Extended.Extensions.RandomExtensions.html#MLEM_Extended_Extensions_RandomExtensions_Range_System_Random_MonoGame_Extended_Range_System_Int32__
  name: Range
  nameWithType: RandomExtensions.Range
  fullName: MLEM.Extended.Extensions.RandomExtensions.Range
- uid: MonoGame.Extended.Range{System.Int32}
  commentId: T:MonoGame.Extended.Range{System.Int32}
  parent: MonoGame.Extended
  definition: MonoGame.Extended.Range`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: Range<int>
  nameWithType: Range<int>
  fullName: MonoGame.Extended.Range<int>
  nameWithType.vb: Range(Of Integer)
  fullName.vb: MonoGame.Extended.Range(Of Integer)
  name.vb: Range(Of Integer)
  spec.csharp:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MonoGame.Extended.Range`1
  commentId: T:MonoGame.Extended.Range`1
  isExternal: true
  name: Range<T>
  nameWithType: Range<T>
  fullName: MonoGame.Extended.Range<T>
  nameWithType.vb: Range(Of T)
  fullName.vb: MonoGame.Extended.Range(Of T)
  name.vb: Range(Of T)
  spec.csharp:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MonoGame.Extended
  commentId: N:MonoGame.Extended
  isExternal: true
  name: MonoGame.Extended
  nameWithType: MonoGame.Extended
  fullName: MonoGame.Extended
  spec.csharp:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  spec.vb:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
- uid: MonoGame.Extended.Range{System.Single}
  commentId: T:MonoGame.Extended.Range{System.Single}
  parent: MonoGame.Extended
  definition: MonoGame.Extended.Range`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: Range<float>
  nameWithType: Range<float>
  fullName: MonoGame.Extended.Range<float>
  nameWithType.vb: Range(Of Single)
  fullName.vb: MonoGame.Extended.Range(Of Single)
  name.vb: Range(Of Single)
  spec.csharp:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: <
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '>'
  spec.vb:
  - uid: MonoGame.Extended.Range`1
    name: Range
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Extended.Extensions.RandomExtensions.NextVector2*
  commentId: Overload:MLEM.Extended.Extensions.RandomExtensions.NextVector2
  href: MLEM.Extended.Extensions.RandomExtensions.html#MLEM_Extended_Extensions_RandomExtensions_NextVector2_System_Random_System_Single_System_Single_
  name: NextVector2
  nameWithType: RandomExtensions.NextVector2
  fullName: MLEM.Extended.Extensions.RandomExtensions.NextVector2
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
