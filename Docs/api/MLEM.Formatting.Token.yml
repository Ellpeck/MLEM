### YamlMime:ManagedReference
items:
- uid: MLEM.Formatting.Token
  commentId: T:MLEM.Formatting.Token
  id: Token
  parent: MLEM.Formatting
  children:
  - MLEM.Formatting.Token.AppliedCodes
  - MLEM.Formatting.Token.DisplayString
  - MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Formatting.Token.DrawSelf(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  - MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  - MLEM.Formatting.Token.GetColor(Microsoft.Xna.Framework.Color)
  - MLEM.Formatting.Token.GetFont(MLEM.Font.GenericFont)
  - MLEM.Formatting.Token.GetSelfWidth(MLEM.Font.GenericFont)
  - MLEM.Formatting.Token.Index
  - MLEM.Formatting.Token.RawIndex
  - MLEM.Formatting.Token.RawSubstring
  - MLEM.Formatting.Token.SplitDisplayString
  - MLEM.Formatting.Token.Substring
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: Token
  fullName: MLEM.Formatting.Token
  type: Class
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Token
    path: ../MLEM/Formatting/Token.cs
    startLine: 14
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: A part of a <xref href="MLEM.Formatting.TokenizedString" data-throw-if-not-resolved="false"></xref> that has a certain list of formatting codes applied.
  example: []
  syntax:
    content: 'public class Token : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class Token Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Formatting.Token.AppliedCodes
  commentId: F:MLEM.Formatting.Token.AppliedCodes
  id: AppliedCodes
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: AppliedCodes
  nameWithType: Token.AppliedCodes
  fullName: MLEM.Formatting.Token.AppliedCodes
  type: Field
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AppliedCodes
    path: ../MLEM/Formatting/Token.cs
    startLine: 20
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The formatting codes that are applied on this token.

    Codes are stored application order, with the first entry in the array being the code that was most recently applied.
  example: []
  syntax:
    content: public readonly Code[] AppliedCodes
    return:
      type: MLEM.Formatting.Codes.Code[]
    content.vb: Public ReadOnly AppliedCodes As Code()
- uid: MLEM.Formatting.Token.Index
  commentId: F:MLEM.Formatting.Token.Index
  id: Index
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Token.Index
  fullName: MLEM.Formatting.Token.Index
  type: Field
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Index
    path: ../MLEM/Formatting/Token.cs
    startLine: 24
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The index in the <xref href="MLEM.Formatting.Token.Substring" data-throw-if-not-resolved="false"></xref> that this token starts at.
  example: []
  syntax:
    content: public readonly int Index
    return:
      type: System.Int32
    content.vb: Public ReadOnly Index As Integer
- uid: MLEM.Formatting.Token.RawIndex
  commentId: F:MLEM.Formatting.Token.RawIndex
  id: RawIndex
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: RawIndex
  nameWithType: Token.RawIndex
  fullName: MLEM.Formatting.Token.RawIndex
  type: Field
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RawIndex
    path: ../MLEM/Formatting/Token.cs
    startLine: 28
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The index in the <xref href="MLEM.Formatting.Token.RawSubstring" data-throw-if-not-resolved="false"></xref> that this token starts at.
  example: []
  syntax:
    content: public readonly int RawIndex
    return:
      type: System.Int32
    content.vb: Public ReadOnly RawIndex As Integer
- uid: MLEM.Formatting.Token.Substring
  commentId: F:MLEM.Formatting.Token.Substring
  id: Substring
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: Substring
  nameWithType: Token.Substring
  fullName: MLEM.Formatting.Token.Substring
  type: Field
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Substring
    path: ../MLEM/Formatting/Token.cs
    startLine: 32
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The substring that this token contains.
  example: []
  syntax:
    content: public readonly string Substring
    return:
      type: System.String
    content.vb: Public ReadOnly Substring As String
- uid: MLEM.Formatting.Token.DisplayString
  commentId: P:MLEM.Formatting.Token.DisplayString
  id: DisplayString
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: DisplayString
  nameWithType: Token.DisplayString
  fullName: MLEM.Formatting.Token.DisplayString
  type: Property
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DisplayString
    path: ../MLEM/Formatting/Token.cs
    startLine: 36
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The string that is displayed by this token. If the tokenized string has been <xref href="MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont%2cSystem.Single%2cSystem.Single%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont%2cSystem.Single%2cSystem.Single%2cSystem.String%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref> has been used, this string will contain the newline characters.
  example: []
  syntax:
    content: public string DisplayString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayString As String
  overload: MLEM.Formatting.Token.DisplayString*
- uid: MLEM.Formatting.Token.SplitDisplayString
  commentId: P:MLEM.Formatting.Token.SplitDisplayString
  id: SplitDisplayString
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: SplitDisplayString
  nameWithType: Token.SplitDisplayString
  fullName: MLEM.Formatting.Token.SplitDisplayString
  type: Property
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SplitDisplayString
    path: ../MLEM/Formatting/Token.cs
    startLine: 40
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The <xref href="MLEM.Formatting.Token.DisplayString" data-throw-if-not-resolved="false"></xref>, but split at newline characters
  example: []
  syntax:
    content: public string[] SplitDisplayString { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property SplitDisplayString As String()
  overload: MLEM.Formatting.Token.SplitDisplayString*
- uid: MLEM.Formatting.Token.RawSubstring
  commentId: F:MLEM.Formatting.Token.RawSubstring
  id: RawSubstring
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: RawSubstring
  nameWithType: Token.RawSubstring
  fullName: MLEM.Formatting.Token.RawSubstring
  type: Field
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RawSubstring
    path: ../MLEM/Formatting/Token.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The substring that this token contains, without the formatting codes removed.
  example: []
  syntax:
    content: public readonly string RawSubstring
    return:
      type: System.String
    content.vb: Public ReadOnly RawSubstring As String
- uid: MLEM.Formatting.Token.GetColor(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Formatting.Token.GetColor(Microsoft.Xna.Framework.Color)
  id: GetColor(Microsoft.Xna.Framework.Color)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: GetColor(Color)
  nameWithType: Token.GetColor(Color)
  fullName: MLEM.Formatting.Token.GetColor(Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetColor
    path: ../MLEM/Formatting/Token.cs
    startLine: 65
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Get the color that this token will be rendered with
  example: []
  syntax:
    content: public Color GetColor(Color defaultPick)
    parameters:
    - id: defaultPick
      type: Microsoft.Xna.Framework.Color
      description: The default color, if none is specified
    return:
      type: Microsoft.Xna.Framework.Color
      description: The color to render with
    content.vb: Public Function GetColor(defaultPick As Color) As Color
  overload: MLEM.Formatting.Token.GetColor*
- uid: MLEM.Formatting.Token.GetFont(MLEM.Font.GenericFont)
  commentId: M:MLEM.Formatting.Token.GetFont(MLEM.Font.GenericFont)
  id: GetFont(MLEM.Font.GenericFont)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: GetFont(GenericFont)
  nameWithType: Token.GetFont(GenericFont)
  fullName: MLEM.Formatting.Token.GetFont(MLEM.Font.GenericFont)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetFont
    path: ../MLEM/Formatting/Token.cs
    startLine: 79
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Get the font that this token will be rendered with
  example: []
  syntax:
    content: public GenericFont GetFont(GenericFont defaultPick)
    parameters:
    - id: defaultPick
      type: MLEM.Font.GenericFont
      description: The default font, if none is specified
    return:
      type: MLEM.Font.GenericFont
      description: The font to render with
    content.vb: Public Function GetFont(defaultPick As GenericFont) As GenericFont
  overload: MLEM.Formatting.Token.GetFont*
- uid: MLEM.Formatting.Token.GetSelfWidth(MLEM.Font.GenericFont)
  commentId: M:MLEM.Formatting.Token.GetSelfWidth(MLEM.Font.GenericFont)
  id: GetSelfWidth(MLEM.Font.GenericFont)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: GetSelfWidth(GenericFont)
  nameWithType: Token.GetSelfWidth(GenericFont)
  fullName: MLEM.Formatting.Token.GetSelfWidth(MLEM.Font.GenericFont)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetSelfWidth
    path: ../MLEM/Formatting/Token.cs
    startLine: 94
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Returns the width of the token itself, including all of the <xref href="MLEM.Formatting.Codes.Code" data-throw-if-not-resolved="false"></xref> instances that this token contains.

    Note that this method does not return the width of this token's <xref href="MLEM.Formatting.Token.DisplayString" data-throw-if-not-resolved="false"></xref>, but only the width that the codes themselves take up.
  example: []
  syntax:
    content: public float GetSelfWidth(GenericFont font)
    parameters:
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use for calculating the width.
    return:
      type: System.Single
      description: The width of this token itself.
    content.vb: Public Function GetSelfWidth(font As GenericFont) As Single
  overload: MLEM.Formatting.Token.GetSelfWidth*
- uid: MLEM.Formatting.Token.DrawSelf(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Formatting.Token.DrawSelf(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  id: DrawSelf(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: DrawSelf(GameTime, SpriteBatch, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2)
  nameWithType: Token.DrawSelf(GameTime, SpriteBatch, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2)
  fullName: MLEM.Formatting.Token.DrawSelf(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawSelf
    path: ../MLEM/Formatting/Token.cs
    startLine: 117
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Draws the token itself, including all of the <xref href="MLEM.Formatting.Codes.Code" data-throw-if-not-resolved="false"></xref> instances that this token contains.

    Note that, to draw the token's actual string, <xref href="MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime%2cMicrosoft.Xna.Framework.Graphics.SpriteBatch%2cSystem.Int32%2cSystem.String%2cSystem.Int32%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Vector2%2cMLEM.Font.GenericFont%2cMicrosoft.Xna.Framework.Color%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cMicrosoft.Xna.Framework.Vector2%2cSystem.Single%2cMicrosoft.Xna.Framework.Graphics.SpriteEffects%2cMicrosoft.Xna.Framework.Vector2%2cMicrosoft.Xna.Framework.Vector2)" data-throw-if-not-resolved="false"></xref> is used.
  example: []
  syntax:
    content: public void DrawSelf(GameTime time, SpriteBatch batch, Vector2 stringPos, Vector2 charPosOffset, GenericFont font, Color color, Vector2 scale, float rotation, Vector2 origin, float depth, SpriteEffects effects, Vector2 stringSize)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position the string is drawn at.
    - id: charPosOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset from the <code class="paramref">stringPos</code> that the current character is drawn at.
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use to draw
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to draw with
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale to draw with.
    - id: rotation
      type: System.Single
      description: The rotation to draw with.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin to subtract from the position.
    - id: depth
      type: System.Single
      description: The depth to draw at
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The flipping to draw with.
    - id: stringSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string.
    content.vb: Public Sub DrawSelf(time As GameTime, batch As SpriteBatch, stringPos As Vector2, charPosOffset As Vector2, font As GenericFont, color As Color, scale As Vector2, rotation As Single, origin As Vector2, depth As Single, effects As SpriteEffects, stringSize As Vector2)
  overload: MLEM.Formatting.Token.DrawSelf*
  nameWithType.vb: Token.DrawSelf(GameTime, SpriteBatch, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2)
  fullName.vb: MLEM.Formatting.Token.DrawSelf(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2)
  name.vb: DrawSelf(GameTime, SpriteBatch, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2)
- uid: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: DrawCharacter(GameTime, SpriteBatch, int, string, int, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2, Vector2)
  nameWithType: Token.DrawCharacter(GameTime, SpriteBatch, int, string, int, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2, Vector2)
  fullName: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, int, string, int, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawCharacter
    path: ../MLEM/Formatting/Token.cs
    startLine: 141
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Draws a given code point using this token's formatting options.
  example: []
  syntax:
    content: public void DrawCharacter(GameTime time, SpriteBatch batch, int codePoint, string character, int indexInToken, Vector2 stringPos, Vector2 charPosOffset, GenericFont font, Color color, Vector2 scale, float rotation, Vector2 origin, float depth, SpriteEffects effects, Vector2 stringSize, Vector2 charSize)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The time
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use
    - id: codePoint
      type: System.Int32
      description: The code point of the character to draw
    - id: character
      type: System.String
      description: The string representation of the character to draw
    - id: indexInToken
      type: System.Int32
      description: The index within this token that the character is at
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position the string is drawn at.
    - id: charPosOffset
      type: Microsoft.Xna.Framework.Vector2
      description: The offset from the <code class="paramref">stringPos</code> that the current character is drawn at.
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use to draw
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to draw with
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale to draw with.
    - id: rotation
      type: System.Single
      description: The rotation to draw with.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin to subtract from the position.
    - id: depth
      type: System.Single
      description: The depth to draw at
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The flipping to draw with.
    - id: stringSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the string.
    - id: charSize
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the current character.
    content.vb: Public Sub DrawCharacter(time As GameTime, batch As SpriteBatch, codePoint As Integer, character As String, indexInToken As Integer, stringPos As Vector2, charPosOffset As Vector2, font As GenericFont, color As Color, scale As Vector2, rotation As Single, origin As Vector2, depth As Single, effects As SpriteEffects, stringSize As Vector2, charSize As Vector2)
  overload: MLEM.Formatting.Token.DrawCharacter*
  nameWithType.vb: Token.DrawCharacter(GameTime, SpriteBatch, Integer, String, Integer, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2, Vector2)
  fullName.vb: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Integer, String, Integer, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  name.vb: DrawCharacter(GameTime, SpriteBatch, Integer, String, Integer, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2, Vector2)
- uid: MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  id: GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: GetArea(Vector2, float)
  nameWithType: Token.GetArea(Vector2, float)
  fullName: MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2, float)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetArea
    path: ../MLEM/Formatting/Token.cs
    startLine: 153
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Gets a list of rectangles that encompass this token's area.

    This can be used to invoke events when the mouse is hovered over the token, for example.
  example: []
  syntax:
    content: public IEnumerable<RectangleF> GetArea(Vector2 stringPos = default, float scale = 1)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the string is drawn at
    - id: scale
      type: System.Single
      description: The scale that the string is drawn at
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Maths.RectangleF}
      description: A set of rectangles that this token contains
    content.vb: Public Function GetArea(stringPos As Vector2 = Nothing, scale As Single = 1) As IEnumerable(Of RectangleF)
  overload: MLEM.Formatting.Token.GetArea*
  nameWithType.vb: Token.GetArea(Vector2, Single)
  fullName.vb: MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: GetArea(Vector2, Single)
- uid: MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: GetArea(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Formatting.Token
  langs:
  - csharp
  - vb
  name: GetArea(Vector2, Vector2)
  nameWithType: Token.GetArea(Vector2, Vector2)
  fullName: MLEM.Formatting.Token.GetArea(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/Token.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetArea
    path: ../MLEM/Formatting/Token.cs
    startLine: 164
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Gets a list of rectangles that encompass this token's area.

    This can be used to invoke events when the mouse is hovered over the token, for example.
  example: []
  syntax:
    content: public IEnumerable<RectangleF> GetArea(Vector2 stringPos, Vector2 scale)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the string is drawn at
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale that the string is drawn at
    return:
      type: System.Collections.Generic.IEnumerable{MLEM.Maths.RectangleF}
      description: A set of rectangles that this token contains
    content.vb: Public Function GetArea(stringPos As Vector2, scale As Vector2) As IEnumerable(Of RectangleF)
  overload: MLEM.Formatting.Token.GetArea*
references:
- uid: MLEM.Formatting.TokenizedString
  commentId: T:MLEM.Formatting.TokenizedString
  parent: MLEM.Formatting
  href: MLEM.Formatting.TokenizedString.html
  name: TokenizedString
  nameWithType: TokenizedString
  fullName: MLEM.Formatting.TokenizedString
- uid: MLEM.Formatting
  commentId: N:MLEM.Formatting
  href: MLEM.html
  name: MLEM.Formatting
  nameWithType: MLEM.Formatting
  fullName: MLEM.Formatting
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.GenericDataHolder.html
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.IGenericDataHolder.html
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Formatting.Codes.Code[]
  isExternal: true
  href: MLEM.Formatting.Codes.Code.html
  name: Code[]
  nameWithType: Code[]
  fullName: MLEM.Formatting.Codes.Code[]
  nameWithType.vb: Code()
  fullName.vb: MLEM.Formatting.Codes.Code()
  name.vb: Code()
  spec.csharp:
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: (
  - name: )
- uid: MLEM.Formatting.Token.Substring
  commentId: F:MLEM.Formatting.Token.Substring
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_Substring
  name: Substring
  nameWithType: Token.Substring
  fullName: MLEM.Formatting.Token.Substring
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Formatting.Token.RawSubstring
  commentId: F:MLEM.Formatting.Token.RawSubstring
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_RawSubstring
  name: RawSubstring
  nameWithType: Token.RawSubstring
  fullName: MLEM.Formatting.Token.RawSubstring
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  isExternal: true
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  name: Split(GenericFont, float, float, TextAlignment)
  nameWithType: TokenizedString.Split(GenericFont, float, float, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, float, float, MLEM.Formatting.TextAlignment)
  nameWithType.vb: TokenizedString.Split(GenericFont, Single, Single, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, Single, Single, MLEM.Formatting.TextAlignment)
  name.vb: Split(GenericFont, Single, Single, TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
    name: Split
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
    name: Split
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  isExternal: true
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  name: Truncate(GenericFont, float, float, string, TextAlignment)
  nameWithType: TokenizedString.Truncate(GenericFont, float, float, string, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, float, float, string, MLEM.Formatting.TextAlignment)
  nameWithType.vb: TokenizedString.Truncate(GenericFont, Single, Single, String, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, Single, Single, String, MLEM.Formatting.TextAlignment)
  name.vb: Truncate(GenericFont, Single, Single, String, TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
    name: Truncate
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
    name: Truncate
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting.Token.DisplayString*
  commentId: Overload:MLEM.Formatting.Token.DisplayString
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DisplayString
  name: DisplayString
  nameWithType: Token.DisplayString
  fullName: MLEM.Formatting.Token.DisplayString
- uid: MLEM.Formatting.Token.DisplayString
  commentId: P:MLEM.Formatting.Token.DisplayString
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DisplayString
  name: DisplayString
  nameWithType: Token.DisplayString
  fullName: MLEM.Formatting.Token.DisplayString
- uid: MLEM.Formatting.Token.SplitDisplayString*
  commentId: Overload:MLEM.Formatting.Token.SplitDisplayString
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_SplitDisplayString
  name: SplitDisplayString
  nameWithType: Token.SplitDisplayString
  fullName: MLEM.Formatting.Token.SplitDisplayString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: MLEM.Formatting.Token.GetColor*
  commentId: Overload:MLEM.Formatting.Token.GetColor
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_GetColor_Microsoft_Xna_Framework_Color_
  name: GetColor
  nameWithType: Token.GetColor
  fullName: MLEM.Formatting.Token.GetColor
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Formatting.Token.GetFont*
  commentId: Overload:MLEM.Formatting.Token.GetFont
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_GetFont_MLEM_Font_GenericFont_
  name: GetFont
  nameWithType: Token.GetFont
  fullName: MLEM.Formatting.Token.GetFont
- uid: MLEM.Font.GenericFont
  commentId: T:MLEM.Font.GenericFont
  parent: MLEM.Font
  href: MLEM.Font.GenericFont.html
  name: GenericFont
  nameWithType: GenericFont
  fullName: MLEM.Font.GenericFont
- uid: MLEM.Font
  commentId: N:MLEM.Font
  href: MLEM.html
  name: MLEM.Font
  nameWithType: MLEM.Font
  fullName: MLEM.Font
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
- uid: MLEM.Formatting.Codes.Code
  commentId: T:MLEM.Formatting.Codes.Code
  parent: MLEM.Formatting.Codes
  href: MLEM.Formatting.Codes.Code.html
  name: Code
  nameWithType: Code
  fullName: MLEM.Formatting.Codes.Code
- uid: MLEM.Formatting.Token.GetSelfWidth*
  commentId: Overload:MLEM.Formatting.Token.GetSelfWidth
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_GetSelfWidth_MLEM_Font_GenericFont_
  name: GetSelfWidth
  nameWithType: Token.GetSelfWidth
  fullName: MLEM.Formatting.Token.GetSelfWidth
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Formatting.Codes
  commentId: N:MLEM.Formatting.Codes
  href: MLEM.html
  name: MLEM.Formatting.Codes
  nameWithType: MLEM.Formatting.Codes
  fullName: MLEM.Formatting.Codes
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  - name: .
  - uid: MLEM.Formatting.Codes
    name: Codes
    href: MLEM.Formatting.Codes.html
- uid: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  isExternal: true
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DrawCharacter_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_String_System_Int32_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: DrawCharacter(GameTime, SpriteBatch, int, string, int, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2, Vector2)
  nameWithType: Token.DrawCharacter(GameTime, SpriteBatch, int, string, int, Vector2, Vector2, GenericFont, Color, Vector2, float, Vector2, float, SpriteEffects, Vector2, Vector2)
  fullName: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, int, string, int, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Vector2, float, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  nameWithType.vb: Token.DrawCharacter(GameTime, SpriteBatch, Integer, String, Integer, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2, Vector2)
  fullName.vb: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Integer, String, Integer, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Vector2, Single, Microsoft.Xna.Framework.Graphics.SpriteEffects, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  name.vb: DrawCharacter(GameTime, SpriteBatch, Integer, String, Integer, Vector2, Vector2, GenericFont, Color, Vector2, Single, Vector2, Single, SpriteEffects, Vector2, Vector2)
  spec.csharp:
  - uid: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
    name: DrawCharacter
    href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DrawCharacter_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_String_System_Int32_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.Token.DrawCharacter(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.String,System.Int32,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Vector2,System.Single,Microsoft.Xna.Framework.Graphics.SpriteEffects,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
    name: DrawCharacter
    href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DrawCharacter_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_String_System_Int32_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Color
    name: Color
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
    name: SpriteEffects
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Formatting.Token.DrawSelf*
  commentId: Overload:MLEM.Formatting.Token.DrawSelf
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DrawSelf_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_
  name: DrawSelf
  nameWithType: Token.DrawSelf
  fullName: MLEM.Formatting.Token.DrawSelf
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Formatting.Token.DrawCharacter*
  commentId: Overload:MLEM.Formatting.Token.DrawCharacter
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_DrawCharacter_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_String_System_Int32_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Vector2_System_Single_Microsoft_Xna_Framework_Graphics_SpriteEffects_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: DrawCharacter
  nameWithType: Token.DrawCharacter
  fullName: MLEM.Formatting.Token.DrawCharacter
- uid: MLEM.Formatting.Token.GetArea*
  commentId: Overload:MLEM.Formatting.Token.GetArea
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_GetArea_Microsoft_Xna_Framework_Vector2_System_Single_
  name: GetArea
  nameWithType: Token.GetArea
  fullName: MLEM.Formatting.Token.GetArea
- uid: System.Collections.Generic.IEnumerable{MLEM.Maths.RectangleF}
  commentId: T:System.Collections.Generic.IEnumerable{MLEM.Maths.RectangleF}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<RectangleF>
  nameWithType: IEnumerable<RectangleF>
  fullName: System.Collections.Generic.IEnumerable<MLEM.Maths.RectangleF>
  nameWithType.vb: IEnumerable(Of RectangleF)
  fullName.vb: System.Collections.Generic.IEnumerable(Of MLEM.Maths.RectangleF)
  name.vb: IEnumerable(Of RectangleF)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
