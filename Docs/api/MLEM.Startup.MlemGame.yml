### YamlMime:ManagedReference
items:
- uid: MLEM.Startup.MlemGame
  commentId: T:MLEM.Startup.MlemGame
  id: MlemGame
  parent: MLEM.Startup
  children:
  - MLEM.Startup.MlemGame.#ctor(System.Int32,System.Int32)
  - MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  - MLEM.Startup.MlemGame.GraphicsDeviceManager
  - MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  - MLEM.Startup.MlemGame.Input
  - MLEM.Startup.MlemGame.InputHandler
  - MLEM.Startup.MlemGame.LoadContent
  - MLEM.Startup.MlemGame.LoadContent``1(System.String)
  - MLEM.Startup.MlemGame.OnDraw
  - MLEM.Startup.MlemGame.OnLoadContent
  - MLEM.Startup.MlemGame.OnUpdate
  - MLEM.Startup.MlemGame.PreDraw
  - MLEM.Startup.MlemGame.PreUpdate
  - MLEM.Startup.MlemGame.SpriteBatch
  - MLEM.Startup.MlemGame.UiSystem
  - MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: MlemGame
  nameWithType: MlemGame
  fullName: MLEM.Startup.MlemGame
  type: Class
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MlemGame
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 14
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    MlemGame is an extension of MonoGame's default <xref href="Microsoft.Xna.Framework.Game" data-throw-if-not-resolved="false"></xref> class.

    It features the default template setup, as well as an <xref href="MLEM.Startup.MlemGame.InputHandler" data-throw-if-not-resolved="false"></xref>, a <xref href="MLEM.Startup.MlemGame.UiSystem" data-throw-if-not-resolved="false"></xref> and some additional callback events.

    It also runs all of the <xref href="Coroutine.CoroutineHandler" data-throw-if-not-resolved="false"></xref> callbacks which can be used through <xref href="MLEM.Startup.CoroutineEvents" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class MlemGame : Game, IDisposable'
    content.vb: Public Class MlemGame Inherits Game Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.Xna.Framework.Game
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.Xna.Framework.Game.Dispose
  - Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  - Microsoft.Xna.Framework.Game.Exit
  - Microsoft.Xna.Framework.Game.ResetElapsedTime
  - Microsoft.Xna.Framework.Game.SuppressDraw
  - Microsoft.Xna.Framework.Game.RunOneFrame
  - Microsoft.Xna.Framework.Game.Run
  - Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  - Microsoft.Xna.Framework.Game.Tick
  - Microsoft.Xna.Framework.Game.BeginDraw
  - Microsoft.Xna.Framework.Game.EndDraw
  - Microsoft.Xna.Framework.Game.BeginRun
  - Microsoft.Xna.Framework.Game.EndRun
  - Microsoft.Xna.Framework.Game.UnloadContent
  - Microsoft.Xna.Framework.Game.Initialize
  - Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  - Microsoft.Xna.Framework.Game.LaunchParameters
  - Microsoft.Xna.Framework.Game.Components
  - Microsoft.Xna.Framework.Game.InactiveSleepTime
  - Microsoft.Xna.Framework.Game.MaxElapsedTime
  - Microsoft.Xna.Framework.Game.IsActive
  - Microsoft.Xna.Framework.Game.IsMouseVisible
  - Microsoft.Xna.Framework.Game.TargetElapsedTime
  - Microsoft.Xna.Framework.Game.IsFixedTimeStep
  - Microsoft.Xna.Framework.Game.Services
  - Microsoft.Xna.Framework.Game.Content
  - Microsoft.Xna.Framework.Game.GraphicsDevice
  - Microsoft.Xna.Framework.Game.Window
  - Microsoft.Xna.Framework.Game.Activated
  - Microsoft.Xna.Framework.Game.Deactivated
  - Microsoft.Xna.Framework.Game.Disposed
  - Microsoft.Xna.Framework.Game.Exiting
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Startup.MlemGame.Input
  commentId: P:MLEM.Startup.MlemGame.Input
  id: Input
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
  type: Property
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Input
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 20
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: The static game instance's input handler
  example: []
  syntax:
    content: public static InputHandler Input { get; }
    parameters: []
    return:
      type: MLEM.Input.InputHandler
    content.vb: Public Shared ReadOnly Property Input As InputHandler
  overload: MLEM.Startup.MlemGame.Input*
- uid: MLEM.Startup.MlemGame.GraphicsDeviceManager
  commentId: F:MLEM.Startup.MlemGame.GraphicsDeviceManager
  id: GraphicsDeviceManager
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: GraphicsDeviceManager
  nameWithType: MlemGame.GraphicsDeviceManager
  fullName: MLEM.Startup.MlemGame.GraphicsDeviceManager
  type: Field
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GraphicsDeviceManager
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 25
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: This game's graphics device manager, initialized in the constructor
  example: []
  syntax:
    content: public readonly GraphicsDeviceManager GraphicsDeviceManager
    return:
      type: Microsoft.Xna.Framework.GraphicsDeviceManager
    content.vb: Public ReadOnly GraphicsDeviceManager As GraphicsDeviceManager
- uid: MLEM.Startup.MlemGame.SpriteBatch
  commentId: P:MLEM.Startup.MlemGame.SpriteBatch
  id: SpriteBatch
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: SpriteBatch
  nameWithType: MlemGame.SpriteBatch
  fullName: MLEM.Startup.MlemGame.SpriteBatch
  type: Property
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SpriteBatch
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 29
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: This game's sprite batch
  example: []
  syntax:
    content: public SpriteBatch SpriteBatch { get; protected set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    content.vb: Public Property SpriteBatch As SpriteBatch
  overload: MLEM.Startup.MlemGame.SpriteBatch*
- uid: MLEM.Startup.MlemGame.InputHandler
  commentId: P:MLEM.Startup.MlemGame.InputHandler
  id: InputHandler
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: InputHandler
  nameWithType: MlemGame.InputHandler
  fullName: MLEM.Startup.MlemGame.InputHandler
  type: Property
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: InputHandler
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 33
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: This game's input handler. This can easily be accessed through <xref href="MLEM.Startup.MlemGame.Input" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public InputHandler InputHandler { get; protected set; }
    parameters: []
    return:
      type: MLEM.Input.InputHandler
    content.vb: Public Property InputHandler As InputHandler
  overload: MLEM.Startup.MlemGame.InputHandler*
- uid: MLEM.Startup.MlemGame.UiSystem
  commentId: P:MLEM.Startup.MlemGame.UiSystem
  id: UiSystem
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: UiSystem
  nameWithType: MlemGame.UiSystem
  fullName: MLEM.Startup.MlemGame.UiSystem
  type: Property
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: UiSystem
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 37
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: This game's ui system
  example: []
  syntax:
    content: public UiSystem UiSystem { get; protected set; }
    parameters: []
    return:
      type: MLEM.Ui.UiSystem
    content.vb: Public Property UiSystem As UiSystem
  overload: MLEM.Startup.MlemGame.UiSystem*
- uid: MLEM.Startup.MlemGame.OnLoadContent
  commentId: E:MLEM.Startup.MlemGame.OnLoadContent
  id: OnLoadContent
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: OnLoadContent
  nameWithType: MlemGame.OnLoadContent
  fullName: MLEM.Startup.MlemGame.OnLoadContent
  type: Event
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: OnLoadContent
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 42
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: An event that is invoked in <xref href="MLEM.Startup.MlemGame.LoadContent" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public event MlemGame.GenericCallback OnLoadContent
    return:
      type: MLEM.Startup.MlemGame.GenericCallback
    content.vb: Public Event OnLoadContent As MlemGame.GenericCallback
- uid: MLEM.Startup.MlemGame.PreUpdate
  commentId: E:MLEM.Startup.MlemGame.PreUpdate
  id: PreUpdate
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: PreUpdate
  nameWithType: MlemGame.PreUpdate
  fullName: MLEM.Startup.MlemGame.PreUpdate
  type: Event
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: PreUpdate
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 46
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: An event that is invoked in <xref href="MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>, before <xref href="MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public event MlemGame.TimeCallback PreUpdate
    return:
      type: MLEM.Startup.MlemGame.TimeCallback
    content.vb: Public Event PreUpdate As MlemGame.TimeCallback
- uid: MLEM.Startup.MlemGame.OnUpdate
  commentId: E:MLEM.Startup.MlemGame.OnUpdate
  id: OnUpdate
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: MlemGame.OnUpdate
  fullName: MLEM.Startup.MlemGame.OnUpdate
  type: Event
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: OnUpdate
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 50
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: An event that is invoked in <xref href="MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>, after <xref href="MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public event MlemGame.TimeCallback OnUpdate
    return:
      type: MLEM.Startup.MlemGame.TimeCallback
    content.vb: Public Event OnUpdate As MlemGame.TimeCallback
- uid: MLEM.Startup.MlemGame.PreDraw
  commentId: E:MLEM.Startup.MlemGame.PreDraw
  id: PreDraw
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: PreDraw
  nameWithType: MlemGame.PreDraw
  fullName: MLEM.Startup.MlemGame.PreDraw
  type: Event
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: PreDraw
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 54
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: An event that is invoked in <xref href="MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>, before <xref href="MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public event MlemGame.TimeCallback PreDraw
    return:
      type: MLEM.Startup.MlemGame.TimeCallback
    content.vb: Public Event PreDraw As MlemGame.TimeCallback
- uid: MLEM.Startup.MlemGame.OnDraw
  commentId: E:MLEM.Startup.MlemGame.OnDraw
  id: OnDraw
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: OnDraw
  nameWithType: MlemGame.OnDraw
  fullName: MLEM.Startup.MlemGame.OnDraw
  type: Event
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: OnDraw
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 58
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: An event that is invoked in <xref href="MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>, after <xref href="MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> is called.
  example: []
  syntax:
    content: public event MlemGame.TimeCallback OnDraw
    return:
      type: MLEM.Startup.MlemGame.TimeCallback
    content.vb: Public Event OnDraw As MlemGame.TimeCallback
- uid: MLEM.Startup.MlemGame.#ctor(System.Int32,System.Int32)
  commentId: M:MLEM.Startup.MlemGame.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: MlemGame(int, int)
  nameWithType: MlemGame.MlemGame(int, int)
  fullName: MLEM.Startup.MlemGame.MlemGame(int, int)
  type: Constructor
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 65
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: Creates a new MlemGame instance with some default settings
  example: []
  syntax:
    content: public MlemGame(int windowWidth = 1280, int windowHeight = 720)
    parameters:
    - id: windowWidth
      type: System.Int32
      description: The default window width
    - id: windowHeight
      type: System.Int32
      description: The default window height
    content.vb: Public Sub New(windowWidth As Integer = 1280, windowHeight As Integer = 720)
  overload: MLEM.Startup.MlemGame.#ctor*
  nameWithType.vb: MlemGame.New(Integer, Integer)
  fullName.vb: MLEM.Startup.MlemGame.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: MLEM.Startup.MlemGame.LoadContent
  commentId: M:MLEM.Startup.MlemGame.LoadContent
  id: LoadContent
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: LoadContent()
  nameWithType: MlemGame.LoadContent()
  fullName: MLEM.Startup.MlemGame.LoadContent()
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LoadContent
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 82
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: Override this to load graphical resources required by the game.
  example: []
  syntax:
    content: protected override void LoadContent()
    content.vb: Protected Overrides Sub LoadContent()
  overridden: Microsoft.Xna.Framework.Game.LoadContent
  overload: MLEM.Startup.MlemGame.LoadContent*
- uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: MlemGame.Update(GameTime)
  fullName: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Update
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 97
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    Called when the game should update.

    Updates the <xref href="Microsoft.Xna.Framework.GameComponent" data-throw-if-not-resolved="false"></xref> instances attached to this game.

    Override <xref href="MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> to update your game.
  example: []
  syntax:
    content: protected override sealed void Update(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: The elapsed time since the last call to <xref href="Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected NotOverridable Overrides Sub Update(gameTime As GameTime)
  overridden: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  overload: MLEM.Startup.MlemGame.Update*
- uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  id: Draw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: Draw(GameTime)
  nameWithType: MlemGame.Draw(GameTime)
  fullName: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 114
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    Called when the game should draw a frame.

    Draws the <xref href="Microsoft.Xna.Framework.DrawableGameComponent" data-throw-if-not-resolved="false"></xref> instances attached to this game.

    Override <xref href="MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> to render your game.
  example: []
  syntax:
    content: protected override sealed void Draw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: A <xref href="Microsoft.Xna.Framework.GameTime" data-throw-if-not-resolved="false"></xref> instance containing the elapsed time since the last call to <xref href="Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref> and the total time elapsed since the game started.
    content.vb: Protected NotOverridable Overrides Sub Draw(gameTime As GameTime)
  overridden: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  overload: MLEM.Startup.MlemGame.Draw*
- uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  id: DoDraw(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: DoDraw(GameTime)
  nameWithType: MlemGame.DoDraw(GameTime)
  fullName: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DoDraw
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 130
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    This method is called in <xref href="MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>.

    It is the version that should be overridden by implementors to draw game content.
  example: []
  syntax:
    content: protected virtual void DoDraw(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Protected Overridable Sub DoDraw(gameTime As GameTime)
  overload: MLEM.Startup.MlemGame.DoDraw*
- uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  id: DoUpdate(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: DoUpdate(GameTime)
  nameWithType: MlemGame.DoUpdate(GameTime)
  fullName: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DoUpdate
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 139
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    This method is called in <xref href="MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)" data-throw-if-not-resolved="false"></xref>.

    It is the version that should be overridden by implementors to update game content.
  example: []
  syntax:
    content: protected virtual void DoUpdate(GameTime gameTime)
    parameters:
    - id: gameTime
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Protected Overridable Sub DoUpdate(gameTime As GameTime)
  overload: MLEM.Startup.MlemGame.DoUpdate*
- uid: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  commentId: M:MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  id: InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: InitializeDefaultUiStyle(SpriteBatch)
  nameWithType: MlemGame.InitializeDefaultUiStyle(SpriteBatch)
  fullName: MLEM.Startup.MlemGame.InitializeDefaultUiStyle(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: InitializeDefaultUiStyle
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 149
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    This method is called in <xref href="MLEM.Startup.MlemGame.LoadContent" data-throw-if-not-resolved="false"></xref> when the <xref href="MLEM.Startup.MlemGame.UiSystem" data-throw-if-not-resolved="false"></xref> is initialized.

    Override this method to easily modify or create a new default <xref href="MLEM.Ui.Style.UiStyle" data-throw-if-not-resolved="false"></xref> for this game's <xref href="MLEM.Startup.MlemGame.UiSystem" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected virtual UiStyle InitializeDefaultUiStyle(SpriteBatch batch)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use
    return:
      type: MLEM.Ui.Style.UiStyle
      description: The <xref href="MLEM.Ui.Style.UiStyle" data-throw-if-not-resolved="false"></xref> to use for this game's <xref href="MLEM.Startup.MlemGame.UiSystem" data-throw-if-not-resolved="false"></xref>.
    content.vb: Protected Overridable Function InitializeDefaultUiStyle(batch As SpriteBatch) As UiStyle
  overload: MLEM.Startup.MlemGame.InitializeDefaultUiStyle*
- uid: MLEM.Startup.MlemGame.LoadContent``1(System.String)
  commentId: M:MLEM.Startup.MlemGame.LoadContent``1(System.String)
  id: LoadContent``1(System.String)
  parent: MLEM.Startup.MlemGame
  langs:
  - csharp
  - vb
  name: LoadContent<T>(string)
  nameWithType: MlemGame.LoadContent<T>(string)
  fullName: MLEM.Startup.MlemGame.LoadContent<T>(string)
  type: Method
  source:
    remote:
      path: MLEM.Startup/MlemGame.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LoadContent
    path: ../MLEM.Startup/MlemGame.cs
    startLine: 160
  assemblies:
  - MLEM.Startup
  namespace: MLEM.Startup
  summary: >-
    Static helper method for <xref href="Microsoft.Xna.Framework.Content.ContentManager.Load%60%601(System.String)" data-throw-if-not-resolved="false"></xref>.

    This just invokes the game instance's load method.
  example: []
  syntax:
    content: public static T LoadContent<T>(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the content file to load
    typeParameters:
    - id: T
      description: The type of content to load
    return:
      type: '{T}'
      description: The loaded content
    content.vb: Public Shared Function LoadContent(Of T)(name As String) As T
  overload: MLEM.Startup.MlemGame.LoadContent*
  nameWithType.vb: MlemGame.LoadContent(Of T)(String)
  fullName.vb: MLEM.Startup.MlemGame.LoadContent(Of T)(String)
  name.vb: LoadContent(Of T)(String)
references:
- uid: Microsoft.Xna.Framework.Game
  commentId: T:Microsoft.Xna.Framework.Game
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Game
  nameWithType: Game
  fullName: Microsoft.Xna.Framework.Game
- uid: MLEM.Startup.MlemGame.InputHandler
  commentId: P:MLEM.Startup.MlemGame.InputHandler
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_InputHandler
  name: InputHandler
  nameWithType: MlemGame.InputHandler
  fullName: MLEM.Startup.MlemGame.InputHandler
- uid: MLEM.Startup.MlemGame.UiSystem
  commentId: P:MLEM.Startup.MlemGame.UiSystem
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_UiSystem
  name: UiSystem
  nameWithType: MlemGame.UiSystem
  fullName: MLEM.Startup.MlemGame.UiSystem
- uid: Coroutine.CoroutineHandler
  commentId: T:Coroutine.CoroutineHandler
  isExternal: true
  name: CoroutineHandler
  nameWithType: CoroutineHandler
  fullName: Coroutine.CoroutineHandler
- uid: MLEM.Startup.CoroutineEvents
  commentId: T:MLEM.Startup.CoroutineEvents
  href: MLEM.Startup.CoroutineEvents.html
  name: CoroutineEvents
  nameWithType: CoroutineEvents
  fullName: MLEM.Startup.CoroutineEvents
- uid: MLEM.Startup
  commentId: N:MLEM.Startup
  href: MLEM.html
  name: MLEM.Startup
  nameWithType: MLEM.Startup
  fullName: MLEM.Startup
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Startup
    name: Startup
    href: MLEM.Startup.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Startup
    name: Startup
    href: MLEM.Startup.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.Xna.Framework.Game.Dispose
  commentId: M:Microsoft.Xna.Framework.Game.Dispose
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Dispose()
  nameWithType: Game.Dispose()
  fullName: Microsoft.Xna.Framework.Game.Dispose()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose
    name: Dispose
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  commentId: M:Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: Dispose(bool)
  nameWithType: Game.Dispose(bool)
  fullName: Microsoft.Xna.Framework.Game.Dispose(bool)
  nameWithType.vb: Game.Dispose(Boolean)
  fullName.vb: Microsoft.Xna.Framework.Game.Dispose(Boolean)
  name.vb: Dispose(Boolean)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    name: Dispose
    isExternal: true
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Microsoft.Xna.Framework.Game.Exit
  commentId: M:Microsoft.Xna.Framework.Game.Exit
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exit()
  nameWithType: Game.Exit()
  fullName: Microsoft.Xna.Framework.Game.Exit()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Exit
    name: Exit
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
  commentId: M:Microsoft.Xna.Framework.Game.ResetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: ResetElapsedTime()
  nameWithType: Game.ResetElapsedTime()
  fullName: Microsoft.Xna.Framework.Game.ResetElapsedTime()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.ResetElapsedTime
    name: ResetElapsedTime
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.SuppressDraw
  commentId: M:Microsoft.Xna.Framework.Game.SuppressDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: SuppressDraw()
  nameWithType: Game.SuppressDraw()
  fullName: Microsoft.Xna.Framework.Game.SuppressDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.SuppressDraw
    name: SuppressDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.RunOneFrame
  commentId: M:Microsoft.Xna.Framework.Game.RunOneFrame
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: RunOneFrame()
  nameWithType: Game.RunOneFrame()
  fullName: Microsoft.Xna.Framework.Game.RunOneFrame()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.RunOneFrame
    name: RunOneFrame
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Run
  commentId: M:Microsoft.Xna.Framework.Game.Run
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run()
  nameWithType: Game.Run()
  fullName: Microsoft.Xna.Framework.Game.Run()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run
    name: Run
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  commentId: M:Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Run(GameRunBehavior)
  nameWithType: Game.Run(GameRunBehavior)
  fullName: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    name: Run
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameRunBehavior
    name: GameRunBehavior
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework.Game.Tick
  commentId: M:Microsoft.Xna.Framework.Game.Tick
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Tick()
  nameWithType: Game.Tick()
  fullName: Microsoft.Xna.Framework.Game.Tick()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Tick
    name: Tick
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.BeginDraw
  commentId: M:Microsoft.Xna.Framework.Game.BeginDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginDraw()
  nameWithType: Game.BeginDraw()
  fullName: Microsoft.Xna.Framework.Game.BeginDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginDraw
    name: BeginDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.EndDraw
  commentId: M:Microsoft.Xna.Framework.Game.EndDraw
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndDraw()
  nameWithType: Game.EndDraw()
  fullName: Microsoft.Xna.Framework.Game.EndDraw()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndDraw
    name: EndDraw
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.BeginRun
  commentId: M:Microsoft.Xna.Framework.Game.BeginRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: BeginRun()
  nameWithType: Game.BeginRun()
  fullName: Microsoft.Xna.Framework.Game.BeginRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.BeginRun
    name: BeginRun
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.EndRun
  commentId: M:Microsoft.Xna.Framework.Game.EndRun
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: EndRun()
  nameWithType: Game.EndRun()
  fullName: Microsoft.Xna.Framework.Game.EndRun()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.EndRun
    name: EndRun
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.UnloadContent
  commentId: M:Microsoft.Xna.Framework.Game.UnloadContent
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: UnloadContent()
  nameWithType: Game.UnloadContent()
  fullName: Microsoft.Xna.Framework.Game.UnloadContent()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.UnloadContent
    name: UnloadContent
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.Initialize
  commentId: M:Microsoft.Xna.Framework.Game.Initialize
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Initialize()
  nameWithType: Game.Initialize()
  fullName: Microsoft.Xna.Framework.Game.Initialize()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Initialize
    name: Initialize
    isExternal: true
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnExiting(object, EventArgs)
  nameWithType: Game.OnExiting(object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnExiting(object, System.EventArgs)
  nameWithType.vb: Game.OnExiting(Object, EventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnExiting(Object, System.EventArgs)
  name.vb: OnExiting(Object, EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
    name: OnExiting
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
    name: OnExiting
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnActivated(object, EventArgs)
  nameWithType: Game.OnActivated(object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnActivated(object, System.EventArgs)
  nameWithType.vb: Game.OnActivated(Object, EventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnActivated(Object, System.EventArgs)
  name.vb: OnActivated(Object, EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    name: OnActivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  commentId: M:Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: OnDeactivated(object, EventArgs)
  nameWithType: Game.OnDeactivated(object, EventArgs)
  fullName: Microsoft.Xna.Framework.Game.OnDeactivated(object, System.EventArgs)
  nameWithType.vb: Game.OnDeactivated(Object, EventArgs)
  fullName.vb: Microsoft.Xna.Framework.Game.OnDeactivated(Object, System.EventArgs)
  name.vb: OnDeactivated(Object, EventArgs)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    name: OnDeactivated
    isExternal: true
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.EventArgs
    name: EventArgs
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventargs
  - name: )
- uid: Microsoft.Xna.Framework.Game.LaunchParameters
  commentId: P:Microsoft.Xna.Framework.Game.LaunchParameters
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: LaunchParameters
  nameWithType: Game.LaunchParameters
  fullName: Microsoft.Xna.Framework.Game.LaunchParameters
- uid: Microsoft.Xna.Framework.Game.Components
  commentId: P:Microsoft.Xna.Framework.Game.Components
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Components
  nameWithType: Game.Components
  fullName: Microsoft.Xna.Framework.Game.Components
- uid: Microsoft.Xna.Framework.Game.InactiveSleepTime
  commentId: P:Microsoft.Xna.Framework.Game.InactiveSleepTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: InactiveSleepTime
  nameWithType: Game.InactiveSleepTime
  fullName: Microsoft.Xna.Framework.Game.InactiveSleepTime
- uid: Microsoft.Xna.Framework.Game.MaxElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.MaxElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: MaxElapsedTime
  nameWithType: Game.MaxElapsedTime
  fullName: Microsoft.Xna.Framework.Game.MaxElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsActive
  commentId: P:Microsoft.Xna.Framework.Game.IsActive
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsActive
  nameWithType: Game.IsActive
  fullName: Microsoft.Xna.Framework.Game.IsActive
- uid: Microsoft.Xna.Framework.Game.IsMouseVisible
  commentId: P:Microsoft.Xna.Framework.Game.IsMouseVisible
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsMouseVisible
  nameWithType: Game.IsMouseVisible
  fullName: Microsoft.Xna.Framework.Game.IsMouseVisible
- uid: Microsoft.Xna.Framework.Game.TargetElapsedTime
  commentId: P:Microsoft.Xna.Framework.Game.TargetElapsedTime
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: TargetElapsedTime
  nameWithType: Game.TargetElapsedTime
  fullName: Microsoft.Xna.Framework.Game.TargetElapsedTime
- uid: Microsoft.Xna.Framework.Game.IsFixedTimeStep
  commentId: P:Microsoft.Xna.Framework.Game.IsFixedTimeStep
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: IsFixedTimeStep
  nameWithType: Game.IsFixedTimeStep
  fullName: Microsoft.Xna.Framework.Game.IsFixedTimeStep
- uid: Microsoft.Xna.Framework.Game.Services
  commentId: P:Microsoft.Xna.Framework.Game.Services
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Services
  nameWithType: Game.Services
  fullName: Microsoft.Xna.Framework.Game.Services
- uid: Microsoft.Xna.Framework.Game.Content
  commentId: P:Microsoft.Xna.Framework.Game.Content
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Content
  nameWithType: Game.Content
  fullName: Microsoft.Xna.Framework.Game.Content
- uid: Microsoft.Xna.Framework.Game.GraphicsDevice
  commentId: P:Microsoft.Xna.Framework.Game.GraphicsDevice
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: GraphicsDevice
  nameWithType: Game.GraphicsDevice
  fullName: Microsoft.Xna.Framework.Game.GraphicsDevice
- uid: Microsoft.Xna.Framework.Game.Window
  commentId: P:Microsoft.Xna.Framework.Game.Window
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Window
  nameWithType: Game.Window
  fullName: Microsoft.Xna.Framework.Game.Window
- uid: Microsoft.Xna.Framework.Game.Activated
  commentId: E:Microsoft.Xna.Framework.Game.Activated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Activated
  nameWithType: Game.Activated
  fullName: Microsoft.Xna.Framework.Game.Activated
- uid: Microsoft.Xna.Framework.Game.Deactivated
  commentId: E:Microsoft.Xna.Framework.Game.Deactivated
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Deactivated
  nameWithType: Game.Deactivated
  fullName: Microsoft.Xna.Framework.Game.Deactivated
- uid: Microsoft.Xna.Framework.Game.Disposed
  commentId: E:Microsoft.Xna.Framework.Game.Disposed
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Disposed
  nameWithType: Game.Disposed
  fullName: Microsoft.Xna.Framework.Game.Disposed
- uid: Microsoft.Xna.Framework.Game.Exiting
  commentId: E:Microsoft.Xna.Framework.Game.Exiting
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Exiting
  nameWithType: Game.Exiting
  fullName: Microsoft.Xna.Framework.Game.Exiting
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Startup.MlemGame.Input*
  commentId: Overload:MLEM.Startup.MlemGame.Input
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Input
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
- uid: MLEM.Input.InputHandler
  commentId: T:MLEM.Input.InputHandler
  parent: MLEM.Input
  href: MLEM.Input.InputHandler.html
  name: InputHandler
  nameWithType: InputHandler
  fullName: MLEM.Input.InputHandler
- uid: MLEM.Input
  commentId: N:MLEM.Input
  href: MLEM.html
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Input
    name: Input
    href: MLEM.Input.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Input
    name: Input
    href: MLEM.Input.html
- uid: Microsoft.Xna.Framework.GraphicsDeviceManager
  commentId: T:Microsoft.Xna.Framework.GraphicsDeviceManager
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GraphicsDeviceManager
  nameWithType: GraphicsDeviceManager
  fullName: Microsoft.Xna.Framework.GraphicsDeviceManager
- uid: MLEM.Startup.MlemGame.SpriteBatch*
  commentId: Overload:MLEM.Startup.MlemGame.SpriteBatch
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_SpriteBatch
  name: SpriteBatch
  nameWithType: MlemGame.SpriteBatch
  fullName: MLEM.Startup.MlemGame.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Startup.MlemGame.Input
  commentId: P:MLEM.Startup.MlemGame.Input
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Input
  name: Input
  nameWithType: MlemGame.Input
  fullName: MLEM.Startup.MlemGame.Input
- uid: MLEM.Startup.MlemGame.InputHandler*
  commentId: Overload:MLEM.Startup.MlemGame.InputHandler
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_InputHandler
  name: InputHandler
  nameWithType: MlemGame.InputHandler
  fullName: MLEM.Startup.MlemGame.InputHandler
- uid: MLEM.Startup.MlemGame.UiSystem*
  commentId: Overload:MLEM.Startup.MlemGame.UiSystem
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_UiSystem
  name: UiSystem
  nameWithType: MlemGame.UiSystem
  fullName: MLEM.Startup.MlemGame.UiSystem
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  parent: MLEM.Ui
  href: MLEM.Ui.UiSystem.html
  name: UiSystem
  nameWithType: UiSystem
  fullName: MLEM.Ui.UiSystem
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  href: MLEM.html
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
- uid: MLEM.Startup.MlemGame.LoadContent
  commentId: M:MLEM.Startup.MlemGame.LoadContent
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_LoadContent
  name: LoadContent()
  nameWithType: MlemGame.LoadContent()
  fullName: MLEM.Startup.MlemGame.LoadContent()
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_LoadContent
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.LoadContent
    name: LoadContent
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_LoadContent
  - name: (
  - name: )
- uid: MLEM.Startup.MlemGame.GenericCallback
  commentId: T:MLEM.Startup.MlemGame.GenericCallback
  parent: MLEM.Startup
  href: MLEM.Startup.MlemGame.html
  name: MlemGame.GenericCallback
  nameWithType: MlemGame.GenericCallback
  fullName: MLEM.Startup.MlemGame.GenericCallback
  spec.csharp:
  - uid: MLEM.Startup.MlemGame
    name: MlemGame
    href: MLEM.Startup.MlemGame.html
  - name: .
  - uid: MLEM.Startup.MlemGame.GenericCallback
    name: GenericCallback
    href: MLEM.Startup.MlemGame.GenericCallback.html
  spec.vb:
  - uid: MLEM.Startup.MlemGame
    name: MlemGame
    href: MLEM.Startup.MlemGame.html
  - name: .
  - uid: MLEM.Startup.MlemGame.GenericCallback
    name: GenericCallback
    href: MLEM.Startup.MlemGame.GenericCallback.html
- uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Update_Microsoft_Xna_Framework_GameTime_
  name: Update(GameTime)
  nameWithType: MlemGame.Update(GameTime)
  fullName: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Update_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Update_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoUpdate_Microsoft_Xna_Framework_GameTime_
  name: DoUpdate(GameTime)
  nameWithType: MlemGame.DoUpdate(GameTime)
  fullName: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoUpdate_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoUpdate(Microsoft.Xna.Framework.GameTime)
    name: DoUpdate
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoUpdate_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.TimeCallback
  commentId: T:MLEM.Startup.MlemGame.TimeCallback
  parent: MLEM.Startup
  href: MLEM.Startup.MlemGame.html
  name: MlemGame.TimeCallback
  nameWithType: MlemGame.TimeCallback
  fullName: MLEM.Startup.MlemGame.TimeCallback
  spec.csharp:
  - uid: MLEM.Startup.MlemGame
    name: MlemGame
    href: MLEM.Startup.MlemGame.html
  - name: .
  - uid: MLEM.Startup.MlemGame.TimeCallback
    name: TimeCallback
    href: MLEM.Startup.MlemGame.TimeCallback.html
  spec.vb:
  - uid: MLEM.Startup.MlemGame
    name: MlemGame
    href: MLEM.Startup.MlemGame.html
  - name: .
  - uid: MLEM.Startup.MlemGame.TimeCallback
    name: TimeCallback
    href: MLEM.Startup.MlemGame.TimeCallback.html
- uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Draw_Microsoft_Xna_Framework_GameTime_
  name: Draw(GameTime)
  nameWithType: MlemGame.Draw(GameTime)
  fullName: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Draw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Draw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  isExternal: true
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoDraw_Microsoft_Xna_Framework_GameTime_
  name: DoDraw(GameTime)
  nameWithType: MlemGame.DoDraw(GameTime)
  fullName: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoDraw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Startup.MlemGame.DoDraw(Microsoft.Xna.Framework.GameTime)
    name: DoDraw
    href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoDraw_Microsoft_Xna_Framework_GameTime_
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.#ctor*
  commentId: Overload:MLEM.Startup.MlemGame.#ctor
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame__ctor_System_Int32_System_Int32_
  name: MlemGame
  nameWithType: MlemGame.MlemGame
  fullName: MLEM.Startup.MlemGame.MlemGame
  nameWithType.vb: MlemGame.New
  fullName.vb: MLEM.Startup.MlemGame.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Microsoft.Xna.Framework.Game.LoadContent
  commentId: M:Microsoft.Xna.Framework.Game.LoadContent
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: LoadContent()
  nameWithType: Game.LoadContent()
  fullName: Microsoft.Xna.Framework.Game.LoadContent()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.LoadContent
    name: LoadContent
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.LoadContent
    name: LoadContent
    isExternal: true
  - name: (
  - name: )
- uid: MLEM.Startup.MlemGame.LoadContent*
  commentId: Overload:MLEM.Startup.MlemGame.LoadContent
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_LoadContent
  name: LoadContent
  nameWithType: MlemGame.LoadContent
  fullName: MLEM.Startup.MlemGame.LoadContent
- uid: Microsoft.Xna.Framework.GameComponent
  commentId: T:Microsoft.Xna.Framework.GameComponent
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameComponent
  nameWithType: GameComponent
  fullName: Microsoft.Xna.Framework.GameComponent
- uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Update(GameTime)
  nameWithType: Game.Update(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
    name: Update
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.Update*
  commentId: Overload:MLEM.Startup.MlemGame.Update
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Update_Microsoft_Xna_Framework_GameTime_
  name: Update
  nameWithType: MlemGame.Update
  fullName: MLEM.Startup.MlemGame.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework.DrawableGameComponent
  commentId: T:Microsoft.Xna.Framework.DrawableGameComponent
  isExternal: true
  name: DrawableGameComponent
  nameWithType: DrawableGameComponent
  fullName: Microsoft.Xna.Framework.DrawableGameComponent
- uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  commentId: M:Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  parent: Microsoft.Xna.Framework.Game
  isExternal: true
  name: Draw(GameTime)
  nameWithType: Game.Draw(GameTime)
  fullName: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
    name: Draw
    isExternal: true
  - name: (
  - uid: Microsoft.Xna.Framework.GameTime
    name: GameTime
    isExternal: true
  - name: )
- uid: MLEM.Startup.MlemGame.Draw*
  commentId: Overload:MLEM.Startup.MlemGame.Draw
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_Draw_Microsoft_Xna_Framework_GameTime_
  name: Draw
  nameWithType: MlemGame.Draw
  fullName: MLEM.Startup.MlemGame.Draw
- uid: MLEM.Startup.MlemGame.DoDraw*
  commentId: Overload:MLEM.Startup.MlemGame.DoDraw
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoDraw_Microsoft_Xna_Framework_GameTime_
  name: DoDraw
  nameWithType: MlemGame.DoDraw
  fullName: MLEM.Startup.MlemGame.DoDraw
- uid: MLEM.Startup.MlemGame.DoUpdate*
  commentId: Overload:MLEM.Startup.MlemGame.DoUpdate
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_DoUpdate_Microsoft_Xna_Framework_GameTime_
  name: DoUpdate
  nameWithType: MlemGame.DoUpdate
  fullName: MLEM.Startup.MlemGame.DoUpdate
- uid: MLEM.Ui.Style.UiStyle
  commentId: T:MLEM.Ui.Style.UiStyle
  parent: MLEM.Ui.Style
  href: MLEM.Ui.Style.UiStyle.html
  name: UiStyle
  nameWithType: UiStyle
  fullName: MLEM.Ui.Style.UiStyle
- uid: MLEM.Startup.MlemGame.InitializeDefaultUiStyle*
  commentId: Overload:MLEM.Startup.MlemGame.InitializeDefaultUiStyle
  href: MLEM.Startup.MlemGame.html#MLEM_Startup_MlemGame_InitializeDefaultUiStyle_Microsoft_Xna_Framework_Graphics_SpriteBatch_
  name: InitializeDefaultUiStyle
  nameWithType: MlemGame.InitializeDefaultUiStyle
  fullName: MLEM.Startup.MlemGame.InitializeDefaultUiStyle
- uid: MLEM.Ui.Style
  commentId: N:MLEM.Ui.Style
  href: MLEM.html
  name: MLEM.Ui.Style
  nameWithType: MLEM.Ui.Style
  fullName: MLEM.Ui.Style
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Style
    name: Style
    href: MLEM.Ui.Style.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Style
    name: Style
    href: MLEM.Ui.Style.html
- uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  commentId: M:Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
  parent: Microsoft.Xna.Framework.Content.ContentManager
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: Load<T>(string)
  nameWithType: ContentManager.Load<T>(string)
  fullName: Microsoft.Xna.Framework.Content.ContentManager.Load<T>(string)
  nameWithType.vb: ContentManager.Load(Of T)(String)
  fullName.vb: Microsoft.Xna.Framework.Content.ContentManager.Load(Of T)(String)
  name.vb: Load(Of T)(String)
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Content.ContentManager.Load``1(System.String)
    name: Load
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Xna.Framework.Content.ContentManager
  commentId: T:Microsoft.Xna.Framework.Content.ContentManager
  parent: Microsoft.Xna.Framework.Content
  isExternal: true
  name: ContentManager
  nameWithType: ContentManager
  fullName: Microsoft.Xna.Framework.Content.ContentManager
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Microsoft.Xna.Framework.Content
  commentId: N:Microsoft.Xna.Framework.Content
  isExternal: true
  name: Microsoft.Xna.Framework.Content
  nameWithType: Microsoft.Xna.Framework.Content
  fullName: Microsoft.Xna.Framework.Content
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Content
    name: Content
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Content
    name: Content
    isExternal: true
