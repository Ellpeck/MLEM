### YamlMime:ManagedReference
items:
- uid: MLEM.Misc.EnumHelper
  commentId: T:MLEM.Misc.EnumHelper
  id: EnumHelper
  parent: MLEM.Misc
  children:
  - MLEM.Misc.EnumHelper.Buttons
  - MLEM.Misc.EnumHelper.GetFlags``1(``0,System.Boolean)
  - MLEM.Misc.EnumHelper.GetUniqueFlags``1(``0)
  - MLEM.Misc.EnumHelper.GetValues``1
  - MLEM.Misc.EnumHelper.Keys
  langs:
  - csharp
  - vb
  name: EnumHelper
  nameWithType: EnumHelper
  fullName: MLEM.Misc.EnumHelper
  type: Class
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: EnumHelper
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: A helper class that allows easier usage of <xref href="System.Enum" data-throw-if-not-resolved="false"></xref> values.
  example: []
  syntax:
    content: >-
      [Obsolete("EnumHelper has been moved into the DynamicEnums library: https://www.nuget.org/packages/DynamicEnums")]

      public static class EnumHelper
    content.vb: >-
      <Obsolete("EnumHelper has been moved into the DynamicEnums library: https://www.nuget.org/packages/DynamicEnums")>

      Public Module EnumHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: 'EnumHelper has been moved into the DynamicEnums library: https://www.nuget.org/packages/DynamicEnums'
- uid: MLEM.Misc.EnumHelper.Buttons
  commentId: F:MLEM.Misc.EnumHelper.Buttons
  id: Buttons
  parent: MLEM.Misc.EnumHelper
  langs:
  - csharp
  - vb
  name: Buttons
  nameWithType: EnumHelper.Buttons
  fullName: MLEM.Misc.EnumHelper.Buttons
  type: Field
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Buttons
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 15
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: All values of the <xref href="MLEM.Misc.EnumHelper.Buttons" data-throw-if-not-resolved="false"></xref> enum.
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been moved to InputHandler.AllButtons")]

      public static readonly Buttons[] Buttons
    return:
      type: Microsoft.Xna.Framework.Input.Buttons[]
    content.vb: >-
      <Obsolete("This field has been moved to InputHandler.AllButtons")>

      Public Shared ReadOnly Buttons As Buttons()
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been moved to InputHandler.AllButtons
- uid: MLEM.Misc.EnumHelper.Keys
  commentId: F:MLEM.Misc.EnumHelper.Keys
  id: Keys
  parent: MLEM.Misc.EnumHelper
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: EnumHelper.Keys
  fullName: MLEM.Misc.EnumHelper.Keys
  type: Field
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Keys
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 20
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: All values of the <xref href="MLEM.Misc.EnumHelper.Keys" data-throw-if-not-resolved="false"></xref> enum.
  example: []
  syntax:
    content: >-
      [Obsolete("This field has been moved to InputHandler.AllKeys")]

      public static readonly Keys[] Keys
    return:
      type: Microsoft.Xna.Framework.Input.Keys[]
    content.vb: >-
      <Obsolete("This field has been moved to InputHandler.AllKeys")>

      Public Shared ReadOnly Keys As Keys()
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This field has been moved to InputHandler.AllKeys
- uid: MLEM.Misc.EnumHelper.GetValues``1
  commentId: M:MLEM.Misc.EnumHelper.GetValues``1
  id: GetValues``1
  parent: MLEM.Misc.EnumHelper
  langs:
  - csharp
  - vb
  name: GetValues<T>()
  nameWithType: EnumHelper.GetValues<T>()
  fullName: MLEM.Misc.EnumHelper.GetValues<T>()
  type: Method
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetValues
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 28
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns an array containing all of the values of the given enum type.

    Note that this method is a version-independent equivalent of .NET 5's <code>Enum.GetValues&lt;TEnum&gt;</code>.
  example: []
  syntax:
    content: 'public static T[] GetValues<T>() where T : struct, Enum'
    typeParameters:
    - id: T
      description: The type whose enum to get
    return:
      type: '{T}[]'
      description: An enumerable of the values of the enum, in declaration order.
    content.vb: Public Shared Function GetValues(Of T As {Structure, [Enum]})() As T()
  overload: MLEM.Misc.EnumHelper.GetValues*
  nameWithType.vb: EnumHelper.GetValues(Of T)()
  fullName.vb: MLEM.Misc.EnumHelper.GetValues(Of T)()
  name.vb: GetValues(Of T)()
- uid: MLEM.Misc.EnumHelper.GetFlags``1(``0,System.Boolean)
  commentId: M:MLEM.Misc.EnumHelper.GetFlags``1(``0,System.Boolean)
  id: GetFlags``1(``0,System.Boolean)
  parent: MLEM.Misc.EnumHelper
  langs:
  - csharp
  - vb
  name: GetFlags<T>(T, bool)
  nameWithType: EnumHelper.GetFlags<T>(T, bool)
  fullName: MLEM.Misc.EnumHelper.GetFlags<T>(T, bool)
  type: Method
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetFlags
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns all of the defined values from the given enum type <code class="typeparamref">T</code> which are contained in <code class="paramref">combinedFlag</code>.

    Note that, if combined flags are defined in <code class="typeparamref">T</code>, and <code class="paramref">combinedFlag</code> contains them, they will also be returned.
  example: []
  syntax:
    content: 'public static IEnumerable<T> GetFlags<T>(T combinedFlag, bool includeZero = true) where T : struct, Enum'
    parameters:
    - id: combinedFlag
      type: '{T}'
      description: The combined flags whose individual flags to return.
    - id: includeZero
      type: System.Boolean
      description: Whether the enum value 0 should also be returned, if <code class="typeparamref">T</code> contains one.
    typeParameters:
    - id: T
      description: The type of enum.
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: All of the flags that make up <code class="paramref">combinedFlag</code>.
    content.vb: Public Shared Function GetFlags(Of T As {Structure, [Enum]})(combinedFlag As T, includeZero As Boolean = True) As IEnumerable(Of T)
  overload: MLEM.Misc.EnumHelper.GetFlags*
  nameWithType.vb: EnumHelper.GetFlags(Of T)(T, Boolean)
  fullName.vb: MLEM.Misc.EnumHelper.GetFlags(Of T)(T, Boolean)
  name.vb: GetFlags(Of T)(T, Boolean)
- uid: MLEM.Misc.EnumHelper.GetUniqueFlags``1(``0)
  commentId: M:MLEM.Misc.EnumHelper.GetUniqueFlags``1(``0)
  id: GetUniqueFlags``1(``0)
  parent: MLEM.Misc.EnumHelper
  langs:
  - csharp
  - vb
  name: GetUniqueFlags<T>(T)
  nameWithType: EnumHelper.GetUniqueFlags<T>(T)
  fullName: MLEM.Misc.EnumHelper.GetUniqueFlags<T>(T)
  type: Method
  source:
    remote:
      path: MLEM/Misc/EnumHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetUniqueFlags
    path: ../MLEM/Misc/EnumHelper.cs
    startLine: 58
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns all of the defined unique flags from the given enum type <code class="typeparamref">T</code> which are contained in <code class="paramref">combinedFlag</code>.

    Any combined flags (flags that aren't powers of two) which are defined in <code class="typeparamref">T</code> will not be returned.
  example: []
  syntax:
    content: 'public static IEnumerable<T> GetUniqueFlags<T>(T combinedFlag) where T : struct, Enum'
    parameters:
    - id: combinedFlag
      type: '{T}'
      description: The combined flags whose individual flags to return.
    typeParameters:
    - id: T
      description: The type of enum.
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: All of the unique flags that make up <code class="paramref">combinedFlag</code>.
    content.vb: Public Shared Function GetUniqueFlags(Of T As {Structure, [Enum]})(combinedFlag As T) As IEnumerable(Of T)
  overload: MLEM.Misc.EnumHelper.GetUniqueFlags*
  nameWithType.vb: EnumHelper.GetUniqueFlags(Of T)(T)
  fullName.vb: MLEM.Misc.EnumHelper.GetUniqueFlags(Of T)(T)
  name.vb: GetUniqueFlags(Of T)(T)
references:
- uid: System.Enum
  commentId: T:System.Enum
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.enum
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc.EnumHelper.Buttons
  commentId: F:MLEM.Misc.EnumHelper.Buttons
  href: MLEM.Misc.EnumHelper.html#MLEM_Misc_EnumHelper_Buttons
  name: Buttons
  nameWithType: EnumHelper.Buttons
  fullName: MLEM.Misc.EnumHelper.Buttons
- uid: Microsoft.Xna.Framework.Input.Buttons[]
  isExternal: true
  name: Buttons[]
  nameWithType: Buttons[]
  fullName: Microsoft.Xna.Framework.Input.Buttons[]
  nameWithType.vb: Buttons()
  fullName.vb: Microsoft.Xna.Framework.Input.Buttons()
  name.vb: Buttons()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Input.Buttons
    name: Buttons
    isExternal: true
  - name: (
  - name: )
- uid: MLEM.Misc.EnumHelper.Keys
  commentId: F:MLEM.Misc.EnumHelper.Keys
  href: MLEM.Misc.EnumHelper.html#MLEM_Misc_EnumHelper_Keys
  name: Keys
  nameWithType: EnumHelper.Keys
  fullName: MLEM.Misc.EnumHelper.Keys
- uid: Microsoft.Xna.Framework.Input.Keys[]
  isExternal: true
  name: Keys[]
  nameWithType: Keys[]
  fullName: Microsoft.Xna.Framework.Input.Keys[]
  nameWithType.vb: Keys()
  fullName.vb: Microsoft.Xna.Framework.Input.Keys()
  name.vb: Keys()
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Input.Keys
    name: Keys
    isExternal: true
  - name: (
  - name: )
- uid: MLEM.Misc.EnumHelper.GetValues*
  commentId: Overload:MLEM.Misc.EnumHelper.GetValues
  href: MLEM.Misc.EnumHelper.html#MLEM_Misc_EnumHelper_GetValues__1
  name: GetValues
  nameWithType: EnumHelper.GetValues
  fullName: MLEM.Misc.EnumHelper.GetValues
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: MLEM.Misc.EnumHelper.GetFlags*
  commentId: Overload:MLEM.Misc.EnumHelper.GetFlags
  href: MLEM.Misc.EnumHelper.html#MLEM_Misc_EnumHelper_GetFlags__1___0_System_Boolean_
  name: GetFlags
  nameWithType: EnumHelper.GetFlags
  fullName: MLEM.Misc.EnumHelper.GetFlags
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: MLEM.Misc.EnumHelper.GetUniqueFlags*
  commentId: Overload:MLEM.Misc.EnumHelper.GetUniqueFlags
  href: MLEM.Misc.EnumHelper.html#MLEM_Misc_EnumHelper_GetUniqueFlags__1___0_
  name: GetUniqueFlags
  nameWithType: EnumHelper.GetUniqueFlags
  fullName: MLEM.Misc.EnumHelper.GetUniqueFlags
