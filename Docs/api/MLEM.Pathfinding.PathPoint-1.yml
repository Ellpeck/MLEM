### YamlMime:ManagedReference
items:
- uid: MLEM.Pathfinding.PathPoint`1
  commentId: T:MLEM.Pathfinding.PathPoint`1
  id: PathPoint`1
  parent: MLEM.Pathfinding
  children:
  - MLEM.Pathfinding.PathPoint`1.#ctor(`0,System.Single,MLEM.Pathfinding.PathPoint{`0},System.Single,System.Single)
  - MLEM.Pathfinding.PathPoint`1.Equals(MLEM.Pathfinding.PathPoint{`0})
  - MLEM.Pathfinding.PathPoint`1.Equals(System.Object)
  - MLEM.Pathfinding.PathPoint`1.F
  - MLEM.Pathfinding.PathPoint`1.G
  - MLEM.Pathfinding.PathPoint`1.GetHashCode
  - MLEM.Pathfinding.PathPoint`1.Parent
  - MLEM.Pathfinding.PathPoint`1.Pos
  langs:
  - csharp
  - vb
  name: PathPoint<T>
  nameWithType: PathPoint<T>
  fullName: MLEM.Pathfinding.PathPoint<T>
  type: Class
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: PathPoint
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 200
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: A point in a <xref href="MLEM.Pathfinding.AStar%601" data-throw-if-not-resolved="false"></xref> path
  example: []
  syntax:
    content: 'public class PathPoint<T> : IEquatable<PathPoint<T>>'
    typeParameters:
    - id: T
      description: The type of point used for this path
    content.vb: Public Class PathPoint(Of T) Implements IEquatable(Of PathPoint(Of T))
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{MLEM.Pathfinding.PathPoint`1}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: PathPoint(Of T)
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T)
  name.vb: PathPoint(Of T)
- uid: MLEM.Pathfinding.PathPoint`1.Parent
  commentId: F:MLEM.Pathfinding.PathPoint`1.Parent
  id: Parent
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: PathPoint<T>.Parent
  fullName: MLEM.Pathfinding.PathPoint<T>.Parent
  type: Field
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Parent
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 205
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: The path point that this point originated from
  example: []
  syntax:
    content: public readonly PathPoint<T> Parent
    return:
      type: MLEM.Pathfinding.PathPoint`1
    content.vb: Public ReadOnly Parent As PathPoint(Of T)
  nameWithType.vb: PathPoint(Of T).Parent
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Parent
- uid: MLEM.Pathfinding.PathPoint`1.Pos
  commentId: F:MLEM.Pathfinding.PathPoint`1.Pos
  id: Pos
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: PathPoint<T>.Pos
  fullName: MLEM.Pathfinding.PathPoint<T>.Pos
  type: Field
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Pos
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 209
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: The position of this path point
  example: []
  syntax:
    content: public readonly T Pos
    return:
      type: '{T}'
    content.vb: Public ReadOnly Pos As T
  nameWithType.vb: PathPoint(Of T).Pos
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Pos
- uid: MLEM.Pathfinding.PathPoint`1.F
  commentId: F:MLEM.Pathfinding.PathPoint`1.F
  id: F
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: F
  nameWithType: PathPoint<T>.F
  fullName: MLEM.Pathfinding.PathPoint<T>.F
  type: Field
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: F
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 213
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: The F cost of this path point, which is the estimated total distance from the start to the goal.
  example: []
  syntax:
    content: public readonly float F
    return:
      type: System.Single
    content.vb: Public ReadOnly F As Single
  nameWithType.vb: PathPoint(Of T).F
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).F
- uid: MLEM.Pathfinding.PathPoint`1.G
  commentId: F:MLEM.Pathfinding.PathPoint`1.G
  id: G
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: G
  nameWithType: PathPoint<T>.G
  fullName: MLEM.Pathfinding.PathPoint<T>.G
  type: Field
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: G
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 217
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: The G cost of this path point, which is the actual distance from the start to the current <xref href="MLEM.Pathfinding.PathPoint%601.Pos" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public readonly float G
    return:
      type: System.Single
    content.vb: Public ReadOnly G As Single
  nameWithType.vb: PathPoint(Of T).G
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).G
- uid: MLEM.Pathfinding.PathPoint`1.#ctor(`0,System.Single,MLEM.Pathfinding.PathPoint{`0},System.Single,System.Single)
  commentId: M:MLEM.Pathfinding.PathPoint`1.#ctor(`0,System.Single,MLEM.Pathfinding.PathPoint{`0},System.Single,System.Single)
  id: '#ctor(`0,System.Single,MLEM.Pathfinding.PathPoint{`0},System.Single,System.Single)'
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: PathPoint(T, float, PathPoint<T>, float, float)
  nameWithType: PathPoint<T>.PathPoint(T, float, PathPoint<T>, float, float)
  fullName: MLEM.Pathfinding.PathPoint<T>.PathPoint(T, float, MLEM.Pathfinding.PathPoint<T>, float, float)
  type: Constructor
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 227
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: Creates a new path point with the supplied settings.
  example: []
  syntax:
    content: public PathPoint(T pos, float heuristicDistance, PathPoint<T> parent, float terrainCost, float defaultCost)
    parameters:
    - id: pos
      type: '{T}'
      description: The point's position.
    - id: heuristicDistance
      type: System.Single
      description: The point's estimated distance from the <code class="paramref">pos</code> to the goal, based on the <code class="paramref">defaultCost</code>.
    - id: parent
      type: MLEM.Pathfinding.PathPoint`1
      description: The point's parent.
    - id: terrainCost
      type: System.Single
      description: The terrain cost to move from the <code class="paramref">parent</code> to this point, based on <xref href="MLEM.Pathfinding.AStar%601.GetCost" data-throw-if-not-resolved="false"></xref>.
    - id: defaultCost
      type: System.Single
      description: The default cost for a path point.
    content.vb: Public Sub New(pos As T, heuristicDistance As Single, parent As PathPoint(Of T), terrainCost As Single, defaultCost As Single)
  overload: MLEM.Pathfinding.PathPoint`1.#ctor*
  nameWithType.vb: PathPoint(Of T).New(T, Single, PathPoint(Of T), Single, Single)
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).New(T, Single, MLEM.Pathfinding.PathPoint(Of T), Single, Single)
  name.vb: New(T, Single, PathPoint(Of T), Single, Single)
- uid: MLEM.Pathfinding.PathPoint`1.Equals(MLEM.Pathfinding.PathPoint{`0})
  commentId: M:MLEM.Pathfinding.PathPoint`1.Equals(MLEM.Pathfinding.PathPoint{`0})
  id: Equals(MLEM.Pathfinding.PathPoint{`0})
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: Equals(PathPoint<T>)
  nameWithType: PathPoint<T>.Equals(PathPoint<T>)
  fullName: MLEM.Pathfinding.PathPoint<T>.Equals(MLEM.Pathfinding.PathPoint<T>)
  type: Method
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 238
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(PathPoint<T> other)
    parameters:
    - id: other
      type: MLEM.Pathfinding.PathPoint`1
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: true if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, false.
    content.vb: Public Function Equals(other As PathPoint(Of T)) As Boolean
  overload: MLEM.Pathfinding.PathPoint`1.Equals*
  implements:
  - System.IEquatable{MLEM.Pathfinding.PathPoint`1}.Equals(MLEM.Pathfinding.PathPoint{{T}})
  nameWithType.vb: PathPoint(Of T).Equals(PathPoint(Of T))
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Equals(MLEM.Pathfinding.PathPoint(Of T))
  name.vb: Equals(PathPoint(Of T))
- uid: MLEM.Pathfinding.PathPoint`1.Equals(System.Object)
  commentId: M:MLEM.Pathfinding.PathPoint`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: PathPoint<T>.Equals(object)
  fullName: MLEM.Pathfinding.PathPoint<T>.Equals(object)
  type: Method
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 245
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: MLEM.Pathfinding.PathPoint`1.Equals*
  nameWithType.vb: PathPoint(Of T).Equals(Object)
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: MLEM.Pathfinding.PathPoint`1.GetHashCode
  commentId: M:MLEM.Pathfinding.PathPoint`1.GetHashCode
  id: GetHashCode
  parent: MLEM.Pathfinding.PathPoint`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PathPoint<T>.GetHashCode()
  fullName: MLEM.Pathfinding.PathPoint<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: MLEM/Pathfinding/AStar.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetHashCode
    path: ../MLEM/Pathfinding/AStar.cs
    startLine: 251
  assemblies:
  - MLEM
  namespace: MLEM.Pathfinding
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: MLEM.Pathfinding.PathPoint`1.GetHashCode*
  nameWithType.vb: PathPoint(Of T).GetHashCode()
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).GetHashCode()
references:
- uid: MLEM.Pathfinding.AStar`1
  commentId: T:MLEM.Pathfinding.AStar`1
  href: MLEM.Pathfinding.AStar-1.html
  name: AStar<T>
  nameWithType: AStar<T>
  fullName: MLEM.Pathfinding.AStar<T>
  nameWithType.vb: AStar(Of T)
  fullName.vb: MLEM.Pathfinding.AStar(Of T)
  name.vb: AStar(Of T)
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    href: MLEM.Pathfinding.AStar-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    href: MLEM.Pathfinding.AStar-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Pathfinding
  commentId: N:MLEM.Pathfinding
  href: MLEM.html
  name: MLEM.Pathfinding
  nameWithType: MLEM.Pathfinding
  fullName: MLEM.Pathfinding
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Pathfinding
    name: Pathfinding
    href: MLEM.Pathfinding.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Pathfinding
    name: Pathfinding
    href: MLEM.Pathfinding.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IEquatable{MLEM.Pathfinding.PathPoint`1}
  commentId: T:System.IEquatable{MLEM.Pathfinding.PathPoint`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<PathPoint<T>>
  nameWithType: IEquatable<PathPoint<T>>
  fullName: System.IEquatable<MLEM.Pathfinding.PathPoint<T>>
  nameWithType.vb: IEquatable(Of PathPoint(Of T))
  fullName.vb: System.IEquatable(Of MLEM.Pathfinding.PathPoint(Of T))
  name.vb: IEquatable(Of PathPoint(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Pathfinding.PathPoint`1
  commentId: T:MLEM.Pathfinding.PathPoint`1
  parent: MLEM.Pathfinding
  href: MLEM.Pathfinding.PathPoint-1.html
  name: PathPoint<T>
  nameWithType: PathPoint<T>
  fullName: MLEM.Pathfinding.PathPoint<T>
  nameWithType.vb: PathPoint(Of T)
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T)
  name.vb: PathPoint(Of T)
  spec.csharp:
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Pathfinding.PathPoint`1.Pos
  commentId: F:MLEM.Pathfinding.PathPoint`1.Pos
  href: MLEM.Pathfinding.PathPoint-1.html#MLEM_Pathfinding_PathPoint_1_Pos
  name: Pos
  nameWithType: PathPoint<T>.Pos
  fullName: MLEM.Pathfinding.PathPoint<T>.Pos
  nameWithType.vb: PathPoint(Of T).Pos
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Pos
- uid: MLEM.Pathfinding.AStar`1.GetCost
  commentId: T:MLEM.Pathfinding.AStar`1.GetCost
  parent: MLEM.Pathfinding
  href: MLEM.Pathfinding.AStar-1.html
  name: AStar<T>.GetCost
  nameWithType: AStar<T>.GetCost
  fullName: MLEM.Pathfinding.AStar<T>.GetCost
  nameWithType.vb: AStar(Of T).GetCost
  fullName.vb: MLEM.Pathfinding.AStar(Of T).GetCost
  name.vb: AStar(Of T).GetCost
  spec.csharp:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    href: MLEM.Pathfinding.AStar-1.html
  - name: <
  - name: T
  - name: '>'
  - name: .
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    href: MLEM.Pathfinding.AStar-1.GetCost.html
  spec.vb:
  - uid: MLEM.Pathfinding.AStar`1
    name: AStar
    href: MLEM.Pathfinding.AStar-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: .
  - uid: MLEM.Pathfinding.AStar`1.GetCost
    name: GetCost
    href: MLEM.Pathfinding.AStar-1.GetCost.html
- uid: MLEM.Pathfinding.PathPoint`1.#ctor*
  commentId: Overload:MLEM.Pathfinding.PathPoint`1.#ctor
  href: MLEM.Pathfinding.PathPoint-1.html#MLEM_Pathfinding_PathPoint_1__ctor__0_System_Single_MLEM_Pathfinding_PathPoint__0__System_Single_System_Single_
  name: PathPoint
  nameWithType: PathPoint<T>.PathPoint
  fullName: MLEM.Pathfinding.PathPoint<T>.PathPoint
  nameWithType.vb: PathPoint(Of T).New
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).New
  name.vb: New
- uid: MLEM.Pathfinding.PathPoint`1.Equals*
  commentId: Overload:MLEM.Pathfinding.PathPoint`1.Equals
  href: MLEM.Pathfinding.PathPoint-1.html#MLEM_Pathfinding_PathPoint_1_Equals_MLEM_Pathfinding_PathPoint__0__
  name: Equals
  nameWithType: PathPoint<T>.Equals
  fullName: MLEM.Pathfinding.PathPoint<T>.Equals
  nameWithType.vb: PathPoint(Of T).Equals
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).Equals
- uid: System.IEquatable{MLEM.Pathfinding.PathPoint`1}.Equals(MLEM.Pathfinding.PathPoint{{T}})
  commentId: M:System.IEquatable{MLEM.Pathfinding.PathPoint`1}.Equals(MLEM.Pathfinding.PathPoint{`0})
  parent: System.IEquatable{MLEM.Pathfinding.PathPoint`1}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(PathPoint<T>)
  nameWithType: IEquatable<PathPoint<T>>.Equals(PathPoint<T>)
  fullName: System.IEquatable<MLEM.Pathfinding.PathPoint<T>>.Equals(MLEM.Pathfinding.PathPoint<T>)
  nameWithType.vb: IEquatable(Of PathPoint(Of T)).Equals(PathPoint(Of T))
  fullName.vb: System.IEquatable(Of MLEM.Pathfinding.PathPoint(Of T)).Equals(MLEM.Pathfinding.PathPoint(Of T))
  name.vb: Equals(PathPoint(Of T))
  spec.csharp:
  - uid: System.IEquatable{MLEM.Pathfinding.PathPoint`1}.Equals(MLEM.Pathfinding.PathPoint{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{MLEM.Pathfinding.PathPoint`1}.Equals(MLEM.Pathfinding.PathPoint{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Pathfinding.PathPoint`1
    name: PathPoint
    href: MLEM.Pathfinding.PathPoint-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: MLEM.Pathfinding.PathPoint`1.GetHashCode*
  commentId: Overload:MLEM.Pathfinding.PathPoint`1.GetHashCode
  href: MLEM.Pathfinding.PathPoint-1.html#MLEM_Pathfinding_PathPoint_1_GetHashCode
  name: GetHashCode
  nameWithType: PathPoint<T>.GetHashCode
  fullName: MLEM.Pathfinding.PathPoint<T>.GetHashCode
  nameWithType.vb: PathPoint(Of T).GetHashCode
  fullName.vb: MLEM.Pathfinding.PathPoint(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
