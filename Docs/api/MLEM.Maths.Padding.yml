### YamlMime:ManagedReference
items:
- uid: MLEM.Maths.Padding
  commentId: T:MLEM.Maths.Padding
  id: Padding
  parent: MLEM.Maths
  children:
  - MLEM.Maths.Padding.#ctor(MLEM.Maths.Padding,System.Single)
  - MLEM.Maths.Padding.#ctor(System.Single)
  - MLEM.Maths.Padding.#ctor(System.Single,System.Single)
  - MLEM.Maths.Padding.#ctor(System.Single,System.Single,System.Single,System.Single)
  - MLEM.Maths.Padding.Bottom
  - MLEM.Maths.Padding.Empty
  - MLEM.Maths.Padding.Equals(MLEM.Maths.Padding)
  - MLEM.Maths.Padding.Equals(System.Object)
  - MLEM.Maths.Padding.GetHashCode
  - MLEM.Maths.Padding.Height
  - MLEM.Maths.Padding.Left
  - MLEM.Maths.Padding.Right
  - MLEM.Maths.Padding.Top
  - MLEM.Maths.Padding.Width
  - MLEM.Maths.Padding.op_Addition(MLEM.Maths.Padding,MLEM.Maths.Padding)
  - MLEM.Maths.Padding.op_Equality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  - MLEM.Maths.Padding.op_Implicit(Microsoft.Xna.Framework.Vector2)~MLEM.Maths.Padding
  - MLEM.Maths.Padding.op_Inequality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  - MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,System.Single)
  - MLEM.Maths.Padding.op_Subtraction(MLEM.Maths.Padding,MLEM.Maths.Padding)
  langs:
  - csharp
  - vb
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Maths.Padding
  type: Struct
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Padding
    path: ../MLEM/Maths/Padding.cs
    startLine: 9
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Represents a generic padding.

    A padding is an object of data that stores an offset from each side of a rectangle or square.
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct Padding : IEquatable<Padding>
    content.vb: >-
      <DataContract>

      Public Structure Padding Implements IEquatable(Of Padding)
  implements:
  - System.IEquatable{MLEM.Maths.Padding}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.Padding.Empty
  commentId: P:MLEM.Maths.Padding.Empty
  id: Empty
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: Padding.Empty
  fullName: MLEM.Maths.Padding.Empty
  type: Property
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Empty
    path: ../MLEM/Maths/Padding.cs
    startLine: 15
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The empty padding, with all borders set to 0
  example: []
  syntax:
    content: public static Padding Empty { get; }
    parameters: []
    return:
      type: MLEM.Maths.Padding
    content.vb: Public Shared ReadOnly Property Empty As Padding
  overload: MLEM.Maths.Padding.Empty*
- uid: MLEM.Maths.Padding.Left
  commentId: F:MLEM.Maths.Padding.Left
  id: Left
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Padding.Left
  fullName: MLEM.Maths.Padding.Left
  type: Field
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Left
    path: ../MLEM/Maths/Padding.cs
    startLine: 21
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The amount of padding on the left side
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Left
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Left As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.Padding.Right
  commentId: F:MLEM.Maths.Padding.Right
  id: Right
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Padding.Right
  fullName: MLEM.Maths.Padding.Right
  type: Field
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Right
    path: ../MLEM/Maths/Padding.cs
    startLine: 26
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The amount of padding on the right side
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Right
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Right As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.Padding.Top
  commentId: F:MLEM.Maths.Padding.Top
  id: Top
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: Padding.Top
  fullName: MLEM.Maths.Padding.Top
  type: Field
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Top
    path: ../MLEM/Maths/Padding.cs
    startLine: 31
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The amount of padding on the top side
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Top
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Top As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.Padding.Bottom
  commentId: F:MLEM.Maths.Padding.Bottom
  id: Bottom
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: Padding.Bottom
  fullName: MLEM.Maths.Padding.Bottom
  type: Field
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Bottom
    path: ../MLEM/Maths/Padding.cs
    startLine: 36
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The amount of padding on the bottom side
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Bottom
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Bottom As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.Padding.Width
  commentId: P:MLEM.Maths.Padding.Width
  id: Width
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: Padding.Width
  fullName: MLEM.Maths.Padding.Width
  type: Property
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Width
    path: ../MLEM/Maths/Padding.cs
    startLine: 40
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The total width of this padding, a sum of the left and right padding.
  example: []
  syntax:
    content: public float Width { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Width As Single
  overload: MLEM.Maths.Padding.Width*
- uid: MLEM.Maths.Padding.Height
  commentId: P:MLEM.Maths.Padding.Height
  id: Height
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Padding.Height
  fullName: MLEM.Maths.Padding.Height
  type: Property
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Height
    path: ../MLEM/Maths/Padding.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The total height of this padding, a sum of the top and bottom padding.
  example: []
  syntax:
    content: public float Height { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Height As Single
  overload: MLEM.Maths.Padding.Height*
- uid: MLEM.Maths.Padding.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:MLEM.Maths.Padding.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Padding(float, float, float, float)
  nameWithType: Padding.Padding(float, float, float, float)
  fullName: MLEM.Maths.Padding.Padding(float, float, float, float)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/Padding.cs
    startLine: 53
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Create a new padding with the specified borders.
  example: []
  syntax:
    content: public Padding(float left, float right, float top, float bottom)
    parameters:
    - id: left
      type: System.Single
      description: The amount of padding on the left side
    - id: right
      type: System.Single
      description: The amount of padding on the right side
    - id: top
      type: System.Single
      description: The amount of padding on the top side
    - id: bottom
      type: System.Single
      description: The amount of padding on the bottom side
    content.vb: Public Sub New(left As Single, right As Single, top As Single, bottom As Single)
  overload: MLEM.Maths.Padding.#ctor*
  nameWithType.vb: Padding.New(Single, Single, Single, Single)
  fullName.vb: MLEM.Maths.Padding.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: MLEM.Maths.Padding.#ctor(System.Single)
  commentId: M:MLEM.Maths.Padding.#ctor(System.Single)
  id: '#ctor(System.Single)'
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Padding(float)
  nameWithType: Padding.Padding(float)
  fullName: MLEM.Maths.Padding.Padding(float)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/Padding.cs
    startLine: 64
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new padding with the specified value, which will be applied to each edge.
  example: []
  syntax:
    content: public Padding(float value)
    parameters:
    - id: value
      type: System.Single
      description: The padding to apply to each edge
    content.vb: Public Sub New(value As Single)
  overload: MLEM.Maths.Padding.#ctor*
  nameWithType.vb: Padding.New(Single)
  fullName.vb: MLEM.Maths.Padding.New(Single)
  name.vb: New(Single)
- uid: MLEM.Maths.Padding.#ctor(System.Single,System.Single)
  commentId: M:MLEM.Maths.Padding.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Padding(float, float)
  nameWithType: Padding.Padding(float, float)
  fullName: MLEM.Maths.Padding.Padding(float, float)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/Padding.cs
    startLine: 71
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new padding with the specified x and y values, applying them to both edges.
  example: []
  syntax:
    content: public Padding(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The x padding, which will turn into the left and right padding
    - id: y
      type: System.Single
      description: The y padding, which till turn into the top and bottom padding
    content.vb: Public Sub New(x As Single, y As Single)
  overload: MLEM.Maths.Padding.#ctor*
  nameWithType.vb: Padding.New(Single, Single)
  fullName.vb: MLEM.Maths.Padding.New(Single, Single)
  name.vb: New(Single, Single)
- uid: MLEM.Maths.Padding.#ctor(MLEM.Maths.Padding,System.Single)
  commentId: M:MLEM.Maths.Padding.#ctor(MLEM.Maths.Padding,System.Single)
  id: '#ctor(MLEM.Maths.Padding,System.Single)'
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Padding(Padding, float)
  nameWithType: Padding.Padding(Padding, float)
  fullName: MLEM.Maths.Padding.Padding(MLEM.Maths.Padding, float)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/Padding.cs
    startLine: 78
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new padding from an existing padding, modifying it by growing or shrinking it.
  example: []
  syntax:
    content: public Padding(Padding padding, float growth)
    parameters:
    - id: padding
      type: MLEM.Maths.Padding
      description: The padding whose initial values to use
    - id: growth
      type: System.Single
      description: The amount to grow each border by. Negative values will shrink the padding.
    content.vb: Public Sub New(padding As Padding, growth As Single)
  overload: MLEM.Maths.Padding.#ctor*
  nameWithType.vb: Padding.New(Padding, Single)
  fullName.vb: MLEM.Maths.Padding.New(MLEM.Maths.Padding, Single)
  name.vb: New(Padding, Single)
- uid: MLEM.Maths.Padding.op_Implicit(Microsoft.Xna.Framework.Vector2)~MLEM.Maths.Padding
  commentId: M:MLEM.Maths.Padding.op_Implicit(Microsoft.Xna.Framework.Vector2)~MLEM.Maths.Padding
  id: op_Implicit(Microsoft.Xna.Framework.Vector2)~MLEM.Maths.Padding
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: implicit operator Padding(Vector2)
  nameWithType: Padding.implicit operator Padding(Vector2)
  fullName: MLEM.Maths.Padding.implicit operator MLEM.Maths.Padding(Microsoft.Xna.Framework.Vector2)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Implicit
    path: ../MLEM/Maths/Padding.cs
    startLine: 86
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Implicitly creates a padding from the given two-dimensional vector.

    The left and right padding will both be the vector's x value, and the top and bottom padding will both be the vector's y value.
  example: []
  syntax:
    content: public static implicit operator Padding(Vector2 vec)
    parameters:
    - id: vec
      type: Microsoft.Xna.Framework.Vector2
      description: The vector to convert
    return:
      type: MLEM.Maths.Padding
      description: A padding based on the vector's values
    content.vb: Public Shared Widening Operator CType(vec As Vector2) As Padding
  overload: MLEM.Maths.Padding.op_Implicit*
  nameWithType.vb: Padding.CType(Vector2)
  fullName.vb: MLEM.Maths.Padding.CType(Microsoft.Xna.Framework.Vector2)
  name.vb: CType(Vector2)
- uid: MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,System.Single)
  commentId: M:MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,System.Single)
  id: op_Multiply(MLEM.Maths.Padding,System.Single)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator *(Padding, float)
  nameWithType: Padding.operator *(Padding, float)
  fullName: MLEM.Maths.Padding.operator *(MLEM.Maths.Padding, float)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Multiply
    path: ../MLEM/Maths/Padding.cs
    startLine: 93
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Scales a padding by a scalar.
  example: []
  syntax:
    content: public static Padding operator *(Padding p, float scale)
    parameters:
    - id: p
      type: MLEM.Maths.Padding
    - id: scale
      type: System.Single
    return:
      type: MLEM.Maths.Padding
    content.vb: Public Shared Operator *(p As Padding, scale As Single) As Padding
  overload: MLEM.Maths.Padding.op_Multiply*
  nameWithType.vb: Padding.*(Padding, Single)
  fullName.vb: MLEM.Maths.Padding.*(MLEM.Maths.Padding, Single)
  name.vb: '*(Padding, Single)'
- uid: MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.Padding.op_Multiply(MLEM.Maths.Padding,Microsoft.Xna.Framework.Vector2)
  id: op_Multiply(MLEM.Maths.Padding,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator *(Padding, Vector2)
  nameWithType: Padding.operator *(Padding, Vector2)
  fullName: MLEM.Maths.Padding.operator *(MLEM.Maths.Padding, Microsoft.Xna.Framework.Vector2)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Multiply
    path: ../MLEM/Maths/Padding.cs
    startLine: 100
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Scales a padding by a <xref href="Microsoft.Xna.Framework.Vector2" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static Padding operator *(Padding p, Vector2 scale)
    parameters:
    - id: p
      type: MLEM.Maths.Padding
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
    return:
      type: MLEM.Maths.Padding
    content.vb: Public Shared Operator *(p As Padding, scale As Vector2) As Padding
  overload: MLEM.Maths.Padding.op_Multiply*
  nameWithType.vb: Padding.*(Padding, Vector2)
  fullName.vb: MLEM.Maths.Padding.*(MLEM.Maths.Padding, Microsoft.Xna.Framework.Vector2)
  name.vb: '*(Padding, Vector2)'
- uid: MLEM.Maths.Padding.op_Addition(MLEM.Maths.Padding,MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.Padding.op_Addition(MLEM.Maths.Padding,MLEM.Maths.Padding)
  id: op_Addition(MLEM.Maths.Padding,MLEM.Maths.Padding)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator +(Padding, Padding)
  nameWithType: Padding.operator +(Padding, Padding)
  fullName: MLEM.Maths.Padding.operator +(MLEM.Maths.Padding, MLEM.Maths.Padding)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Addition
    path: ../MLEM/Maths/Padding.cs
    startLine: 107
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Adds two paddings together in a memberwise fashion.
  example: []
  syntax:
    content: public static Padding operator +(Padding left, Padding right)
    parameters:
    - id: left
      type: MLEM.Maths.Padding
    - id: right
      type: MLEM.Maths.Padding
    return:
      type: MLEM.Maths.Padding
    content.vb: Public Shared Operator +(left As Padding, right As Padding) As Padding
  overload: MLEM.Maths.Padding.op_Addition*
  nameWithType.vb: Padding.+(Padding, Padding)
  fullName.vb: MLEM.Maths.Padding.+(MLEM.Maths.Padding, MLEM.Maths.Padding)
  name.vb: +(Padding, Padding)
- uid: MLEM.Maths.Padding.op_Subtraction(MLEM.Maths.Padding,MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.Padding.op_Subtraction(MLEM.Maths.Padding,MLEM.Maths.Padding)
  id: op_Subtraction(MLEM.Maths.Padding,MLEM.Maths.Padding)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator -(Padding, Padding)
  nameWithType: Padding.operator -(Padding, Padding)
  fullName: MLEM.Maths.Padding.operator -(MLEM.Maths.Padding, MLEM.Maths.Padding)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Subtraction
    path: ../MLEM/Maths/Padding.cs
    startLine: 114
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Subtracts two paddings in a memberwise fashion.
  example: []
  syntax:
    content: public static Padding operator -(Padding left, Padding right)
    parameters:
    - id: left
      type: MLEM.Maths.Padding
    - id: right
      type: MLEM.Maths.Padding
    return:
      type: MLEM.Maths.Padding
    content.vb: Public Shared Operator -(left As Padding, right As Padding) As Padding
  overload: MLEM.Maths.Padding.op_Subtraction*
  nameWithType.vb: Padding.-(Padding, Padding)
  fullName.vb: MLEM.Maths.Padding.-(MLEM.Maths.Padding, MLEM.Maths.Padding)
  name.vb: -(Padding, Padding)
- uid: MLEM.Maths.Padding.op_Equality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.Padding.op_Equality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  id: op_Equality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator ==(Padding, Padding)
  nameWithType: Padding.operator ==(Padding, Padding)
  fullName: MLEM.Maths.Padding.operator ==(MLEM.Maths.Padding, MLEM.Maths.Padding)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Equality
    path: ../MLEM/Maths/Padding.cs
    startLine: 119
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public static bool operator ==(Padding left, Padding right)
    parameters:
    - id: left
      type: MLEM.Maths.Padding
    - id: right
      type: MLEM.Maths.Padding
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Operator =(left As Padding, right As Padding) As Boolean
  overload: MLEM.Maths.Padding.op_Equality*
  nameWithType.vb: Padding.=(Padding, Padding)
  fullName.vb: MLEM.Maths.Padding.=(MLEM.Maths.Padding, MLEM.Maths.Padding)
  name.vb: =(Padding, Padding)
- uid: MLEM.Maths.Padding.op_Inequality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.Padding.op_Inequality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  id: op_Inequality(MLEM.Maths.Padding,MLEM.Maths.Padding)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: operator !=(Padding, Padding)
  nameWithType: Padding.operator !=(Padding, Padding)
  fullName: MLEM.Maths.Padding.operator !=(MLEM.Maths.Padding, MLEM.Maths.Padding)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Inequality
    path: ../MLEM/Maths/Padding.cs
    startLine: 124
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public static bool operator !=(Padding left, Padding right)
    parameters:
    - id: left
      type: MLEM.Maths.Padding
    - id: right
      type: MLEM.Maths.Padding
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Operator <>(left As Padding, right As Padding) As Boolean
  overload: MLEM.Maths.Padding.op_Inequality*
  nameWithType.vb: Padding.<>(Padding, Padding)
  fullName.vb: MLEM.Maths.Padding.<>(MLEM.Maths.Padding, MLEM.Maths.Padding)
  name.vb: <>(Padding, Padding)
- uid: MLEM.Maths.Padding.Equals(MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.Padding.Equals(MLEM.Maths.Padding)
  id: Equals(MLEM.Maths.Padding)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Equals(Padding)
  nameWithType: Padding.Equals(Padding)
  fullName: MLEM.Maths.Padding.Equals(MLEM.Maths.Padding)
  type: Method
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Maths/Padding.cs
    startLine: 129
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public bool Equals(Padding other)
    parameters:
    - id: other
      type: MLEM.Maths.Padding
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As Padding) As Boolean
  overload: MLEM.Maths.Padding.Equals*
  implements:
  - System.IEquatable{MLEM.Maths.Padding}.Equals(MLEM.Maths.Padding)
- uid: MLEM.Maths.Padding.Equals(System.Object)
  commentId: M:MLEM.Maths.Padding.Equals(System.Object)
  id: Equals(System.Object)
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: Padding.Equals(object)
  fullName: MLEM.Maths.Padding.Equals(object)
  type: Method
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Maths/Padding.cs
    startLine: 136
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: MLEM.Maths.Padding.Equals*
  nameWithType.vb: Padding.Equals(Object)
  fullName.vb: MLEM.Maths.Padding.Equals(Object)
  name.vb: Equals(Object)
- uid: MLEM.Maths.Padding.GetHashCode
  commentId: M:MLEM.Maths.Padding.GetHashCode
  id: GetHashCode
  parent: MLEM.Maths.Padding
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Padding.GetHashCode()
  fullName: MLEM.Maths.Padding.GetHashCode()
  type: Method
  source:
    remote:
      path: MLEM/Maths/Padding.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetHashCode
    path: ../MLEM/Maths/Padding.cs
    startLine: 142
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: MLEM.Maths.Padding.GetHashCode*
references:
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  href: MLEM.html
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
- uid: System.IEquatable{MLEM.Maths.Padding}
  commentId: T:System.IEquatable{MLEM.Maths.Padding}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<Padding>
  nameWithType: IEquatable<Padding>
  fullName: System.IEquatable<MLEM.Maths.Padding>
  nameWithType.vb: IEquatable(Of Padding)
  fullName.vb: System.IEquatable(Of MLEM.Maths.Padding)
  name.vb: IEquatable(Of Padding)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Maths.Padding.Empty*
  commentId: Overload:MLEM.Maths.Padding.Empty
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_Empty
  name: Empty
  nameWithType: Padding.Empty
  fullName: MLEM.Maths.Padding.Empty
- uid: MLEM.Maths.Padding
  commentId: T:MLEM.Maths.Padding
  parent: MLEM.Maths
  href: MLEM.Maths.Padding.html
  name: Padding
  nameWithType: Padding
  fullName: MLEM.Maths.Padding
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Maths.Padding.Width*
  commentId: Overload:MLEM.Maths.Padding.Width
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_Width
  name: Width
  nameWithType: Padding.Width
  fullName: MLEM.Maths.Padding.Width
- uid: MLEM.Maths.Padding.Height*
  commentId: Overload:MLEM.Maths.Padding.Height
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_Height
  name: Height
  nameWithType: Padding.Height
  fullName: MLEM.Maths.Padding.Height
- uid: MLEM.Maths.Padding.#ctor*
  commentId: Overload:MLEM.Maths.Padding.#ctor
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding__ctor_System_Single_System_Single_System_Single_System_Single_
  name: Padding
  nameWithType: Padding.Padding
  fullName: MLEM.Maths.Padding.Padding
  nameWithType.vb: Padding.New
  fullName.vb: MLEM.Maths.Padding.New
  name.vb: New
- uid: MLEM.Maths.Padding.op_Implicit*
  commentId: Overload:MLEM.Maths.Padding.op_Implicit
  name: implicit operator
  nameWithType: Padding.implicit operator
  fullName: MLEM.Maths.Padding.implicit operator
  nameWithType.vb: Padding.CType
  fullName.vb: MLEM.Maths.Padding.CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Maths.Padding.op_Multiply*
  commentId: Overload:MLEM.Maths.Padding.op_Multiply
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Multiply_MLEM_Maths_Padding_System_Single_
  name: operator *
  nameWithType: Padding.operator *
  fullName: MLEM.Maths.Padding.operator *
  nameWithType.vb: Padding.*
  fullName.vb: MLEM.Maths.Padding.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.Padding.op_Multiply*
    name: '*'
    href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Multiply_MLEM_Maths_Padding_System_Single_
- uid: MLEM.Maths.Padding.op_Addition*
  commentId: Overload:MLEM.Maths.Padding.op_Addition
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Addition_MLEM_Maths_Padding_MLEM_Maths_Padding_
  name: operator +
  nameWithType: Padding.operator +
  fullName: MLEM.Maths.Padding.operator +
  nameWithType.vb: Padding.+
  fullName.vb: MLEM.Maths.Padding.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.Padding.op_Addition*
    name: +
    href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Addition_MLEM_Maths_Padding_MLEM_Maths_Padding_
- uid: MLEM.Maths.Padding.op_Subtraction*
  commentId: Overload:MLEM.Maths.Padding.op_Subtraction
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Subtraction_MLEM_Maths_Padding_MLEM_Maths_Padding_
  name: operator -
  nameWithType: Padding.operator -
  fullName: MLEM.Maths.Padding.operator -
  nameWithType.vb: Padding.-
  fullName.vb: MLEM.Maths.Padding.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.Padding.op_Subtraction*
    name: '-'
    href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Subtraction_MLEM_Maths_Padding_MLEM_Maths_Padding_
- uid: MLEM.Maths.Padding.op_Equality*
  commentId: Overload:MLEM.Maths.Padding.op_Equality
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Equality_MLEM_Maths_Padding_MLEM_Maths_Padding_
  name: operator ==
  nameWithType: Padding.operator ==
  fullName: MLEM.Maths.Padding.operator ==
  nameWithType.vb: Padding.=
  fullName.vb: MLEM.Maths.Padding.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.Padding.op_Equality*
    name: ==
    href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Equality_MLEM_Maths_Padding_MLEM_Maths_Padding_
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Maths.Padding.op_Inequality*
  commentId: Overload:MLEM.Maths.Padding.op_Inequality
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Inequality_MLEM_Maths_Padding_MLEM_Maths_Padding_
  name: operator !=
  nameWithType: Padding.operator !=
  fullName: MLEM.Maths.Padding.operator !=
  nameWithType.vb: Padding.<>
  fullName.vb: MLEM.Maths.Padding.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.Padding.op_Inequality*
    name: '!='
    href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_op_Inequality_MLEM_Maths_Padding_MLEM_Maths_Padding_
- uid: MLEM.Maths.Padding.Equals*
  commentId: Overload:MLEM.Maths.Padding.Equals
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_Equals_MLEM_Maths_Padding_
  name: Equals
  nameWithType: Padding.Equals
  fullName: MLEM.Maths.Padding.Equals
- uid: System.IEquatable{MLEM.Maths.Padding}.Equals(MLEM.Maths.Padding)
  commentId: M:System.IEquatable{MLEM.Maths.Padding}.Equals(MLEM.Maths.Padding)
  parent: System.IEquatable{MLEM.Maths.Padding}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Padding)
  nameWithType: IEquatable<Padding>.Equals(Padding)
  fullName: System.IEquatable<MLEM.Maths.Padding>.Equals(MLEM.Maths.Padding)
  nameWithType.vb: IEquatable(Of Padding).Equals(Padding)
  fullName.vb: System.IEquatable(Of MLEM.Maths.Padding).Equals(MLEM.Maths.Padding)
  spec.csharp:
  - uid: System.IEquatable{MLEM.Maths.Padding}.Equals(MLEM.Maths.Padding)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{MLEM.Maths.Padding}.Equals(MLEM.Maths.Padding)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: MLEM.Maths.Padding.GetHashCode*
  commentId: Overload:MLEM.Maths.Padding.GetHashCode
  href: MLEM.Maths.Padding.html#MLEM_Maths_Padding_GetHashCode
  name: GetHashCode
  nameWithType: Padding.GetHashCode
  fullName: MLEM.Maths.Padding.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
