### YamlMime:ManagedReference
items:
- uid: MLEM.Ui.Elements.ElementExtensions
  commentId: T:MLEM.Ui.Elements.ElementExtensions
  id: ElementExtensions
  parent: MLEM.Ui.Elements
  children:
  - MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Paragraph.TextCallback)
  - MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Tooltip)
  - MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,System.String)
  - MLEM.Ui.Elements.ElementExtensions.IsAuto(MLEM.Ui.Anchor)
  - MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  - MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  - MLEM.Ui.Elements.ElementExtensions.IsLeftAligned(MLEM.Ui.Anchor)
  - MLEM.Ui.Elements.ElementExtensions.IsTopAligned(MLEM.Ui.Anchor)
  langs:
  - csharp
  - vb
  name: ElementExtensions
  nameWithType: ElementExtensions
  fullName: MLEM.Ui.Elements.ElementExtensions
  type: Class
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ElementExtensions
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 203
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: This class contains a set of extensions for dealing with <xref href="MLEM.Ui.Elements.Element" data-throw-if-not-resolved="false"></xref> objects
  example: []
  syntax:
    content: public static class ElementExtensions
    content.vb: Public Module ElementExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Paragraph.TextCallback)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Paragraph.TextCallback)
  id: AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Paragraph.TextCallback)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: AddTooltip(Element, TextCallback)
  nameWithType: ElementExtensions.AddTooltip(Element, Paragraph.TextCallback)
  fullName: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element, MLEM.Ui.Elements.Paragraph.TextCallback)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AddTooltip
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 211
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Adds a new <xref href="MLEM.Ui.Elements.Tooltip" data-throw-if-not-resolved="false"></xref> to the given element using the <xref href="MLEM.Ui.Elements.Tooltip.%23ctor(MLEM.Ui.Elements.Paragraph.TextCallback%2cMLEM.Ui.Elements.Element)" data-throw-if-not-resolved="false"></xref> constructor
  example: []
  syntax:
    content: public static Tooltip AddTooltip(this Element element, Paragraph.TextCallback textCallback)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to add the tooltip to
    - id: textCallback
      type: MLEM.Ui.Elements.Paragraph.TextCallback
      description: The text to display on the tooltip
    return:
      type: MLEM.Ui.Elements.Tooltip
      description: The created tooltip instance
    content.vb: Public Shared Function AddTooltip(element As Element, textCallback As Paragraph.TextCallback) As Tooltip
  overload: MLEM.Ui.Elements.ElementExtensions.AddTooltip*
- uid: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,System.String)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,System.String)
  id: AddTooltip(MLEM.Ui.Elements.Element,System.String)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: AddTooltip(Element, string)
  nameWithType: ElementExtensions.AddTooltip(Element, string)
  fullName: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element, string)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AddTooltip
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 221
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Adds a new <xref href="MLEM.Ui.Elements.Tooltip" data-throw-if-not-resolved="false"></xref> to the given element using the <xref href="MLEM.Ui.Elements.Tooltip.%23ctor(System.String%2cMLEM.Ui.Elements.Element)" data-throw-if-not-resolved="false"></xref> constructor
  example: []
  syntax:
    content: public static Tooltip AddTooltip(this Element element, string text)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to add the tooltip to
    - id: text
      type: System.String
      description: The text to display on the tooltip
    return:
      type: MLEM.Ui.Elements.Tooltip
      description: The created tooltip instance
    content.vb: Public Shared Function AddTooltip(element As Element, text As String) As Tooltip
  overload: MLEM.Ui.Elements.ElementExtensions.AddTooltip*
  nameWithType.vb: ElementExtensions.AddTooltip(Element, String)
  fullName.vb: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element, String)
  name.vb: AddTooltip(Element, String)
- uid: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Tooltip)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Tooltip)
  id: AddTooltip(MLEM.Ui.Elements.Element,MLEM.Ui.Elements.Tooltip)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: AddTooltip(Element, Tooltip)
  nameWithType: ElementExtensions.AddTooltip(Element, Tooltip)
  fullName: MLEM.Ui.Elements.ElementExtensions.AddTooltip(MLEM.Ui.Elements.Element, MLEM.Ui.Elements.Tooltip)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AddTooltip
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 231
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Adds the given <xref href="MLEM.Ui.Elements.Tooltip" data-throw-if-not-resolved="false"></xref> to the given element
  example: []
  syntax:
    content: public static Tooltip AddTooltip(this Element element, Tooltip tooltip)
    parameters:
    - id: element
      type: MLEM.Ui.Elements.Element
      description: The element to add the tooltip to
    - id: tooltip
      type: MLEM.Ui.Elements.Tooltip
      description: The tooltip to add
    return:
      type: MLEM.Ui.Elements.Tooltip
      description: The passed tooltip, for chaining
    content.vb: Public Shared Function AddTooltip(element As Element, tooltip As Tooltip) As Tooltip
  overload: MLEM.Ui.Elements.ElementExtensions.AddTooltip*
- uid: MLEM.Ui.Elements.ElementExtensions.IsAuto(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsAuto(MLEM.Ui.Anchor)
  id: IsAuto(MLEM.Ui.Anchor)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: IsAuto(Anchor)
  nameWithType: ElementExtensions.IsAuto(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsAuto(MLEM.Ui.Anchor)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsAuto
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 241
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Returns whether the given <xref href="MLEM.Ui.Anchor" data-throw-if-not-resolved="false"></xref> is automatic. The anchors <xref href="MLEM.Ui.Anchor.AutoLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoCenter" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoRight" data-throw-if-not-resolved="false"></xref>, and any anchor that <xref href="MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)" data-throw-if-not-resolved="false"></xref> will return true.
  example: []
  syntax:
    content: public static bool IsAuto(this Anchor anchor)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to query.
    return:
      type: System.Boolean
      description: Whether the given anchor is automatic.
    content.vb: Public Shared Function IsAuto(anchor As Anchor) As Boolean
  overload: MLEM.Ui.Elements.ElementExtensions.IsAuto*
- uid: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  id: IsInline(MLEM.Ui.Anchor)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: IsInline(Anchor)
  nameWithType: ElementExtensions.IsInline(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsInline
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 250
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Returns whether the given <xref href="MLEM.Ui.Anchor" data-throw-if-not-resolved="false"></xref> is inline. The anchors <xref href="MLEM.Ui.Anchor.AutoInline" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoInlineCenter" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoInlineBottom" data-throw-if-not-resolved="false"></xref>, and any anchor that <xref href="MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)" data-throw-if-not-resolved="false"></xref> will return true.
  example: []
  syntax:
    content: public static bool IsInline(this Anchor anchor)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to query.
    return:
      type: System.Boolean
      description: Whether the given anchor is inline.
    content.vb: Public Shared Function IsInline(anchor As Anchor) As Boolean
  overload: MLEM.Ui.Elements.ElementExtensions.IsInline*
- uid: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  id: IsIgnoreOverflow(MLEM.Ui.Anchor)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: IsIgnoreOverflow(Anchor)
  nameWithType: ElementExtensions.IsIgnoreOverflow(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsIgnoreOverflow
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 259
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Returns whether the given <xref href="MLEM.Ui.Anchor" data-throw-if-not-resolved="false"></xref> ignores overflow. The anchors <xref href="MLEM.Ui.Anchor.AutoInlineIgnoreOverflow" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoInlineCenterIgnoreOverflow" data-throw-if-not-resolved="false"></xref>, and <xref href="MLEM.Ui.Anchor.AutoInlineBottomIgnoreOverflow" data-throw-if-not-resolved="false"></xref> will return true.
  example: []
  syntax:
    content: public static bool IsIgnoreOverflow(this Anchor anchor)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to query.
    return:
      type: System.Boolean
      description: Whether the given anchor ignores overflow.
    content.vb: Public Shared Function IsIgnoreOverflow(anchor As Anchor) As Boolean
  overload: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow*
- uid: MLEM.Ui.Elements.ElementExtensions.IsLeftAligned(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsLeftAligned(MLEM.Ui.Anchor)
  id: IsLeftAligned(MLEM.Ui.Anchor)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: IsLeftAligned(Anchor)
  nameWithType: ElementExtensions.IsLeftAligned(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsLeftAligned(MLEM.Ui.Anchor)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsLeftAligned
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 268
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Returns whether the given <xref href="MLEM.Ui.Anchor" data-throw-if-not-resolved="false"></xref> is left-aligned for the purpose of <xref href="MLEM.Ui.Elements.Element.GetRightmostChild(System.Func%7bMLEM.Ui.Elements.Element%2cSystem.Boolean%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>. The anchors <xref href="MLEM.Ui.Anchor.TopLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.CenterLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.BottomLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoLeft" data-throw-if-not-resolved="false"></xref>, and any anchor that <xref href="MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)" data-throw-if-not-resolved="false"></xref> will return true.
  example: []
  syntax:
    content: public static bool IsLeftAligned(this Anchor anchor)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to query.
    return:
      type: System.Boolean
      description: Whether the given anchor is left-aligned.
    content.vb: Public Shared Function IsLeftAligned(anchor As Anchor) As Boolean
  overload: MLEM.Ui.Elements.ElementExtensions.IsLeftAligned*
- uid: MLEM.Ui.Elements.ElementExtensions.IsTopAligned(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsTopAligned(MLEM.Ui.Anchor)
  id: IsTopAligned(MLEM.Ui.Anchor)
  isExtensionMethod: true
  parent: MLEM.Ui.Elements.ElementExtensions
  langs:
  - csharp
  - vb
  name: IsTopAligned(Anchor)
  nameWithType: ElementExtensions.IsTopAligned(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsTopAligned(MLEM.Ui.Anchor)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsTopAligned
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 277
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Returns whether the given <xref href="MLEM.Ui.Anchor" data-throw-if-not-resolved="false"></xref> is top-aligned for the purpose of <xref href="MLEM.Ui.Elements.Element.GetLowestChild(System.Func%7bMLEM.Ui.Elements.Element%2cSystem.Boolean%7d%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>. The anchors <xref href="MLEM.Ui.Anchor.TopLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.TopCenter" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.TopRight" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoLeft" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoCenter" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoRight" data-throw-if-not-resolved="false"></xref>, <xref href="MLEM.Ui.Anchor.AutoInline" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Ui.Anchor.AutoInlineIgnoreOverflow" data-throw-if-not-resolved="false"></xref> will return true.
  example: []
  syntax:
    content: public static bool IsTopAligned(this Anchor anchor)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor to query.
    return:
      type: System.Boolean
      description: Whether the given anchor is top-aligned.
    content.vb: Public Shared Function IsTopAligned(anchor As Anchor) As Boolean
  overload: MLEM.Ui.Elements.ElementExtensions.IsTopAligned*
references:
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Element.html
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  href: MLEM.html
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    href: MLEM.Ui.Elements.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    href: MLEM.Ui.Elements.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Ui.Elements.Tooltip
  commentId: T:MLEM.Ui.Elements.Tooltip
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Tooltip.html
  name: Tooltip
  nameWithType: Tooltip
  fullName: MLEM.Ui.Elements.Tooltip
- uid: MLEM.Ui.Elements.Tooltip.#ctor(MLEM.Ui.Elements.Paragraph.TextCallback,MLEM.Ui.Elements.Element)
  commentId: M:MLEM.Ui.Elements.Tooltip.#ctor(MLEM.Ui.Elements.Paragraph.TextCallback,MLEM.Ui.Elements.Element)
  href: MLEM.Ui.Elements.Tooltip.html#MLEM_Ui_Elements_Tooltip__ctor_MLEM_Ui_Elements_Paragraph_TextCallback_MLEM_Ui_Elements_Element_
  name: Tooltip(TextCallback, Element)
  nameWithType: Tooltip.Tooltip(Paragraph.TextCallback, Element)
  fullName: MLEM.Ui.Elements.Tooltip.Tooltip(MLEM.Ui.Elements.Paragraph.TextCallback, MLEM.Ui.Elements.Element)
  nameWithType.vb: Tooltip.New(Paragraph.TextCallback, Element)
  fullName.vb: MLEM.Ui.Elements.Tooltip.New(MLEM.Ui.Elements.Paragraph.TextCallback, MLEM.Ui.Elements.Element)
  name.vb: New(TextCallback, Element)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Tooltip.#ctor(MLEM.Ui.Elements.Paragraph.TextCallback,MLEM.Ui.Elements.Element)
    name: Tooltip
    href: MLEM.Ui.Elements.Tooltip.html#MLEM_Ui_Elements_Tooltip__ctor_MLEM_Ui_Elements_Paragraph_TextCallback_MLEM_Ui_Elements_Element_
  - name: (
  - uid: MLEM.Ui.Elements.Paragraph.TextCallback
    name: TextCallback
    href: MLEM.Ui.Elements.Paragraph.TextCallback.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: MLEM.Ui.Elements.Paragraph.TextCallback
    name: TextCallback
    href: MLEM.Ui.Elements.Paragraph.TextCallback.html
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: )
- uid: MLEM.Ui.Elements.ElementExtensions.AddTooltip*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.AddTooltip
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_AddTooltip_MLEM_Ui_Elements_Element_MLEM_Ui_Elements_Paragraph_TextCallback_
  name: AddTooltip
  nameWithType: ElementExtensions.AddTooltip
  fullName: MLEM.Ui.Elements.ElementExtensions.AddTooltip
- uid: MLEM.Ui.Elements.Paragraph.TextCallback
  commentId: T:MLEM.Ui.Elements.Paragraph.TextCallback
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Paragraph.html
  name: Paragraph.TextCallback
  nameWithType: Paragraph.TextCallback
  fullName: MLEM.Ui.Elements.Paragraph.TextCallback
  spec.csharp:
  - uid: MLEM.Ui.Elements.Paragraph
    name: Paragraph
    href: MLEM.Ui.Elements.Paragraph.html
  - name: .
  - uid: MLEM.Ui.Elements.Paragraph.TextCallback
    name: TextCallback
    href: MLEM.Ui.Elements.Paragraph.TextCallback.html
  spec.vb:
  - uid: MLEM.Ui.Elements.Paragraph
    name: Paragraph
    href: MLEM.Ui.Elements.Paragraph.html
  - name: .
  - uid: MLEM.Ui.Elements.Paragraph.TextCallback
    name: TextCallback
    href: MLEM.Ui.Elements.Paragraph.TextCallback.html
- uid: MLEM.Ui.Elements.Tooltip.#ctor(System.String,MLEM.Ui.Elements.Element)
  commentId: M:MLEM.Ui.Elements.Tooltip.#ctor(System.String,MLEM.Ui.Elements.Element)
  isExternal: true
  href: MLEM.Ui.Elements.Tooltip.html#MLEM_Ui_Elements_Tooltip__ctor_System_String_MLEM_Ui_Elements_Element_
  name: Tooltip(string, Element)
  nameWithType: Tooltip.Tooltip(string, Element)
  fullName: MLEM.Ui.Elements.Tooltip.Tooltip(string, MLEM.Ui.Elements.Element)
  nameWithType.vb: Tooltip.New(String, Element)
  fullName.vb: MLEM.Ui.Elements.Tooltip.New(String, MLEM.Ui.Elements.Element)
  name.vb: New(String, Element)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Tooltip.#ctor(System.String,MLEM.Ui.Elements.Element)
    name: Tooltip
    href: MLEM.Ui.Elements.Tooltip.html#MLEM_Ui_Elements_Tooltip__ctor_System_String_MLEM_Ui_Elements_Element_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: )
  spec.vb:
  - name: New
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  href: MLEM.Ui.Anchor.html
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: MLEM.Ui.Anchor.AutoLeft
  commentId: F:MLEM.Ui.Anchor.AutoLeft
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoLeft
  name: AutoLeft
  nameWithType: Anchor.AutoLeft
  fullName: MLEM.Ui.Anchor.AutoLeft
- uid: MLEM.Ui.Anchor.AutoCenter
  commentId: F:MLEM.Ui.Anchor.AutoCenter
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoCenter
  name: AutoCenter
  nameWithType: Anchor.AutoCenter
  fullName: MLEM.Ui.Anchor.AutoCenter
- uid: MLEM.Ui.Anchor.AutoRight
  commentId: F:MLEM.Ui.Anchor.AutoRight
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoRight
  name: AutoRight
  nameWithType: Anchor.AutoRight
  fullName: MLEM.Ui.Anchor.AutoRight
- uid: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsInline_MLEM_Ui_Anchor_
  name: IsInline(Anchor)
  nameWithType: ElementExtensions.IsInline(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
  spec.csharp:
  - uid: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
    name: IsInline
    href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsInline_MLEM_Ui_Anchor_
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    href: MLEM.Ui.Anchor.html
  - name: )
  spec.vb:
  - uid: MLEM.Ui.Elements.ElementExtensions.IsInline(MLEM.Ui.Anchor)
    name: IsInline
    href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsInline_MLEM_Ui_Anchor_
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    href: MLEM.Ui.Anchor.html
  - name: )
- uid: MLEM.Ui.Elements.ElementExtensions.IsAuto*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.IsAuto
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsAuto_MLEM_Ui_Anchor_
  name: IsAuto
  nameWithType: ElementExtensions.IsAuto
  fullName: MLEM.Ui.Elements.ElementExtensions.IsAuto
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  href: MLEM.html
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
- uid: MLEM.Ui.Anchor.AutoInline
  commentId: F:MLEM.Ui.Anchor.AutoInline
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInline
  name: AutoInline
  nameWithType: Anchor.AutoInline
  fullName: MLEM.Ui.Anchor.AutoInline
- uid: MLEM.Ui.Anchor.AutoInlineCenter
  commentId: F:MLEM.Ui.Anchor.AutoInlineCenter
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInlineCenter
  name: AutoInlineCenter
  nameWithType: Anchor.AutoInlineCenter
  fullName: MLEM.Ui.Anchor.AutoInlineCenter
- uid: MLEM.Ui.Anchor.AutoInlineBottom
  commentId: F:MLEM.Ui.Anchor.AutoInlineBottom
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInlineBottom
  name: AutoInlineBottom
  nameWithType: Anchor.AutoInlineBottom
  fullName: MLEM.Ui.Anchor.AutoInlineBottom
- uid: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  commentId: M:MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsIgnoreOverflow_MLEM_Ui_Anchor_
  name: IsIgnoreOverflow(Anchor)
  nameWithType: ElementExtensions.IsIgnoreOverflow(Anchor)
  fullName: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
  spec.csharp:
  - uid: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
    name: IsIgnoreOverflow
    href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsIgnoreOverflow_MLEM_Ui_Anchor_
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    href: MLEM.Ui.Anchor.html
  - name: )
  spec.vb:
  - uid: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow(MLEM.Ui.Anchor)
    name: IsIgnoreOverflow
    href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsIgnoreOverflow_MLEM_Ui_Anchor_
  - name: (
  - uid: MLEM.Ui.Anchor
    name: Anchor
    href: MLEM.Ui.Anchor.html
  - name: )
- uid: MLEM.Ui.Elements.ElementExtensions.IsInline*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.IsInline
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsInline_MLEM_Ui_Anchor_
  name: IsInline
  nameWithType: ElementExtensions.IsInline
  fullName: MLEM.Ui.Elements.ElementExtensions.IsInline
- uid: MLEM.Ui.Anchor.AutoInlineIgnoreOverflow
  commentId: F:MLEM.Ui.Anchor.AutoInlineIgnoreOverflow
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInlineIgnoreOverflow
  name: AutoInlineIgnoreOverflow
  nameWithType: Anchor.AutoInlineIgnoreOverflow
  fullName: MLEM.Ui.Anchor.AutoInlineIgnoreOverflow
- uid: MLEM.Ui.Anchor.AutoInlineCenterIgnoreOverflow
  commentId: F:MLEM.Ui.Anchor.AutoInlineCenterIgnoreOverflow
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInlineCenterIgnoreOverflow
  name: AutoInlineCenterIgnoreOverflow
  nameWithType: Anchor.AutoInlineCenterIgnoreOverflow
  fullName: MLEM.Ui.Anchor.AutoInlineCenterIgnoreOverflow
- uid: MLEM.Ui.Anchor.AutoInlineBottomIgnoreOverflow
  commentId: F:MLEM.Ui.Anchor.AutoInlineBottomIgnoreOverflow
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_AutoInlineBottomIgnoreOverflow
  name: AutoInlineBottomIgnoreOverflow
  nameWithType: Anchor.AutoInlineBottomIgnoreOverflow
  fullName: MLEM.Ui.Anchor.AutoInlineBottomIgnoreOverflow
- uid: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsIgnoreOverflow_MLEM_Ui_Anchor_
  name: IsIgnoreOverflow
  nameWithType: ElementExtensions.IsIgnoreOverflow
  fullName: MLEM.Ui.Elements.ElementExtensions.IsIgnoreOverflow
- uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetRightmostChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  name: GetRightmostChild(Func<Element, bool>, bool)
  nameWithType: Element.GetRightmostChild(Func<Element, bool>, bool)
  fullName: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func<MLEM.Ui.Elements.Element, bool>, bool)
  nameWithType.vb: Element.GetRightmostChild(Func(Of Element, Boolean), Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func(Of MLEM.Ui.Elements.Element, Boolean), Boolean)
  name.vb: GetRightmostChild(Func(Of Element, Boolean), Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
    name: GetRightmostChild
    href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetRightmostChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetRightmostChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
    name: GetRightmostChild
    href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetRightmostChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Ui.Anchor.TopLeft
  commentId: F:MLEM.Ui.Anchor.TopLeft
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_TopLeft
  name: TopLeft
  nameWithType: Anchor.TopLeft
  fullName: MLEM.Ui.Anchor.TopLeft
- uid: MLEM.Ui.Anchor.CenterLeft
  commentId: F:MLEM.Ui.Anchor.CenterLeft
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_CenterLeft
  name: CenterLeft
  nameWithType: Anchor.CenterLeft
  fullName: MLEM.Ui.Anchor.CenterLeft
- uid: MLEM.Ui.Anchor.BottomLeft
  commentId: F:MLEM.Ui.Anchor.BottomLeft
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_BottomLeft
  name: BottomLeft
  nameWithType: Anchor.BottomLeft
  fullName: MLEM.Ui.Anchor.BottomLeft
- uid: MLEM.Ui.Elements.ElementExtensions.IsLeftAligned*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.IsLeftAligned
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsLeftAligned_MLEM_Ui_Anchor_
  name: IsLeftAligned
  nameWithType: ElementExtensions.IsLeftAligned
  fullName: MLEM.Ui.Elements.ElementExtensions.IsLeftAligned
- uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
  commentId: M:MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
  parent: MLEM.Ui.Elements.Element
  isExternal: true
  href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetLowestChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  name: GetLowestChild(Func<Element, bool>, bool)
  nameWithType: Element.GetLowestChild(Func<Element, bool>, bool)
  fullName: MLEM.Ui.Elements.Element.GetLowestChild(System.Func<MLEM.Ui.Elements.Element, bool>, bool)
  nameWithType.vb: Element.GetLowestChild(Func(Of Element, Boolean), Boolean)
  fullName.vb: MLEM.Ui.Elements.Element.GetLowestChild(System.Func(Of MLEM.Ui.Elements.Element, Boolean), Boolean)
  name.vb: GetLowestChild(Func(Of Element, Boolean), Boolean)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
    name: GetLowestChild
    href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetLowestChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Ui.Elements.Element.GetLowestChild(System.Func{MLEM.Ui.Elements.Element,System.Boolean},System.Boolean)
    name: GetLowestChild
    href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_GetLowestChild_System_Func_MLEM_Ui_Elements_Element_System_Boolean__System_Boolean_
  - name: (
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Ui.Elements.Element
    name: Element
    href: MLEM.Ui.Elements.Element.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Ui.Anchor.TopCenter
  commentId: F:MLEM.Ui.Anchor.TopCenter
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_TopCenter
  name: TopCenter
  nameWithType: Anchor.TopCenter
  fullName: MLEM.Ui.Anchor.TopCenter
- uid: MLEM.Ui.Anchor.TopRight
  commentId: F:MLEM.Ui.Anchor.TopRight
  href: MLEM.Ui.Anchor.html#MLEM_Ui_Anchor_TopRight
  name: TopRight
  nameWithType: Anchor.TopRight
  fullName: MLEM.Ui.Anchor.TopRight
- uid: MLEM.Ui.Elements.ElementExtensions.IsTopAligned*
  commentId: Overload:MLEM.Ui.Elements.ElementExtensions.IsTopAligned
  href: MLEM.Ui.Elements.ElementExtensions.html#MLEM_Ui_Elements_ElementExtensions_IsTopAligned_MLEM_Ui_Anchor_
  name: IsTopAligned
  nameWithType: ElementExtensions.IsTopAligned
  fullName: MLEM.Ui.Elements.ElementExtensions.IsTopAligned
