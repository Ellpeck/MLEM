### YamlMime:ManagedReference
items:
- uid: MLEM.Formatting.TokenizedString
  commentId: T:MLEM.Formatting.TokenizedString
  id: TokenizedString
  parent: MLEM.Formatting
  children:
  - MLEM.Formatting.TokenizedString.AllCodes
  - MLEM.Formatting.TokenizedString.DisplayString
  - MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  - MLEM.Formatting.TokenizedString.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  - MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  - MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  - MLEM.Formatting.TokenizedString.RawString
  - MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  - MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  - MLEM.Formatting.TokenizedString.String
  - MLEM.Formatting.TokenizedString.Tokens
  - MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  - MLEM.Formatting.TokenizedString.Update(Microsoft.Xna.Framework.GameTime)
  langs:
  - csharp
  - vb
  name: TokenizedString
  nameWithType: TokenizedString
  fullName: MLEM.Formatting.TokenizedString
  type: Class
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TokenizedString
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 14
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: A tokenized string that was created using a <xref href="MLEM.Formatting.TextFormatter" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: 'public class TokenizedString : GenericDataHolder, IGenericDataHolder'
    content.vb: Public Class TokenizedString Inherits GenericDataHolder Implements IGenericDataHolder
  inheritance:
  - System.Object
  - MLEM.Misc.GenericDataHolder
  implements:
  - MLEM.Misc.IGenericDataHolder
  inheritedMembers:
  - MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  - MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.GenericDataHolder.GetDataKeys
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Formatting.TokenizedString.RawString
  commentId: F:MLEM.Formatting.TokenizedString.RawString
  id: RawString
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: RawString
  nameWithType: TokenizedString.RawString
  fullName: MLEM.Formatting.TokenizedString.RawString
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RawString
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 19
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The raw string that was used to create this tokenized string.
  example: []
  syntax:
    content: public readonly string RawString
    return:
      type: System.String
    content.vb: Public ReadOnly RawString As String
- uid: MLEM.Formatting.TokenizedString.String
  commentId: F:MLEM.Formatting.TokenizedString.String
  id: String
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: String
  nameWithType: TokenizedString.String
  fullName: MLEM.Formatting.TokenizedString.String
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: String
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 23
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The <xref href="MLEM.Formatting.TokenizedString.RawString" data-throw-if-not-resolved="false"></xref>, but with formatting codes stripped out.
  example: []
  syntax:
    content: public readonly string String
    return:
      type: System.String
    content.vb: Public ReadOnly [String] As String
- uid: MLEM.Formatting.TokenizedString.DisplayString
  commentId: P:MLEM.Formatting.TokenizedString.DisplayString
  id: DisplayString
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: DisplayString
  nameWithType: TokenizedString.DisplayString
  fullName: MLEM.Formatting.TokenizedString.DisplayString
  type: Property
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DisplayString
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 28
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    The string that is actually displayed by this tokenized string.

    If this string has been <xref href="MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont%2cSystem.Single%2cSystem.Single%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont%2cSystem.Single%2cSystem.Single%2cSystem.String%2cMLEM.Formatting.TextAlignment)" data-throw-if-not-resolved="false"></xref> has been used, this string will contain the newline characters.
  example: []
  syntax:
    content: public string DisplayString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayString As String
  overload: MLEM.Formatting.TokenizedString.DisplayString*
- uid: MLEM.Formatting.TokenizedString.Tokens
  commentId: F:MLEM.Formatting.TokenizedString.Tokens
  id: Tokens
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: TokenizedString.Tokens
  fullName: MLEM.Formatting.TokenizedString.Tokens
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Tokens
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 32
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: The tokens that this tokenized string contains.
  example: []
  syntax:
    content: public readonly Token[] Tokens
    return:
      type: MLEM.Formatting.Token[]
    content.vb: Public ReadOnly Tokens As Token()
- uid: MLEM.Formatting.TokenizedString.AllCodes
  commentId: F:MLEM.Formatting.TokenizedString.AllCodes
  id: AllCodes
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: AllCodes
  nameWithType: TokenizedString.AllCodes
  fullName: MLEM.Formatting.TokenizedString.AllCodes
  type: Field
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AllCodes
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 37
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    All of the formatting codes that are applied over this tokenized string.

    Note that, to get a formatting code for a certain token, use <xref href="MLEM.Formatting.Token.AppliedCodes" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public readonly Code[] AllCodes
    return:
      type: MLEM.Formatting.Codes.Code[]
    content.vb: Public ReadOnly AllCodes As Code()
- uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  id: Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Split(GenericFont, float, float, TextAlignment)
  nameWithType: TokenizedString.Split(GenericFont, float, float, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, float, float, MLEM.Formatting.TextAlignment)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Split
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 58
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Splits this tokenized string, inserting newline characters if the width of the string is bigger than the maximum width.

    Note that a tokenized string can be re-split without losing any of its actual data, as this operation merely modifies the <xref href="MLEM.Formatting.TokenizedString.DisplayString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Split(GenericFont font, float width, float scale, TextAlignment alignment = TextAlignment.Left)
    parameters:
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use for width calculations
    - id: width
      type: System.Single
      description: The maximum width, in display pixels based on the font and scale
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    - id: alignment
      type: MLEM.Formatting.TextAlignment
      description: The text alignment that should be used for width calculations
    content.vb: Public Sub Split(font As GenericFont, width As Single, scale As Single, alignment As TextAlignment = TextAlignment.Left)
  overload: MLEM.Formatting.TokenizedString.Split*
  nameWithType.vb: TokenizedString.Split(GenericFont, Single, Single, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, Single, Single, MLEM.Formatting.TextAlignment)
  name.vb: Split(GenericFont, Single, Single, TextAlignment)
- uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  id: Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Truncate(GenericFont, float, float, string, TextAlignment)
  nameWithType: TokenizedString.Truncate(GenericFont, float, float, string, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, float, float, string, MLEM.Formatting.TextAlignment)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Truncate
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 81
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Truncates this tokenized string, removing any additional characters that exceed the length from the displayed string.

    Note that a tokenized string can be re-truncated without losing any of its actual data, as this operation merely modifies the <xref href="MLEM.Formatting.TokenizedString.DisplayString" data-throw-if-not-resolved="false"></xref>.

    <xref href="MLEM.Font.GenericFont.TruncateString(System.String%2cSystem.Single%2cSystem.Single%2cSystem.Boolean%2cSystem.String)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public void Truncate(GenericFont font, float width, float scale, string ellipsis = "", TextAlignment alignment = TextAlignment.Left)
    parameters:
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use for width calculations
    - id: width
      type: System.Single
      description: The maximum width, in display pixels based on the font and scale
    - id: scale
      type: System.Single
      description: The scale to use for width measurements
    - id: ellipsis
      type: System.String
      description: The characters to add to the end of the string if it is too long
    - id: alignment
      type: MLEM.Formatting.TextAlignment
      description: The text alignment that should be used for width calculations
    content.vb: Public Sub Truncate(font As GenericFont, width As Single, scale As Single, ellipsis As String = "", alignment As TextAlignment = TextAlignment.Left)
  overload: MLEM.Formatting.TokenizedString.Truncate*
  nameWithType.vb: TokenizedString.Truncate(GenericFont, Single, Single, String, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, Single, Single, String, MLEM.Formatting.TextAlignment)
  name.vb: Truncate(GenericFont, Single, Single, String, TextAlignment)
- uid: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  id: Realign(MLEM.Font.GenericFont,MLEM.Formatting.TextAlignment)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Realign(GenericFont, TextAlignment)
  nameWithType: TokenizedString.Realign(GenericFont, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Realign(MLEM.Font.GenericFont, MLEM.Formatting.TextAlignment)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Realign
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 99
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Realigns this tokenized string using the given <xref href="MLEM.Formatting.TextAlignment" data-throw-if-not-resolved="false"></xref>.

    If the <code class="paramref">alignment</code> is <xref href="MLEM.Formatting.TextAlignment.Right" data-throw-if-not-resolved="false"></xref>, trailing space characters (but not <xref href="MLEM.Font.GenericFont.Nbsp" data-throw-if-not-resolved="false"></xref>) will be removed.
  example: []
  syntax:
    content: public void Realign(GenericFont font, TextAlignment alignment)
    parameters:
    - id: font
      type: MLEM.Font.GenericFont
      description: The font to use for width calculations.
    - id: alignment
      type: MLEM.Formatting.TextAlignment
      description: The text alignment that should be used for width calculations.
    content.vb: Public Sub Realign(font As GenericFont, alignment As TextAlignment)
  overload: MLEM.Formatting.TokenizedString.Realign*
- uid: MLEM.Formatting.TokenizedString.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  commentId: M:MLEM.Formatting.TokenizedString.GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  id: GetArea(Microsoft.Xna.Framework.Vector2,System.Single)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: GetArea(Vector2, float)
  nameWithType: TokenizedString.GetArea(Vector2, float)
  fullName: MLEM.Formatting.TokenizedString.GetArea(Microsoft.Xna.Framework.Vector2, float)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetArea
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 145
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Measures the area that this entire tokenized string and all of its <xref href="MLEM.Formatting.TokenizedString.Tokens" data-throw-if-not-resolved="false"></xref> take up and returns it as a <xref href="MLEM.Maths.RectangleF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RectangleF GetArea(Vector2 stringPos = default, float scale = 1)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that this string is being rendered at, which will offset the resulting <xref href="MLEM.Maths.RectangleF" data-throw-if-not-resolved="false"></xref>.
    - id: scale
      type: System.Single
      description: The scale that this string is being rendered with, which will scale the resulting <xref href="MLEM.Maths.RectangleF" data-throw-if-not-resolved="false"></xref>.
    return:
      type: MLEM.Maths.RectangleF
      description: The area that this tokenized string takes up.
    content.vb: Public Function GetArea(stringPos As Vector2 = Nothing, scale As Single = 1) As RectangleF
  overload: MLEM.Formatting.TokenizedString.GetArea*
  nameWithType.vb: TokenizedString.GetArea(Vector2, Single)
  fullName.vb: MLEM.Formatting.TokenizedString.GetArea(Microsoft.Xna.Framework.Vector2, Single)
  name.vb: GetArea(Vector2, Single)
- uid: MLEM.Formatting.TokenizedString.Update(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Formatting.TokenizedString.Update(Microsoft.Xna.Framework.GameTime)
  id: Update(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Update(GameTime)
  nameWithType: TokenizedString.Update(GameTime)
  fullName: MLEM.Formatting.TokenizedString.Update(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Update
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 153
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Updates the formatting codes in this formatted string, causing animations to animate etc.
  example: []
  syntax:
    content: public void Update(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Public Sub Update(time As GameTime)
  overload: MLEM.Formatting.TokenizedString.Update*
- uid: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  commentId: M:MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  id: GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Single,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: GetTokenUnderPos(Vector2, Vector2, float, GenericFont, float, Vector2, SpriteEffects)
  nameWithType: TokenizedString.GetTokenUnderPos(Vector2, Vector2, float, GenericFont, float, Vector2, SpriteEffects)
  fullName: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, float, MLEM.Font.GenericFont, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetTokenUnderPos
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 159
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Returns the token under the given position.

    This can be used for hovering effects when the mouse is over a token, etc.
  example: []
  syntax:
    content: public Token GetTokenUnderPos(Vector2 stringPos, Vector2 target, float scale, GenericFont font = null, float rotation = 0, Vector2 origin = default, SpriteEffects effects = SpriteEffects.None)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the string is drawn at.
    - id: target
      type: Microsoft.Xna.Framework.Vector2
      description: The position to use for checking the token.
    - id: scale
      type: System.Single
      description: The scale that the string is drawn at.
    - id: font
      type: MLEM.Font.GenericFont
      description: The font that the string is being drawn with. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, all following parameters are ignored.
    - id: rotation
      type: System.Single
      description: The rotation that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this this is ignored.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this this is ignored.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The sprite effects that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this is ignored.
    return:
      type: MLEM.Formatting.Token
      description: The token under the target position
    content.vb: Public Function GetTokenUnderPos(stringPos As Vector2, target As Vector2, scale As Single, font As GenericFont = Nothing, rotation As Single = 0, origin As Vector2 = Nothing, effects As SpriteEffects = SpriteEffects.None) As Token
  overload: MLEM.Formatting.TokenizedString.GetTokenUnderPos*
  nameWithType.vb: TokenizedString.GetTokenUnderPos(Vector2, Vector2, Single, GenericFont, Single, Vector2, SpriteEffects)
  fullName.vb: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Single, MLEM.Font.GenericFont, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  name.vb: GetTokenUnderPos(Vector2, Vector2, Single, GenericFont, Single, Vector2, SpriteEffects)
- uid: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  commentId: M:MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  id: GetTokenUnderPos(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects)
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: GetTokenUnderPos(Vector2, Vector2, Vector2, GenericFont, float, Vector2, SpriteEffects)
  nameWithType: TokenizedString.GetTokenUnderPos(Vector2, Vector2, Vector2, GenericFont, float, Vector2, SpriteEffects)
  fullName: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetTokenUnderPos
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 175
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: >-
    Returns the token under the given position.

    This can be used for hovering effects when the mouse is over a token, etc.
  example: []
  syntax:
    content: public Token GetTokenUnderPos(Vector2 stringPos, Vector2 target, Vector2 scale, GenericFont font = null, float rotation = 0, Vector2 origin = default, SpriteEffects effects = SpriteEffects.None)
    parameters:
    - id: stringPos
      type: Microsoft.Xna.Framework.Vector2
      description: The position that the string is drawn at.
    - id: target
      type: Microsoft.Xna.Framework.Vector2
      description: The position to use for checking the token.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: The scale that the string is drawn at.
    - id: font
      type: MLEM.Font.GenericFont
      description: The font that the string is being drawn with. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, all following parameters are ignored.
    - id: rotation
      type: System.Single
      description: The rotation that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this this is ignored.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: The origin that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this this is ignored.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: The sprite effects that the string is being drawn with. If <code class="paramref">font</code> is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>, this is ignored.
    return:
      type: MLEM.Formatting.Token
      description: The token under the target position
    content.vb: Public Function GetTokenUnderPos(stringPos As Vector2, target As Vector2, scale As Vector2, font As GenericFont = Nothing, rotation As Single = 0, origin As Vector2 = Nothing, effects As SpriteEffects = SpriteEffects.None) As Token
  overload: MLEM.Formatting.TokenizedString.GetTokenUnderPos*
  nameWithType.vb: TokenizedString.GetTokenUnderPos(Vector2, Vector2, Vector2, GenericFont, Single, Vector2, SpriteEffects)
  fullName.vb: MLEM.Formatting.TokenizedString.GetTokenUnderPos(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects)
  name.vb: GetTokenUnderPos(Vector2, Vector2, Vector2, GenericFont, Single, Vector2, SpriteEffects)
- uid: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,System.Single,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, float, float, float, Vector2, SpriteEffects, int?, int?)
  nameWithType: TokenizedString.Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, float, float, float, Vector2, SpriteEffects, int?, int?)
  fullName: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, float, float, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, int?, int?)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 190
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void Draw(GameTime time, SpriteBatch batch, Vector2 pos, GenericFont font, Color color, float scale, float depth, float rotation = 0, Vector2 origin = default, SpriteEffects effects = SpriteEffects.None, int? startIndex = null, int? endIndex = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
    - id: font
      type: MLEM.Font.GenericFont
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: scale
      type: System.Single
      description: A scaling of this string.
    - id: depth
      type: System.Single
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: startIndex
      type: System.Nullable{System.Int32}
    - id: endIndex
      type: System.Nullable{System.Int32}
    content.vb: Public Sub Draw(time As GameTime, batch As SpriteBatch, pos As Vector2, font As GenericFont, color As Color, scale As Single, depth As Single, rotation As Single = 0, origin As Vector2 = Nothing, effects As SpriteEffects = SpriteEffects.None, startIndex As Integer? = Nothing, endIndex As Integer? = Nothing)
  overload: MLEM.Formatting.TokenizedString.Draw*
  nameWithType.vb: TokenizedString.Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Single, Single, Single, Vector2, SpriteEffects, Integer?, Integer?)
  fullName.vb: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Single, Single, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Integer?, Integer?)
  name.vb: Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Single, Single, Single, Vector2, SpriteEffects, Integer?, Integer?)
- uid: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  commentId: M:MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  id: Draw(Microsoft.Xna.Framework.GameTime,Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Vector2,MLEM.Font.GenericFont,Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Vector2,System.Single,System.Single,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Graphics.SpriteEffects,System.Nullable{System.Int32},System.Nullable{System.Int32})
  parent: MLEM.Formatting.TokenizedString
  langs:
  - csharp
  - vb
  name: Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Vector2, float, float, Vector2, SpriteEffects, int?, int?)
  nameWithType: TokenizedString.Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Vector2, float, float, Vector2, SpriteEffects, int?, int?)
  fullName: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, float, float, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, int?, int?)
  type: Method
  source:
    remote:
      path: MLEM/Formatting/TokenizedString.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM/Formatting/TokenizedString.cs
    startLine: 195
  assemblies:
  - MLEM
  namespace: MLEM.Formatting
  summary: Submit a text string of sprites for drawing in the current batch.
  example: []
  syntax:
    content: public void Draw(GameTime time, SpriteBatch batch, Vector2 pos, GenericFont font, Color color, Vector2 scale, float depth, float rotation = 0, Vector2 origin = default, SpriteEffects effects = SpriteEffects.None, int? startIndex = null, int? endIndex = null)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
    - id: font
      type: MLEM.Font.GenericFont
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: A color mask.
    - id: scale
      type: Microsoft.Xna.Framework.Vector2
      description: A scaling of this string.
    - id: depth
      type: System.Single
    - id: rotation
      type: System.Single
      description: A rotation of this string.
    - id: origin
      type: Microsoft.Xna.Framework.Vector2
      description: Center of the rotation. 0,0 by default.
    - id: effects
      type: Microsoft.Xna.Framework.Graphics.SpriteEffects
      description: Modificators for drawing. Can be combined.
    - id: startIndex
      type: System.Nullable{System.Int32}
    - id: endIndex
      type: System.Nullable{System.Int32}
    content.vb: Public Sub Draw(time As GameTime, batch As SpriteBatch, pos As Vector2, font As GenericFont, color As Color, scale As Vector2, depth As Single, rotation As Single = 0, origin As Vector2 = Nothing, effects As SpriteEffects = SpriteEffects.None, startIndex As Integer? = Nothing, endIndex As Integer? = Nothing)
  overload: MLEM.Formatting.TokenizedString.Draw*
  nameWithType.vb: TokenizedString.Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Vector2, Single, Single, Vector2, SpriteEffects, Integer?, Integer?)
  fullName.vb: MLEM.Formatting.TokenizedString.Draw(Microsoft.Xna.Framework.GameTime, Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Vector2, MLEM.Font.GenericFont, Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Vector2, Single, Single, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Graphics.SpriteEffects, Integer?, Integer?)
  name.vb: Draw(GameTime, SpriteBatch, Vector2, GenericFont, Color, Vector2, Single, Single, Vector2, SpriteEffects, Integer?, Integer?)
references:
- uid: MLEM.Formatting.TextFormatter
  commentId: T:MLEM.Formatting.TextFormatter
  parent: MLEM.Formatting
  href: MLEM.Formatting.TextFormatter.html
  name: TextFormatter
  nameWithType: TextFormatter
  fullName: MLEM.Formatting.TextFormatter
- uid: MLEM.Formatting
  commentId: N:MLEM.Formatting
  href: MLEM.html
  name: MLEM.Formatting
  nameWithType: MLEM.Formatting
  fullName: MLEM.Formatting
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Formatting
    name: Formatting
    href: MLEM.Formatting.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.GenericDataHolder.html
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.IGenericDataHolder.html
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,{T})
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  parent: MLEM.Misc.GenericDataHolder
  definition: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Misc.GenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.GenericDataHolder.GetDataKeys
  parent: MLEM.Misc.GenericDataHolder
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  name: GetDataKeys()
  nameWithType: GenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.GenericDataHolder.GetDataKeys()
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetDataKeys
    name: GetDataKeys
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetDataKeys
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  name: SetData<T>(string, T)
  nameWithType: GenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.GenericDataHolder.SetData<T>(string, T)
  nameWithType.vb: GenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.GenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.SetData``1(System.String,``0)
    name: SetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_SetData__1_System_String___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Formatting.TokenizedString.RawString
  commentId: F:MLEM.Formatting.TokenizedString.RawString
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_RawString
  name: RawString
  nameWithType: TokenizedString.RawString
  fullName: MLEM.Formatting.TokenizedString.RawString
- uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
  isExternal: true
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  name: Split(GenericFont, float, float, TextAlignment)
  nameWithType: TokenizedString.Split(GenericFont, float, float, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, float, float, MLEM.Formatting.TextAlignment)
  nameWithType.vb: TokenizedString.Split(GenericFont, Single, Single, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont, Single, Single, MLEM.Formatting.TextAlignment)
  name.vb: Split(GenericFont, Single, Single, TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
    name: Split
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TokenizedString.Split(MLEM.Font.GenericFont,System.Single,System.Single,MLEM.Formatting.TextAlignment)
    name: Split
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  commentId: M:MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
  isExternal: true
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  name: Truncate(GenericFont, float, float, string, TextAlignment)
  nameWithType: TokenizedString.Truncate(GenericFont, float, float, string, TextAlignment)
  fullName: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, float, float, string, MLEM.Formatting.TextAlignment)
  nameWithType.vb: TokenizedString.Truncate(GenericFont, Single, Single, String, TextAlignment)
  fullName.vb: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont, Single, Single, String, MLEM.Formatting.TextAlignment)
  name.vb: Truncate(GenericFont, Single, Single, String, TextAlignment)
  spec.csharp:
  - uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
    name: Truncate
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
  spec.vb:
  - uid: MLEM.Formatting.TokenizedString.Truncate(MLEM.Font.GenericFont,System.Single,System.Single,System.String,MLEM.Formatting.TextAlignment)
    name: Truncate
    href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  - name: (
  - uid: MLEM.Font.GenericFont
    name: GenericFont
    href: MLEM.Font.GenericFont.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: MLEM.Formatting.TextAlignment
    name: TextAlignment
    href: MLEM.Formatting.TextAlignment.html
  - name: )
- uid: MLEM.Formatting.TokenizedString.DisplayString*
  commentId: Overload:MLEM.Formatting.TokenizedString.DisplayString
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_DisplayString
  name: DisplayString
  nameWithType: TokenizedString.DisplayString
  fullName: MLEM.Formatting.TokenizedString.DisplayString
- uid: MLEM.Formatting.Token[]
  isExternal: true
  href: MLEM.Formatting.Token.html
  name: Token[]
  nameWithType: Token[]
  fullName: MLEM.Formatting.Token[]
  nameWithType.vb: Token()
  fullName.vb: MLEM.Formatting.Token()
  name.vb: Token()
  spec.csharp:
  - uid: MLEM.Formatting.Token
    name: Token
    href: MLEM.Formatting.Token.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Formatting.Token
    name: Token
    href: MLEM.Formatting.Token.html
  - name: (
  - name: )
- uid: MLEM.Formatting.Token.AppliedCodes
  commentId: F:MLEM.Formatting.Token.AppliedCodes
  href: MLEM.Formatting.Token.html#MLEM_Formatting_Token_AppliedCodes
  name: AppliedCodes
  nameWithType: Token.AppliedCodes
  fullName: MLEM.Formatting.Token.AppliedCodes
- uid: MLEM.Formatting.Codes.Code[]
  isExternal: true
  href: MLEM.Formatting.Codes.Code.html
  name: Code[]
  nameWithType: Code[]
  fullName: MLEM.Formatting.Codes.Code[]
  nameWithType.vb: Code()
  fullName.vb: MLEM.Formatting.Codes.Code()
  name.vb: Code()
  spec.csharp:
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Formatting.Codes.Code
    name: Code
    href: MLEM.Formatting.Codes.Code.html
  - name: (
  - name: )
- uid: MLEM.Formatting.TokenizedString.DisplayString
  commentId: P:MLEM.Formatting.TokenizedString.DisplayString
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_DisplayString
  name: DisplayString
  nameWithType: TokenizedString.DisplayString
  fullName: MLEM.Formatting.TokenizedString.DisplayString
- uid: MLEM.Formatting.TokenizedString.Split*
  commentId: Overload:MLEM.Formatting.TokenizedString.Split
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Split_MLEM_Font_GenericFont_System_Single_System_Single_MLEM_Formatting_TextAlignment_
  name: Split
  nameWithType: TokenizedString.Split
  fullName: MLEM.Formatting.TokenizedString.Split
- uid: MLEM.Font.GenericFont
  commentId: T:MLEM.Font.GenericFont
  parent: MLEM.Font
  href: MLEM.Font.GenericFont.html
  name: GenericFont
  nameWithType: GenericFont
  fullName: MLEM.Font.GenericFont
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Formatting.TextAlignment
  commentId: T:MLEM.Formatting.TextAlignment
  parent: MLEM.Formatting
  href: MLEM.Formatting.TextAlignment.html
  name: TextAlignment
  nameWithType: TextAlignment
  fullName: MLEM.Formatting.TextAlignment
- uid: MLEM.Font
  commentId: N:MLEM.Font
  href: MLEM.html
  name: MLEM.Font
  nameWithType: MLEM.Font
  fullName: MLEM.Font
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
- uid: MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  commentId: M:MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
  parent: MLEM.Font.GenericFont
  isExternal: true
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_TruncateString_System_String_System_Single_System_Single_System_Boolean_System_String_
  name: TruncateString(string, float, float, bool, string)
  nameWithType: GenericFont.TruncateString(string, float, float, bool, string)
  fullName: MLEM.Font.GenericFont.TruncateString(string, float, float, bool, string)
  nameWithType.vb: GenericFont.TruncateString(String, Single, Single, Boolean, String)
  fullName.vb: MLEM.Font.GenericFont.TruncateString(String, Single, Single, Boolean, String)
  name.vb: TruncateString(String, Single, Single, Boolean, String)
  spec.csharp:
  - uid: MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
    name: TruncateString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_TruncateString_System_String_System_Single_System_Single_System_Boolean_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Font.GenericFont.TruncateString(System.String,System.Single,System.Single,System.Boolean,System.String)
    name: TruncateString
    href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_TruncateString_System_String_System_Single_System_Single_System_Boolean_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Formatting.TokenizedString.Truncate*
  commentId: Overload:MLEM.Formatting.TokenizedString.Truncate
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Truncate_MLEM_Font_GenericFont_System_Single_System_Single_System_String_MLEM_Formatting_TextAlignment_
  name: Truncate
  nameWithType: TokenizedString.Truncate
  fullName: MLEM.Formatting.TokenizedString.Truncate
- uid: MLEM.Formatting.TextAlignment.Right
  commentId: F:MLEM.Formatting.TextAlignment.Right
  href: MLEM.Formatting.TextAlignment.html#MLEM_Formatting_TextAlignment_Right
  name: Right
  nameWithType: TextAlignment.Right
  fullName: MLEM.Formatting.TextAlignment.Right
- uid: MLEM.Font.GenericFont.Nbsp
  commentId: F:MLEM.Font.GenericFont.Nbsp
  parent: MLEM.Font.GenericFont
  href: MLEM.Font.GenericFont.html#MLEM_Font_GenericFont_Nbsp
  name: Nbsp
  nameWithType: GenericFont.Nbsp
  fullName: MLEM.Font.GenericFont.Nbsp
- uid: MLEM.Formatting.TokenizedString.Realign*
  commentId: Overload:MLEM.Formatting.TokenizedString.Realign
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Realign_MLEM_Font_GenericFont_MLEM_Formatting_TextAlignment_
  name: Realign
  nameWithType: TokenizedString.Realign
  fullName: MLEM.Formatting.TokenizedString.Realign
- uid: MLEM.Formatting.TokenizedString.Tokens
  commentId: F:MLEM.Formatting.TokenizedString.Tokens
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Tokens
  name: Tokens
  nameWithType: TokenizedString.Tokens
  fullName: MLEM.Formatting.TokenizedString.Tokens
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  href: MLEM.Maths.RectangleF.html
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: MLEM.Formatting.TokenizedString.GetArea*
  commentId: Overload:MLEM.Formatting.TokenizedString.GetArea
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_GetArea_Microsoft_Xna_Framework_Vector2_System_Single_
  name: GetArea
  nameWithType: TokenizedString.GetArea
  fullName: MLEM.Formatting.TokenizedString.GetArea
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  href: MLEM.html
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Formatting.TokenizedString.Update*
  commentId: Overload:MLEM.Formatting.TokenizedString.Update
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Update_Microsoft_Xna_Framework_GameTime_
  name: Update
  nameWithType: TokenizedString.Update
  fullName: MLEM.Formatting.TokenizedString.Update
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: MLEM.Formatting.TokenizedString.GetTokenUnderPos*
  commentId: Overload:MLEM.Formatting.TokenizedString.GetTokenUnderPos
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_GetTokenUnderPos_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_System_Single_MLEM_Font_GenericFont_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_
  name: GetTokenUnderPos
  nameWithType: TokenizedString.GetTokenUnderPos
  fullName: MLEM.Formatting.TokenizedString.GetTokenUnderPos
- uid: Microsoft.Xna.Framework.Graphics.SpriteEffects
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteEffects
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteEffects
  nameWithType: SpriteEffects
  fullName: Microsoft.Xna.Framework.Graphics.SpriteEffects
- uid: MLEM.Formatting.Token
  commentId: T:MLEM.Formatting.Token
  parent: MLEM.Formatting
  href: MLEM.Formatting.Token.html
  name: Token
  nameWithType: Token
  fullName: MLEM.Formatting.Token
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Formatting.TokenizedString.Draw*
  commentId: Overload:MLEM.Formatting.TokenizedString.Draw
  href: MLEM.Formatting.TokenizedString.html#MLEM_Formatting_TokenizedString_Draw_Microsoft_Xna_Framework_GameTime_Microsoft_Xna_Framework_Graphics_SpriteBatch_Microsoft_Xna_Framework_Vector2_MLEM_Font_GenericFont_Microsoft_Xna_Framework_Color_System_Single_System_Single_System_Single_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Graphics_SpriteEffects_System_Nullable_System_Int32__System_Nullable_System_Int32__
  name: Draw
  nameWithType: TokenizedString.Draw
  fullName: MLEM.Formatting.TokenizedString.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
