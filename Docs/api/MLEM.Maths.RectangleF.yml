### YamlMime:ManagedReference
items:
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  id: RectangleF
  parent: MLEM.Maths
  children:
  - MLEM.Maths.RectangleF.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  - MLEM.Maths.RectangleF.Bottom
  - MLEM.Maths.RectangleF.Center
  - MLEM.Maths.RectangleF.Contains(MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.Contains(Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.RectangleF.Contains(System.Single,System.Single)
  - MLEM.Maths.RectangleF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  - MLEM.Maths.RectangleF.Distance(MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.DistanceSquared(MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.Empty
  - MLEM.Maths.RectangleF.Equals(MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.Equals(System.Object)
  - MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  - MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.RectangleF.GetHashCode
  - MLEM.Maths.RectangleF.Height
  - MLEM.Maths.RectangleF.Inflate(System.Single,System.Single)
  - MLEM.Maths.RectangleF.Intersect(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.Intersects(MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.IsEmpty
  - MLEM.Maths.RectangleF.Left
  - MLEM.Maths.RectangleF.Location
  - MLEM.Maths.RectangleF.Offset(Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.RectangleF.Offset(System.Single,System.Single)
  - MLEM.Maths.RectangleF.Right
  - MLEM.Maths.RectangleF.Size
  - MLEM.Maths.RectangleF.ToString
  - MLEM.Maths.RectangleF.Top
  - MLEM.Maths.RectangleF.Union(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.Width
  - MLEM.Maths.RectangleF.X
  - MLEM.Maths.RectangleF.Y
  - MLEM.Maths.RectangleF.op_Equality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  - MLEM.Maths.RectangleF.op_Explicit(MLEM.Maths.RectangleF)~Microsoft.Xna.Framework.Rectangle
  - MLEM.Maths.RectangleF.op_Explicit(Microsoft.Xna.Framework.Rectangle)~MLEM.Maths.RectangleF
  - MLEM.Maths.RectangleF.op_Inequality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  langs:
  - csharp
  - vb
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
  type: Struct
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RectangleF
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Represents a float-based version of <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataContract]

      public struct RectangleF : IEquatable<RectangleF>
    content.vb: >-
      <DataContract>

      Public Structure RectangleF Implements IEquatable(Of RectangleF)
  implements:
  - System.IEquatable{MLEM.Maths.RectangleF}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.GetPoints(System.Single,System.Boolean)
  - MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Vector2)
  - MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  - MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.Padding)
  - MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Shrink(Microsoft.Xna.Framework.Vector2)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.RectangleF.Empty
  commentId: P:MLEM.Maths.RectangleF.Empty
  id: Empty
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: MLEM.Maths.RectangleF.Empty
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Empty
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 14
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The empty rectangle, with an x, y, width and height of 0.
  example: []
  syntax:
    content: public static RectangleF Empty { get; }
    parameters: []
    return:
      type: MLEM.Maths.RectangleF
    content.vb: Public Shared ReadOnly Property Empty As RectangleF
  overload: MLEM.Maths.RectangleF.Empty*
- uid: MLEM.Maths.RectangleF.X
  commentId: F:MLEM.Maths.RectangleF.X
  id: X
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: X
  nameWithType: RectangleF.X
  fullName: MLEM.Maths.RectangleF.X
  type: Field
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: X
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 20
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The x position of the top left corner of this rectangle.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float X
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public X As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.RectangleF.Y
  commentId: F:MLEM.Maths.RectangleF.Y
  id: Y
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Y
  nameWithType: RectangleF.Y
  fullName: MLEM.Maths.RectangleF.Y
  type: Field
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Y
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 25
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The y position of the top left corner of this rectangle.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Y
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Y As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.RectangleF.Width
  commentId: F:MLEM.Maths.RectangleF.Width
  id: Width
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: RectangleF.Width
  fullName: MLEM.Maths.RectangleF.Width
  type: Field
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Width
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 30
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The width of this rectangle.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Width
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Width As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.RectangleF.Height
  commentId: F:MLEM.Maths.RectangleF.Height
  id: Height
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: RectangleF.Height
  fullName: MLEM.Maths.RectangleF.Height
  type: Field
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Height
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 35
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The height of this rectangle.
  example: []
  syntax:
    content: >-
      [DataMember]

      public float Height
    return:
      type: System.Single
    content.vb: >-
      <DataMember>

      Public Height As Single
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: MLEM.Maths.RectangleF.Left
  commentId: P:MLEM.Maths.RectangleF.Left
  id: Left
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: RectangleF.Left
  fullName: MLEM.Maths.RectangleF.Left
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Left
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 38
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The x position of the top left corner of this rectangle.
  example: []
  syntax:
    content: public float Left { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Left As Single
  overload: MLEM.Maths.RectangleF.Left*
- uid: MLEM.Maths.RectangleF.Right
  commentId: P:MLEM.Maths.RectangleF.Right
  id: Right
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: RectangleF.Right
  fullName: MLEM.Maths.RectangleF.Right
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Right
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 42
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The x position of the bottom right corner of this rectangle.
  example: []
  syntax:
    content: public float Right { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Right As Single
  overload: MLEM.Maths.RectangleF.Right*
- uid: MLEM.Maths.RectangleF.Top
  commentId: P:MLEM.Maths.RectangleF.Top
  id: Top
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Top
  nameWithType: RectangleF.Top
  fullName: MLEM.Maths.RectangleF.Top
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Top
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The y position of the top left corner of this rectangle.
  example: []
  syntax:
    content: public float Top { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Top As Single
  overload: MLEM.Maths.RectangleF.Top*
- uid: MLEM.Maths.RectangleF.Bottom
  commentId: P:MLEM.Maths.RectangleF.Bottom
  id: Bottom
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: MLEM.Maths.RectangleF.Bottom
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Bottom
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 48
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The y position of the bottom right corner of this rectangle.
  example: []
  syntax:
    content: public float Bottom { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Bottom As Single
  overload: MLEM.Maths.RectangleF.Bottom*
- uid: MLEM.Maths.RectangleF.IsEmpty
  commentId: P:MLEM.Maths.RectangleF.IsEmpty
  id: IsEmpty
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: MLEM.Maths.RectangleF.IsEmpty
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsEmpty
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 53
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    A boolean that is true if this rectangle is empty.

    A rectangle is considered empty if the width or height is 0.
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: MLEM.Maths.RectangleF.IsEmpty*
- uid: MLEM.Maths.RectangleF.Location
  commentId: P:MLEM.Maths.RectangleF.Location
  id: Location
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: RectangleF.Location
  fullName: MLEM.Maths.RectangleF.Location
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Location
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 58
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The top left corner of this rectangle
  example: []
  syntax:
    content: public Vector2 Location { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Location As Vector2
  overload: MLEM.Maths.RectangleF.Location*
- uid: MLEM.Maths.RectangleF.Size
  commentId: P:MLEM.Maths.RectangleF.Size
  id: Size
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: RectangleF.Size
  fullName: MLEM.Maths.RectangleF.Size
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Size
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 68
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The size, that is, the width and height of this rectangle.
  example: []
  syntax:
    content: public Vector2 Size { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Size As Vector2
  overload: MLEM.Maths.RectangleF.Size*
- uid: MLEM.Maths.RectangleF.Center
  commentId: P:MLEM.Maths.RectangleF.Center
  id: Center
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Center
  nameWithType: RectangleF.Center
  fullName: MLEM.Maths.RectangleF.Center
  type: Property
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Center
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 78
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: The center of this rectangle, based on the top left corner and the size.
  example: []
  syntax:
    content: public Vector2 Center { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property Center As Vector2
  overload: MLEM.Maths.RectangleF.Center*
- uid: MLEM.Maths.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:MLEM.Maths.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: RectangleF(float, float, float, float)
  nameWithType: RectangleF.RectangleF(float, float, float, float)
  fullName: MLEM.Maths.RectangleF.RectangleF(float, float, float, float)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 87
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new rectangle with the specified location and size
  example: []
  syntax:
    content: public RectangleF(float x, float y, float width, float height)
    parameters:
    - id: x
      type: System.Single
      description: The x coordinate of the top left corner of the rectangle
    - id: y
      type: System.Single
      description: The y coordinate of the top left corner of the rectangle
    - id: width
      type: System.Single
      description: The width of the rectangle
    - id: height
      type: System.Single
      description: The height of the rectangle
    content.vb: Public Sub New(x As Single, y As Single, width As Single, height As Single)
  overload: MLEM.Maths.RectangleF.#ctor*
  nameWithType.vb: RectangleF.New(Single, Single, Single, Single)
  fullName.vb: MLEM.Maths.RectangleF.New(Single, Single, Single, Single)
  name.vb: New(Single, Single, Single, Single)
- uid: MLEM.Maths.RectangleF.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.RectangleF.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: '#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)'
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: RectangleF(Vector2, Vector2)
  nameWithType: RectangleF.RectangleF(Vector2, Vector2)
  fullName: MLEM.Maths.RectangleF.RectangleF(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Constructor
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 99
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new rectangle with the specified location and size vectors
  example: []
  syntax:
    content: public RectangleF(Vector2 location, Vector2 size)
    parameters:
    - id: location
      type: Microsoft.Xna.Framework.Vector2
      description: The top left corner of the rectangle
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the rectangle, where x represents width and the y represents height
    content.vb: Public Sub New(location As Vector2, size As Vector2)
  overload: MLEM.Maths.RectangleF.#ctor*
  nameWithType.vb: RectangleF.New(Vector2, Vector2)
  fullName.vb: MLEM.Maths.RectangleF.New(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  name.vb: New(Vector2, Vector2)
- uid: MLEM.Maths.RectangleF.Contains(System.Single,System.Single)
  commentId: M:MLEM.Maths.RectangleF.Contains(System.Single,System.Single)
  id: Contains(System.Single,System.Single)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(float, float)
  nameWithType: RectangleF.Contains(float, float)
  fullName: MLEM.Maths.RectangleF.Contains(float, float)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Contains
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 107
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Gets whether or not the provided coordinates lie within the bounds of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Contains(float x, float y)
    parameters:
    - id: x
      type: System.Single
      description: The x coordinate of the point to check for containment.
    - id: y
      type: System.Single
      description: The y coordinate of the point to check for containment.
    return:
      type: System.Boolean
      description: <code>true</code> if the provided coordinates lie inside this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Contains(x As Single, y As Single) As Boolean
  overload: MLEM.Maths.RectangleF.Contains*
  nameWithType.vb: RectangleF.Contains(Single, Single)
  fullName.vb: MLEM.Maths.RectangleF.Contains(Single, Single)
  name.vb: Contains(Single, Single)
- uid: MLEM.Maths.RectangleF.Contains(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.RectangleF.Contains(Microsoft.Xna.Framework.Vector2)
  id: Contains(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(Vector2)
  nameWithType: RectangleF.Contains(Vector2)
  fullName: MLEM.Maths.RectangleF.Contains(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Contains
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 112
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Gets whether or not the provided <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> lies within the bounds of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Contains(Vector2 value)
    parameters:
    - id: value
      type: Microsoft.Xna.Framework.Vector2
      description: The coordinates to check for inclusion in this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the provided <xref href="Microsoft.Xna.Framework.Point" data-throw-if-not-resolved="false"></xref> lies inside this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Contains(value As Vector2) As Boolean
  overload: MLEM.Maths.RectangleF.Contains*
- uid: MLEM.Maths.RectangleF.Contains(MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Contains(MLEM.Maths.RectangleF)
  id: Contains(MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Contains(RectangleF)
  nameWithType: RectangleF.Contains(RectangleF)
  fullName: MLEM.Maths.RectangleF.Contains(MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Contains
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 117
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Gets whether or not the provided <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> lies within the bounds of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool Contains(RectangleF value)
    parameters:
    - id: value
      type: MLEM.Maths.RectangleF
      description: The <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> to check for inclusion in this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: <code>true</code> if the provided <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>'s bounds lie entirely inside this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise.
    content.vb: Public Function Contains(value As RectangleF) As Boolean
  overload: MLEM.Maths.RectangleF.Contains*
- uid: MLEM.Maths.RectangleF.Equals(System.Object)
  commentId: M:MLEM.Maths.RectangleF.Equals(System.Object)
  id: Equals(System.Object)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: RectangleF.Equals(object)
  fullName: MLEM.Maths.RectangleF.Equals(object)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 124
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether this instance and a specified object are equal.
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare with the current instance.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if <code class="paramref">obj</code> and this instance are the same type and represent the same value; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: MLEM.Maths.RectangleF.Equals*
  nameWithType.vb: RectangleF.Equals(Object)
  fullName.vb: MLEM.Maths.RectangleF.Equals(Object)
  name.vb: Equals(Object)
- uid: MLEM.Maths.RectangleF.Equals(MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Equals(MLEM.Maths.RectangleF)
  id: Equals(MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Equals(RectangleF)
  nameWithType: RectangleF.Equals(RectangleF)
  fullName: MLEM.Maths.RectangleF.Equals(MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Equals
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 131
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public bool Equals(RectangleF other)
    parameters:
    - id: other
      type: MLEM.Maths.RectangleF
      description: An object to compare with this object.
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Function Equals(other As RectangleF) As Boolean
  overload: MLEM.Maths.RectangleF.Equals*
  implements:
  - System.IEquatable{MLEM.Maths.RectangleF}.Equals(MLEM.Maths.RectangleF)
- uid: MLEM.Maths.RectangleF.GetHashCode
  commentId: M:MLEM.Maths.RectangleF.GetHashCode
  id: GetHashCode
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: RectangleF.GetHashCode()
  fullName: MLEM.Maths.RectangleF.GetHashCode()
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetHashCode
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 137
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Returns the hash code for this instance.
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A 32-bit signed integer that is the hash code for this instance.
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: MLEM.Maths.RectangleF.GetHashCode*
- uid: MLEM.Maths.RectangleF.Inflate(System.Single,System.Single)
  commentId: M:MLEM.Maths.RectangleF.Inflate(System.Single,System.Single)
  id: Inflate(System.Single,System.Single)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Inflate(float, float)
  nameWithType: RectangleF.Inflate(float, float)
  fullName: MLEM.Maths.RectangleF.Inflate(float, float)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Inflate
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 142
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Adjusts the edges of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> by specified horizontal and vertical amounts.
  example: []
  syntax:
    content: public void Inflate(float horizontalAmount, float verticalAmount)
    parameters:
    - id: horizontalAmount
      type: System.Single
      description: Value to adjust the left and right edges.
    - id: verticalAmount
      type: System.Single
      description: Value to adjust the top and bottom edges.
    content.vb: Public Sub Inflate(horizontalAmount As Single, verticalAmount As Single)
  overload: MLEM.Maths.RectangleF.Inflate*
  nameWithType.vb: RectangleF.Inflate(Single, Single)
  fullName.vb: MLEM.Maths.RectangleF.Inflate(Single, Single)
  name.vb: Inflate(Single, Single)
- uid: MLEM.Maths.RectangleF.Intersects(MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Intersects(MLEM.Maths.RectangleF)
  id: Intersects(MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Intersects(RectangleF)
  nameWithType: RectangleF.Intersects(RectangleF)
  fullName: MLEM.Maths.RectangleF.Intersects(MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Intersects
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 150
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Gets whether or not the other <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> intersects with this rectangle.
  example: []
  syntax:
    content: public bool Intersects(RectangleF value)
    parameters:
    - id: value
      type: MLEM.Maths.RectangleF
      description: The other rectangle for testing.
    return:
      type: System.Boolean
      description: <code>true</code> if other <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> intersects with this rectangle; <code>false</code> otherwise.
    content.vb: Public Function Intersects(value As RectangleF) As Boolean
  overload: MLEM.Maths.RectangleF.Intersects*
- uid: MLEM.Maths.RectangleF.Offset(System.Single,System.Single)
  commentId: M:MLEM.Maths.RectangleF.Offset(System.Single,System.Single)
  id: Offset(System.Single,System.Single)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(float, float)
  nameWithType: RectangleF.Offset(float, float)
  fullName: MLEM.Maths.RectangleF.Offset(float, float)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Offset
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 155
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Changes the <xref href="Microsoft.Xna.Framework.Rectangle.Location" data-throw-if-not-resolved="false"></xref> of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Offset(float offsetX, float offsetY)
    parameters:
    - id: offsetX
      type: System.Single
      description: The x coordinate to add to this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    - id: offsetY
      type: System.Single
      description: The y coordinate to add to this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Offset(offsetX As Single, offsetY As Single)
  overload: MLEM.Maths.RectangleF.Offset*
  nameWithType.vb: RectangleF.Offset(Single, Single)
  fullName.vb: MLEM.Maths.RectangleF.Offset(Single, Single)
  name.vb: Offset(Single, Single)
- uid: MLEM.Maths.RectangleF.Offset(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.RectangleF.Offset(Microsoft.Xna.Framework.Vector2)
  id: Offset(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Offset(Vector2)
  nameWithType: RectangleF.Offset(Vector2)
  fullName: MLEM.Maths.RectangleF.Offset(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Offset
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 161
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Changes the <xref href="Microsoft.Xna.Framework.Rectangle.Location" data-throw-if-not-resolved="false"></xref> of this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Offset(Vector2 amount)
    parameters:
    - id: amount
      type: Microsoft.Xna.Framework.Vector2
      description: The x and y components to add to this <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Offset(amount As Vector2)
  overload: MLEM.Maths.RectangleF.Offset*
- uid: MLEM.Maths.RectangleF.DistanceSquared(MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.DistanceSquared(MLEM.Maths.RectangleF)
  id: DistanceSquared(MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: DistanceSquared(RectangleF)
  nameWithType: RectangleF.DistanceSquared(RectangleF)
  fullName: MLEM.Maths.RectangleF.DistanceSquared(MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DistanceSquared
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 172
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Calculates the suqared distance between this rectangle and the <code class="paramref">value</code>.

    The returned value is the smallest squared distance between any two edges or corners of the two rectangles.
  example: []
  syntax:
    content: public float DistanceSquared(RectangleF value)
    parameters:
    - id: value
      type: MLEM.Maths.RectangleF
      description: The rectangle to calculate the squared distance to.
    return:
      type: System.Single
      description: The squared distance between the two rectangles.
    content.vb: Public Function DistanceSquared(value As RectangleF) As Single
  overload: MLEM.Maths.RectangleF.DistanceSquared*
- uid: MLEM.Maths.RectangleF.Distance(MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Distance(MLEM.Maths.RectangleF)
  id: Distance(MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Distance(RectangleF)
  nameWithType: RectangleF.Distance(RectangleF)
  fullName: MLEM.Maths.RectangleF.Distance(MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Distance
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 206
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Calculates the distance between this rectangle and the <code class="paramref">value</code>.

    The returned value is the smallest distance between any two edges or corners of the two rectangles.
  example: []
  syntax:
    content: public float Distance(RectangleF value)
    parameters:
    - id: value
      type: MLEM.Maths.RectangleF
      description: The rectangle to calculate the distance to.
    return:
      type: System.Single
      description: The distance between the two rectangles.
    content.vb: Public Function Distance(value As RectangleF) As Single
  overload: MLEM.Maths.RectangleF.Distance*
- uid: MLEM.Maths.RectangleF.ToString
  commentId: M:MLEM.Maths.RectangleF.ToString
  id: ToString
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RectangleF.ToString()
  fullName: MLEM.Maths.RectangleF.ToString()
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToString
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 212
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Returns a string that represents the current object.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string that represents the current object.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: MLEM.Maths.RectangleF.ToString*
- uid: MLEM.Maths.RectangleF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  commentId: M:MLEM.Maths.RectangleF.Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  id: Deconstruct(System.Single@,System.Single@,System.Single@,System.Single@)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Deconstruct(out float, out float, out float, out float)
  nameWithType: RectangleF.Deconstruct(out float, out float, out float, out float)
  fullName: MLEM.Maths.RectangleF.Deconstruct(out float, out float, out float, out float)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Deconstruct
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 223
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Deconstruction method for <xref href="MLEM.Maths.RectangleF" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void Deconstruct(out float x, out float y, out float width, out float height)
    parameters:
    - id: x
      type: System.Single
      description: ''
    - id: y
      type: System.Single
      description: ''
    - id: width
      type: System.Single
      description: ''
    - id: height
      type: System.Single
      description: ''
    content.vb: Public Sub Deconstruct(x As Single, y As Single, width As Single, height As Single)
  overload: MLEM.Maths.RectangleF.Deconstruct*
  nameWithType.vb: RectangleF.Deconstruct(Single, Single, Single, Single)
  fullName.vb: MLEM.Maths.RectangleF.Deconstruct(Single, Single, Single, Single)
  name.vb: Deconstruct(Single, Single, Single, Single)
- uid: MLEM.Maths.RectangleF.op_Explicit(MLEM.Maths.RectangleF)~Microsoft.Xna.Framework.Rectangle
  commentId: M:MLEM.Maths.RectangleF.op_Explicit(MLEM.Maths.RectangleF)~Microsoft.Xna.Framework.Rectangle
  id: op_Explicit(MLEM.Maths.RectangleF)~Microsoft.Xna.Framework.Rectangle
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: explicit operator Rectangle(RectangleF)
  nameWithType: RectangleF.explicit operator Rectangle(RectangleF)
  fullName: MLEM.Maths.RectangleF.explicit operator Microsoft.Xna.Framework.Rectangle(MLEM.Maths.RectangleF)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Explicit
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 235
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Converts a float-based rectangle to an int-based rectangle, flooring each value in the process.
  example: []
  syntax:
    content: public static explicit operator Rectangle(RectangleF rect)
    parameters:
    - id: rect
      type: MLEM.Maths.RectangleF
      description: The rectangle to convert
    return:
      type: Microsoft.Xna.Framework.Rectangle
      description: The resulting rectangle
    content.vb: Public Shared Narrowing Operator CType(rect As RectangleF) As Rectangle
  overload: MLEM.Maths.RectangleF.op_Explicit*
  nameWithType.vb: RectangleF.CType(RectangleF)
  fullName.vb: MLEM.Maths.RectangleF.CType(MLEM.Maths.RectangleF)
  name.vb: CType(RectangleF)
- uid: MLEM.Maths.RectangleF.Union(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Union(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  id: Union(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Union(RectangleF, RectangleF)
  nameWithType: RectangleF.Union(RectangleF, RectangleF)
  fullName: MLEM.Maths.RectangleF.Union(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Union
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 240
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> that completely contains two other rectangles.
  example: []
  syntax:
    content: public static RectangleF Union(RectangleF value1, RectangleF value2)
    parameters:
    - id: value1
      type: MLEM.Maths.RectangleF
      description: The first <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: MLEM.Maths.RectangleF
      description: The second <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    return:
      type: MLEM.Maths.RectangleF
      description: The union of the two rectangles.
    content.vb: Public Shared Function Union(value1 As RectangleF, value2 As RectangleF) As RectangleF
  overload: MLEM.Maths.RectangleF.Union*
- uid: MLEM.Maths.RectangleF.Intersect(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.Intersect(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  id: Intersect(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: Intersect(RectangleF, RectangleF)
  nameWithType: RectangleF.Intersect(RectangleF, RectangleF)
  fullName: MLEM.Maths.RectangleF.Intersect(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Intersect
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 247
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Creates a new <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref> that contains overlapping region of two other rectangles.
  example: []
  syntax:
    content: public static RectangleF Intersect(RectangleF value1, RectangleF value2)
    parameters:
    - id: value1
      type: MLEM.Maths.RectangleF
      description: The first <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    - id: value2
      type: MLEM.Maths.RectangleF
      description: The second <xref href="Microsoft.Xna.Framework.Rectangle" data-throw-if-not-resolved="false"></xref>.
    return:
      type: MLEM.Maths.RectangleF
      description: Overlapping region of the two rectangles.
    content.vb: Public Shared Function Intersect(value1 As RectangleF, value2 As RectangleF) As RectangleF
  overload: MLEM.Maths.RectangleF.Intersect*
- uid: MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: FromCorners(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: FromCorners(Vector2, Vector2)
  nameWithType: RectangleF.FromCorners(Vector2, Vector2)
  fullName: MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: FromCorners
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 266
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Creates a new rectangle based on two corners that form a bounding box.

    The resulting rectangle will encompass both corners as well as all of the space between them.
  example: []
  syntax:
    content: public static RectangleF FromCorners(Vector2 corner1, Vector2 corner2)
    parameters:
    - id: corner1
      type: Microsoft.Xna.Framework.Vector2
      description: The first corner to use
    - id: corner2
      type: Microsoft.Xna.Framework.Vector2
      description: The second corner to use
    return:
      type: MLEM.Maths.RectangleF
      description: The created rectangle.
    content.vb: Public Shared Function FromCorners(corner1 As Vector2, corner2 As Vector2) As RectangleF
  overload: MLEM.Maths.RectangleF.FromCorners*
- uid: MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  commentId: M:MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  id: FromCorners(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: FromCorners(Point, Point)
  nameWithType: RectangleF.FromCorners(Point, Point)
  fullName: MLEM.Maths.RectangleF.FromCorners(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
  type: Method
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: FromCorners
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 281
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: >-
    Creates a new rectangle based on two corners that form a bounding box.

    The resulting rectangle will encompass both corners as well as all of the space between them.
  example: []
  syntax:
    content: public static RectangleF FromCorners(Point corner1, Point corner2)
    parameters:
    - id: corner1
      type: Microsoft.Xna.Framework.Point
      description: The first corner to use
    - id: corner2
      type: Microsoft.Xna.Framework.Point
      description: The second corner to use
    return:
      type: MLEM.Maths.RectangleF
      description: The created rectangle.
    content.vb: Public Shared Function FromCorners(corner1 As Point, corner2 As Point) As RectangleF
  overload: MLEM.Maths.RectangleF.FromCorners*
- uid: MLEM.Maths.RectangleF.op_Explicit(Microsoft.Xna.Framework.Rectangle)~MLEM.Maths.RectangleF
  commentId: M:MLEM.Maths.RectangleF.op_Explicit(Microsoft.Xna.Framework.Rectangle)~MLEM.Maths.RectangleF
  id: op_Explicit(Microsoft.Xna.Framework.Rectangle)~MLEM.Maths.RectangleF
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: explicit operator RectangleF(Rectangle)
  nameWithType: RectangleF.explicit operator RectangleF(Rectangle)
  fullName: MLEM.Maths.RectangleF.explicit operator MLEM.Maths.RectangleF(Microsoft.Xna.Framework.Rectangle)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Explicit
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 294
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Converts an int-based rectangle to a float-based rectangle.
  example: []
  syntax:
    content: public static explicit operator RectangleF(Rectangle rect)
    parameters:
    - id: rect
      type: Microsoft.Xna.Framework.Rectangle
      description: The rectangle to convert
    return:
      type: MLEM.Maths.RectangleF
      description: The resulting rectangle
    content.vb: Public Shared Narrowing Operator CType(rect As Rectangle) As RectangleF
  overload: MLEM.Maths.RectangleF.op_Explicit*
  nameWithType.vb: RectangleF.CType(Rectangle)
  fullName.vb: MLEM.Maths.RectangleF.CType(Microsoft.Xna.Framework.Rectangle)
  name.vb: CType(Rectangle)
- uid: MLEM.Maths.RectangleF.op_Equality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.op_Equality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  id: op_Equality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: operator ==(RectangleF, RectangleF)
  nameWithType: RectangleF.operator ==(RectangleF, RectangleF)
  fullName: MLEM.Maths.RectangleF.operator ==(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Equality
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 299
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public static bool operator ==(RectangleF a, RectangleF b)
    parameters:
    - id: a
      type: MLEM.Maths.RectangleF
    - id: b
      type: MLEM.Maths.RectangleF
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Operator =(a As RectangleF, b As RectangleF) As Boolean
  overload: MLEM.Maths.RectangleF.op_Equality*
  nameWithType.vb: RectangleF.=(RectangleF, RectangleF)
  fullName.vb: MLEM.Maths.RectangleF.=(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  name.vb: =(RectangleF, RectangleF)
- uid: MLEM.Maths.RectangleF.op_Inequality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  commentId: M:MLEM.Maths.RectangleF.op_Inequality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  id: op_Inequality(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF)
  parent: MLEM.Maths.RectangleF
  langs:
  - csharp
  - vb
  name: operator !=(RectangleF, RectangleF)
  nameWithType: RectangleF.operator !=(RectangleF, RectangleF)
  fullName: MLEM.Maths.RectangleF.operator !=(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  type: Operator
  source:
    remote:
      path: MLEM/Maths/RectangleF.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: op_Inequality
    path: ../MLEM/Maths/RectangleF.cs
    startLine: 304
  assemblies:
  - MLEM
  namespace: MLEM.Maths
  summary: Indicates whether the current object is equal to another object of the same type.
  example: []
  syntax:
    content: public static bool operator !=(RectangleF a, RectangleF b)
    parameters:
    - id: a
      type: MLEM.Maths.RectangleF
    - id: b
      type: MLEM.Maths.RectangleF
    return:
      type: System.Boolean
      description: <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a> if the current object is equal to the <code class="paramref">other</code> parameter; otherwise, <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>.
    content.vb: Public Shared Operator <>(a As RectangleF, b As RectangleF) As Boolean
  overload: MLEM.Maths.RectangleF.op_Inequality*
  nameWithType.vb: RectangleF.<>(RectangleF, RectangleF)
  fullName.vb: MLEM.Maths.RectangleF.<>(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF)
  name.vb: <>(RectangleF, RectangleF)
references:
- uid: Microsoft.Xna.Framework.Rectangle
  commentId: T:Microsoft.Xna.Framework.Rectangle
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: Microsoft.Xna.Framework.Rectangle
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  href: MLEM.html
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
- uid: System.IEquatable{MLEM.Maths.RectangleF}
  commentId: T:System.IEquatable{MLEM.Maths.RectangleF}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<RectangleF>
  nameWithType: IEquatable<RectangleF>
  fullName: System.IEquatable<MLEM.Maths.RectangleF>
  nameWithType.vb: IEquatable(Of RectangleF)
  fullName.vb: System.IEquatable(Of MLEM.Maths.RectangleF)
  name.vb: IEquatable(Of RectangleF)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.GetPoints(System.Single,System.Boolean)
  commentId: M:MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
  parent: MLEM.Maths.NumberExtensions
  definition: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  name: GetPoints(RectangleF, float, bool)
  nameWithType: NumberExtensions.GetPoints(RectangleF, float, bool)
  fullName: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF, float, bool)
  nameWithType.vb: NumberExtensions.GetPoints(RectangleF, Single, Boolean)
  fullName.vb: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF, Single, Boolean)
  name.vb: GetPoints(RectangleF, Single, Boolean)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
    name: GetPoints
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
    name: GetPoints
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.OffsetCopy(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.NumberExtensions
  definition: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  name: OffsetCopy(RectangleF, Vector2)
  nameWithType: NumberExtensions.OffsetCopy(RectangleF, Vector2)
  fullName: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: OffsetCopy
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: OffsetCopy
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  commentId: M:MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  parent: MLEM.Maths.NumberExtensions
  definition: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  name: Penetrate(RectangleF, RectangleF, out Vector2, out float)
  nameWithType: NumberExtensions.Penetrate(RectangleF, RectangleF, out Vector2, out float)
  fullName: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF, out Microsoft.Xna.Framework.Vector2, out float)
  nameWithType.vb: NumberExtensions.Penetrate(RectangleF, RectangleF, Vector2, Single)
  fullName.vb: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: Penetrate(RectangleF, RectangleF, Vector2, Single)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
  parent: MLEM.Maths.NumberExtensions
  definition: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  name: Shrink(RectangleF, Padding)
  nameWithType: NumberExtensions.Shrink(RectangleF, Padding)
  fullName: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF, MLEM.Maths.Padding)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
- uid: MLEM.Maths.RectangleF.MLEM.Maths.NumberExtensions.Shrink(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Maths.NumberExtensions
  definition: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  name: Shrink(RectangleF, Vector2)
  nameWithType: NumberExtensions.Shrink(RectangleF, Vector2)
  fullName: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
  commentId: M:MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
  isExternal: true
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  name: GetPoints(RectangleF, float, bool)
  nameWithType: NumberExtensions.GetPoints(RectangleF, float, bool)
  fullName: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF, float, bool)
  nameWithType.vb: NumberExtensions.GetPoints(RectangleF, Single, Boolean)
  fullName.vb: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF, Single, Boolean)
  name.vb: GetPoints(RectangleF, Single, Boolean)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
    name: GetPoints
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.GetPoints(MLEM.Maths.RectangleF,System.Single,System.Boolean)
    name: GetPoints
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_GetPoints_MLEM_Maths_RectangleF_System_Single_System_Boolean_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Maths.NumberExtensions
  commentId: T:MLEM.Maths.NumberExtensions
  parent: MLEM.Maths
  href: MLEM.Maths.NumberExtensions.html
  name: NumberExtensions
  nameWithType: NumberExtensions
  fullName: MLEM.Maths.NumberExtensions
- uid: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  isExternal: true
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  name: OffsetCopy(RectangleF, Vector2)
  nameWithType: NumberExtensions.OffsetCopy(RectangleF, Vector2)
  fullName: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: OffsetCopy
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.OffsetCopy(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: OffsetCopy
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_OffsetCopy_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  commentId: M:MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
  isExternal: true
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  name: Penetrate(RectangleF, RectangleF, out Vector2, out float)
  nameWithType: NumberExtensions.Penetrate(RectangleF, RectangleF, out Vector2, out float)
  fullName: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF, out Microsoft.Xna.Framework.Vector2, out float)
  nameWithType.vb: NumberExtensions.Penetrate(RectangleF, RectangleF, Vector2, Single)
  fullName.vb: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF, MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2, Single)
  name.vb: Penetrate(RectangleF, RectangleF, Vector2, Single)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Penetrate(MLEM.Maths.RectangleF,MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2@,System.Single@)
    name: Penetrate
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Penetrate_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2__System_Single__
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
  commentId: M:MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  name: Shrink(RectangleF, Padding)
  nameWithType: NumberExtensions.Shrink(RectangleF, Padding)
  fullName: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF, MLEM.Maths.Padding)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,MLEM.Maths.Padding)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_MLEM_Maths_Padding_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: MLEM.Maths.Padding
    name: Padding
    href: MLEM.Maths.Padding.html
  - name: )
- uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
  isExternal: true
  href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  name: Shrink(RectangleF, Vector2)
  nameWithType: NumberExtensions.Shrink(RectangleF, Vector2)
  fullName: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF, Microsoft.Xna.Framework.Vector2)
  spec.csharp:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Maths.NumberExtensions.Shrink(MLEM.Maths.RectangleF,Microsoft.Xna.Framework.Vector2)
    name: Shrink
    href: MLEM.Maths.NumberExtensions.html#MLEM_Maths_NumberExtensions_Shrink_MLEM_Maths_RectangleF_Microsoft_Xna_Framework_Vector2_
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: ','
  - name: " "
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: MLEM.Maths.RectangleF.Empty*
  commentId: Overload:MLEM.Maths.RectangleF.Empty
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Empty
  name: Empty
  nameWithType: RectangleF.Empty
  fullName: MLEM.Maths.RectangleF.Empty
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  href: MLEM.Maths.RectangleF.html
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Maths.RectangleF.Left*
  commentId: Overload:MLEM.Maths.RectangleF.Left
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Left
  name: Left
  nameWithType: RectangleF.Left
  fullName: MLEM.Maths.RectangleF.Left
- uid: MLEM.Maths.RectangleF.Right*
  commentId: Overload:MLEM.Maths.RectangleF.Right
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Right
  name: Right
  nameWithType: RectangleF.Right
  fullName: MLEM.Maths.RectangleF.Right
- uid: MLEM.Maths.RectangleF.Top*
  commentId: Overload:MLEM.Maths.RectangleF.Top
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Top
  name: Top
  nameWithType: RectangleF.Top
  fullName: MLEM.Maths.RectangleF.Top
- uid: MLEM.Maths.RectangleF.Bottom*
  commentId: Overload:MLEM.Maths.RectangleF.Bottom
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Bottom
  name: Bottom
  nameWithType: RectangleF.Bottom
  fullName: MLEM.Maths.RectangleF.Bottom
- uid: MLEM.Maths.RectangleF.IsEmpty*
  commentId: Overload:MLEM.Maths.RectangleF.IsEmpty
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_IsEmpty
  name: IsEmpty
  nameWithType: RectangleF.IsEmpty
  fullName: MLEM.Maths.RectangleF.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Maths.RectangleF.Location*
  commentId: Overload:MLEM.Maths.RectangleF.Location
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Location
  name: Location
  nameWithType: RectangleF.Location
  fullName: MLEM.Maths.RectangleF.Location
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Maths.RectangleF.Size*
  commentId: Overload:MLEM.Maths.RectangleF.Size
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Size
  name: Size
  nameWithType: RectangleF.Size
  fullName: MLEM.Maths.RectangleF.Size
- uid: MLEM.Maths.RectangleF.Center*
  commentId: Overload:MLEM.Maths.RectangleF.Center
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Center
  name: Center
  nameWithType: RectangleF.Center
  fullName: MLEM.Maths.RectangleF.Center
- uid: MLEM.Maths.RectangleF.#ctor*
  commentId: Overload:MLEM.Maths.RectangleF.#ctor
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF__ctor_System_Single_System_Single_System_Single_System_Single_
  name: RectangleF
  nameWithType: RectangleF.RectangleF
  fullName: MLEM.Maths.RectangleF.RectangleF
  nameWithType.vb: RectangleF.New
  fullName.vb: MLEM.Maths.RectangleF.New
  name.vb: New
- uid: MLEM.Maths.RectangleF.Contains*
  commentId: Overload:MLEM.Maths.RectangleF.Contains
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Contains_System_Single_System_Single_
  name: Contains
  nameWithType: RectangleF.Contains
  fullName: MLEM.Maths.RectangleF.Contains
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: MLEM.Maths.RectangleF.Equals*
  commentId: Overload:MLEM.Maths.RectangleF.Equals
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Equals_System_Object_
  name: Equals
  nameWithType: RectangleF.Equals
  fullName: MLEM.Maths.RectangleF.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IEquatable{MLEM.Maths.RectangleF}.Equals(MLEM.Maths.RectangleF)
  commentId: M:System.IEquatable{MLEM.Maths.RectangleF}.Equals(MLEM.Maths.RectangleF)
  parent: System.IEquatable{MLEM.Maths.RectangleF}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(RectangleF)
  nameWithType: IEquatable<RectangleF>.Equals(RectangleF)
  fullName: System.IEquatable<MLEM.Maths.RectangleF>.Equals(MLEM.Maths.RectangleF)
  nameWithType.vb: IEquatable(Of RectangleF).Equals(RectangleF)
  fullName.vb: System.IEquatable(Of MLEM.Maths.RectangleF).Equals(MLEM.Maths.RectangleF)
  spec.csharp:
  - uid: System.IEquatable{MLEM.Maths.RectangleF}.Equals(MLEM.Maths.RectangleF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{MLEM.Maths.RectangleF}.Equals(MLEM.Maths.RectangleF)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: MLEM.Maths.RectangleF
    name: RectangleF
    href: MLEM.Maths.RectangleF.html
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: MLEM.Maths.RectangleF.GetHashCode*
  commentId: Overload:MLEM.Maths.RectangleF.GetHashCode
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_GetHashCode
  name: GetHashCode
  nameWithType: RectangleF.GetHashCode
  fullName: MLEM.Maths.RectangleF.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Maths.RectangleF.Inflate*
  commentId: Overload:MLEM.Maths.RectangleF.Inflate
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Inflate_System_Single_System_Single_
  name: Inflate
  nameWithType: RectangleF.Inflate
  fullName: MLEM.Maths.RectangleF.Inflate
- uid: MLEM.Maths.RectangleF.Intersects*
  commentId: Overload:MLEM.Maths.RectangleF.Intersects
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Intersects_MLEM_Maths_RectangleF_
  name: Intersects
  nameWithType: RectangleF.Intersects
  fullName: MLEM.Maths.RectangleF.Intersects
- uid: Microsoft.Xna.Framework.Rectangle.Location
  commentId: P:Microsoft.Xna.Framework.Rectangle.Location
  isExternal: true
  name: Location
  nameWithType: Rectangle.Location
  fullName: Microsoft.Xna.Framework.Rectangle.Location
- uid: MLEM.Maths.RectangleF.Offset*
  commentId: Overload:MLEM.Maths.RectangleF.Offset
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Offset_System_Single_System_Single_
  name: Offset
  nameWithType: RectangleF.Offset
  fullName: MLEM.Maths.RectangleF.Offset
- uid: MLEM.Maths.RectangleF.DistanceSquared*
  commentId: Overload:MLEM.Maths.RectangleF.DistanceSquared
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_DistanceSquared_MLEM_Maths_RectangleF_
  name: DistanceSquared
  nameWithType: RectangleF.DistanceSquared
  fullName: MLEM.Maths.RectangleF.DistanceSquared
- uid: MLEM.Maths.RectangleF.Distance*
  commentId: Overload:MLEM.Maths.RectangleF.Distance
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Distance_MLEM_Maths_RectangleF_
  name: Distance
  nameWithType: RectangleF.Distance
  fullName: MLEM.Maths.RectangleF.Distance
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: MLEM.Maths.RectangleF.ToString*
  commentId: Overload:MLEM.Maths.RectangleF.ToString
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_ToString
  name: ToString
  nameWithType: RectangleF.ToString
  fullName: MLEM.Maths.RectangleF.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Maths.RectangleF.Deconstruct*
  commentId: Overload:MLEM.Maths.RectangleF.Deconstruct
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Deconstruct_System_Single__System_Single__System_Single__System_Single__
  name: Deconstruct
  nameWithType: RectangleF.Deconstruct
  fullName: MLEM.Maths.RectangleF.Deconstruct
- uid: MLEM.Maths.RectangleF.op_Explicit*
  commentId: Overload:MLEM.Maths.RectangleF.op_Explicit
  name: explicit operator
  nameWithType: RectangleF.explicit operator
  fullName: MLEM.Maths.RectangleF.explicit operator
  nameWithType.vb: RectangleF.CType
  fullName.vb: MLEM.Maths.RectangleF.CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: MLEM.Maths.RectangleF.Union*
  commentId: Overload:MLEM.Maths.RectangleF.Union
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Union_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
  name: Union
  nameWithType: RectangleF.Union
  fullName: MLEM.Maths.RectangleF.Union
- uid: MLEM.Maths.RectangleF.Intersect*
  commentId: Overload:MLEM.Maths.RectangleF.Intersect
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_Intersect_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
  name: Intersect
  nameWithType: RectangleF.Intersect
  fullName: MLEM.Maths.RectangleF.Intersect
- uid: MLEM.Maths.RectangleF.FromCorners*
  commentId: Overload:MLEM.Maths.RectangleF.FromCorners
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_FromCorners_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: FromCorners
  nameWithType: RectangleF.FromCorners
  fullName: MLEM.Maths.RectangleF.FromCorners
- uid: MLEM.Maths.RectangleF.op_Equality*
  commentId: Overload:MLEM.Maths.RectangleF.op_Equality
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_op_Equality_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
  name: operator ==
  nameWithType: RectangleF.operator ==
  fullName: MLEM.Maths.RectangleF.operator ==
  nameWithType.vb: RectangleF.=
  fullName.vb: MLEM.Maths.RectangleF.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.RectangleF.op_Equality*
    name: ==
    href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_op_Equality_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
- uid: MLEM.Maths.RectangleF.op_Inequality*
  commentId: Overload:MLEM.Maths.RectangleF.op_Inequality
  href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_op_Inequality_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
  name: operator !=
  nameWithType: RectangleF.operator !=
  fullName: MLEM.Maths.RectangleF.operator !=
  nameWithType.vb: RectangleF.<>
  fullName.vb: MLEM.Maths.RectangleF.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: MLEM.Maths.RectangleF.op_Inequality*
    name: '!='
    href: MLEM.Maths.RectangleF.html#MLEM_Maths_RectangleF_op_Inequality_MLEM_Maths_RectangleF_MLEM_Maths_RectangleF_
