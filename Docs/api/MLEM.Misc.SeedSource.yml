### YamlMime:ManagedReference
items:
- uid: MLEM.Misc.SeedSource
  commentId: T:MLEM.Misc.SeedSource
  id: SeedSource
  parent: MLEM.Misc
  children:
  - MLEM.Misc.SeedSource.Add(System.Guid)
  - MLEM.Misc.SeedSource.Add(System.Int32)
  - MLEM.Misc.SeedSource.Add(System.Object)
  - MLEM.Misc.SeedSource.Add(System.Single)
  - MLEM.Misc.SeedSource.Add(System.String)
  - MLEM.Misc.SeedSource.Get
  - MLEM.Misc.SeedSource.Random
  - MLEM.Misc.SeedSource.Rotate
  langs:
  - csharp
  - vb
  name: SeedSource
  nameWithType: SeedSource
  fullName: MLEM.Misc.SeedSource
  type: Struct
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SeedSource
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 10
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    A seed source contains an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> value which can be used as a seed for a <xref href="System.Random" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Misc.SingleRandom" data-throw-if-not-resolved="false"></xref>. Seed sources feature a convenient way to add multiple seeds using <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref>, which will be sufficiently scrambled to be deterministically pseudorandom and combined into a single <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>.

    This struct behaves similarly to <code>System.HashCode</code> in many ways, with an important distinction being that <xref href="MLEM.Misc.SeedSource" data-throw-if-not-resolved="false"></xref>'s scrambling procedure is not considered an implementation detail, and will stay consistent between process executions.
  example:
  - For example, a seed source can be used to create a new <xref href="System.Random" data-throw-if-not-resolved="false"></xref> based on an object's <code>x</code> and <code>y</code> coordinates by combining them into a <xref href="MLEM.Misc.SeedSource" data-throw-if-not-resolved="false"></xref> using <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref>. The values generated by the <xref href="System.Random" data-throw-if-not-resolved="false"></xref> created using <xref href="MLEM.Misc.SeedSource.Random" data-throw-if-not-resolved="false"></xref> will then be determined by the specific pair of <code>x</code> and <code>y</code> values used.
  syntax:
    content: public readonly struct SeedSource
    content.vb: Public Structure SeedSource
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
- uid: MLEM.Misc.SeedSource.Add(System.Int32)
  commentId: M:MLEM.Misc.SeedSource.Add(System.Int32)
  id: Add(System.Int32)
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Add(int)
  nameWithType: SeedSource.Add(int)
  fullName: MLEM.Misc.SeedSource.Add(int)
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 24
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Adds the given seed to this seed source's value and returns the result as a new seed source.

    The algorithm used for adding involves various scrambling operations that sufficiently pseudo-randomize the seed and final value.
  example: []
  syntax:
    content: public SeedSource Add(int seed)
    parameters:
    - id: seed
      type: System.Int32
      description: The seed to add.
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with the seed added.
    content.vb: Public Function Add(seed As Integer) As SeedSource
  overload: MLEM.Misc.SeedSource.Add*
  nameWithType.vb: SeedSource.Add(Integer)
  fullName.vb: MLEM.Misc.SeedSource.Add(Integer)
  name.vb: Add(Integer)
- uid: MLEM.Misc.SeedSource.Add(System.Single)
  commentId: M:MLEM.Misc.SeedSource.Add(System.Single)
  id: Add(System.Single)
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Add(float)
  nameWithType: SeedSource.Add(float)
  fullName: MLEM.Misc.SeedSource.Add(float)
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 34
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Adds the given seed to this seed source's value and returns the result as a new seed source.

    Floating point values are scrambled by invoking <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref> using a typecast version, followed by invoking <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref> using the decimal value multiplied by <xref href="System.Int32.MaxValue" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SeedSource Add(float seed)
    parameters:
    - id: seed
      type: System.Single
      description: The seed to add.
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with the seed added.
    content.vb: Public Function Add(seed As Single) As SeedSource
  overload: MLEM.Misc.SeedSource.Add*
  nameWithType.vb: SeedSource.Add(Single)
  fullName.vb: MLEM.Misc.SeedSource.Add(Single)
  name.vb: Add(Single)
- uid: MLEM.Misc.SeedSource.Add(System.String)
  commentId: M:MLEM.Misc.SeedSource.Add(System.String)
  id: Add(System.String)
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: SeedSource.Add(string)
  fullName: MLEM.Misc.SeedSource.Add(string)
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 44
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Adds the given seed to this seed source's value and returns the result as a new seed source.

    Strings are scrambled by invoking <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref> using every character contained in the string, in order.
  example: []
  syntax:
    content: public SeedSource Add(string seed)
    parameters:
    - id: seed
      type: System.String
      description: The seed to add.
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with the seed added.
    content.vb: Public Function Add(seed As String) As SeedSource
  overload: MLEM.Misc.SeedSource.Add*
  nameWithType.vb: SeedSource.Add(String)
  fullName.vb: MLEM.Misc.SeedSource.Add(String)
  name.vb: Add(String)
- uid: MLEM.Misc.SeedSource.Add(System.Guid)
  commentId: M:MLEM.Misc.SeedSource.Add(System.Guid)
  id: Add(System.Guid)
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Add(Guid)
  nameWithType: SeedSource.Add(Guid)
  fullName: MLEM.Misc.SeedSource.Add(System.Guid)
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 57
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Adds the given seed to this seed source's value and returns the result as a new seed source.

    Guids are scrambled by invoking <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref> using every byte in the <xref href="System.Guid" data-throw-if-not-resolved="false"></xref>'s byte array.
  example: []
  syntax:
    content: public SeedSource Add(Guid seed)
    parameters:
    - id: seed
      type: System.Guid
      description: The seed to add.
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with the seed added.
    content.vb: Public Function Add(seed As Guid) As SeedSource
  overload: MLEM.Misc.SeedSource.Add*
- uid: MLEM.Misc.SeedSource.Add(System.Object)
  commentId: M:MLEM.Misc.SeedSource.Add(System.Object)
  id: Add(System.Object)
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Add(object)
  nameWithType: SeedSource.Add(object)
  fullName: MLEM.Misc.SeedSource.Add(object)
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 70
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Adds the given seed to this seed source's value and returns the result as a new seed source.

    Any objects that don't have a specially defined <xref href="MLEM.Misc.SeedSource.Add(System.Int32)" data-throw-if-not-resolved="false"></xref> overload get scrambled using <xref href="System.Object.GetHashCode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public SeedSource Add(object seed)
    parameters:
    - id: seed
      type: System.Object
      description: The seed to add.
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with the seed added.
    content.vb: Public Function Add(seed As Object) As SeedSource
  overload: MLEM.Misc.SeedSource.Add*
  nameWithType.vb: SeedSource.Add(Object)
  fullName.vb: MLEM.Misc.SeedSource.Add(Object)
  name.vb: Add(Object)
- uid: MLEM.Misc.SeedSource.Rotate
  commentId: M:MLEM.Misc.SeedSource.Rotate
  id: Rotate
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Rotate()
  nameWithType: SeedSource.Rotate()
  fullName: MLEM.Misc.SeedSource.Rotate()
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Rotate
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 79
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Returns a new seed source whose value is this seed source's value, but scrambled further.

    In essence, this creates a new seed source whose value is determined by the current seed source.
  example: []
  syntax:
    content: public SeedSource Rotate()
    return:
      type: MLEM.Misc.SeedSource
      description: A new seed source with a rotated value.
    content.vb: Public Function Rotate() As SeedSource
  overload: MLEM.Misc.SeedSource.Rotate*
- uid: MLEM.Misc.SeedSource.Get
  commentId: M:MLEM.Misc.SeedSource.Get
  id: Get
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Get()
  nameWithType: SeedSource.Get()
  fullName: MLEM.Misc.SeedSource.Get()
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Get
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 87
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns this seed source's seed value, which can then be used in <xref href="MLEM.Misc.SingleRandom" data-throw-if-not-resolved="false"></xref> or elsewhere.
  example: []
  syntax:
    content: public int Get()
    return:
      type: System.Int32
      description: This seed source's value.
    content.vb: Public Function [Get]() As Integer
  overload: MLEM.Misc.SeedSource.Get*
- uid: MLEM.Misc.SeedSource.Random
  commentId: M:MLEM.Misc.SeedSource.Random
  id: Random
  parent: MLEM.Misc.SeedSource
  langs:
  - csharp
  - vb
  name: Random()
  nameWithType: SeedSource.Random()
  fullName: MLEM.Misc.SeedSource.Random()
  type: Method
  source:
    remote:
      path: MLEM/Misc/SeedSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Random
    path: ../MLEM/Misc/SeedSource.cs
    startLine: 95
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns a new <xref href="MLEM.Misc.SeedSource.Random" data-throw-if-not-resolved="false"></xref> instance using this source seed's value, retrieved using <xref href="MLEM.Misc.SeedSource.Get" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Random Random()
    return:
      type: System.Random
      description: A new <xref href="MLEM.Misc.SeedSource.Random" data-throw-if-not-resolved="false"></xref> using this seed source's value.
    content.vb: Public Function Random() As Random
  overload: MLEM.Misc.SeedSource.Random*
references:
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Random
  commentId: T:System.Random
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.random
  name: Random
  nameWithType: Random
  fullName: System.Random
- uid: MLEM.Misc.SingleRandom
  commentId: T:MLEM.Misc.SingleRandom
  href: MLEM.Misc.SingleRandom.html
  name: SingleRandom
  nameWithType: SingleRandom
  fullName: MLEM.Misc.SingleRandom
- uid: MLEM.Misc.SeedSource.Add(System.Int32)
  commentId: M:MLEM.Misc.SeedSource.Add(System.Int32)
  isExternal: true
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Add_System_Int32_
  name: Add(int)
  nameWithType: SeedSource.Add(int)
  fullName: MLEM.Misc.SeedSource.Add(int)
  nameWithType.vb: SeedSource.Add(Integer)
  fullName.vb: MLEM.Misc.SeedSource.Add(Integer)
  name.vb: Add(Integer)
  spec.csharp:
  - uid: MLEM.Misc.SeedSource.Add(System.Int32)
    name: Add
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Add_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MLEM.Misc.SeedSource.Add(System.Int32)
    name: Add
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Add_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MLEM.Misc.SeedSource
  commentId: T:MLEM.Misc.SeedSource
  parent: MLEM.Misc
  href: MLEM.Misc.SeedSource.html
  name: SeedSource
  nameWithType: SeedSource
  fullName: MLEM.Misc.SeedSource
- uid: MLEM.Misc.SeedSource.Random
  commentId: M:MLEM.Misc.SeedSource.Random
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Random
  name: Random()
  nameWithType: SeedSource.Random()
  fullName: MLEM.Misc.SeedSource.Random()
  spec.csharp:
  - uid: MLEM.Misc.SeedSource.Random
    name: Random
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Random
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.SeedSource.Random
    name: Random
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Random
  - name: (
  - name: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<SeedSource>(SeedSource, SeedSource, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<SeedSource>(SeedSource, SeedSource, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<MLEM.Misc.SeedSource>(MLEM.Misc.SeedSource, MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of SeedSource)(SeedSource, SeedSource, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of MLEM.Misc.SeedSource)(MLEM.Misc.SeedSource, MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of SeedSource)(SeedSource, SeedSource, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Misc.SeedSource,MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: '>'
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Misc.SeedSource,MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: )
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<SeedSource>(SeedSource, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<SeedSource>(SeedSource, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<MLEM.Misc.SeedSource>(MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of SeedSource)(SeedSource, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of MLEM.Misc.SeedSource)(MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of SeedSource)(SeedSource, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: '>'
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: )
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<SeedSource>(SeedSource, SeedSource, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<SeedSource>(SeedSource, SeedSource, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<MLEM.Misc.SeedSource>(MLEM.Misc.SeedSource, MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of SeedSource)(SeedSource, SeedSource, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of MLEM.Misc.SeedSource)(MLEM.Misc.SeedSource, MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of SeedSource)(SeedSource, SeedSource, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Misc.SeedSource,MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: '>'
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Misc.SeedSource,MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: )
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Misc.SeedSource.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<SeedSource>(SeedSource, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<SeedSource>(SeedSource, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<MLEM.Misc.SeedSource>(MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of SeedSource)(SeedSource, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of MLEM.Misc.SeedSource)(MLEM.Misc.SeedSource, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of SeedSource)(SeedSource, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: '>'
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Misc.SeedSource,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: )
  - name: (
  - uid: MLEM.Misc.SeedSource
    name: SeedSource
    href: MLEM.Misc.SeedSource.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions
  commentId: T:MLEM.Data.CopyExtensions
  parent: MLEM.Data
  href: MLEM.Data.CopyExtensions.html
  name: CopyExtensions
  nameWithType: CopyExtensions
  fullName: MLEM.Data.CopyExtensions
- uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  href: MLEM.html
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
- uid: MLEM.Misc.SeedSource.Add*
  commentId: Overload:MLEM.Misc.SeedSource.Add
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Add_System_Int32_
  name: Add
  nameWithType: SeedSource.Add
  fullName: MLEM.Misc.SeedSource.Add
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32.maxvalue
  name: MaxValue
  nameWithType: int.MaxValue
  fullName: int.MaxValue
  nameWithType.vb: Integer.MaxValue
  fullName.vb: Integer.MaxValue
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: MLEM.Misc.SeedSource.Rotate*
  commentId: Overload:MLEM.Misc.SeedSource.Rotate
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Rotate
  name: Rotate
  nameWithType: SeedSource.Rotate
  fullName: MLEM.Misc.SeedSource.Rotate
- uid: MLEM.Misc.SeedSource.Get*
  commentId: Overload:MLEM.Misc.SeedSource.Get
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Get
  name: Get
  nameWithType: SeedSource.Get
  fullName: MLEM.Misc.SeedSource.Get
- uid: MLEM.Misc.SeedSource.Get
  commentId: M:MLEM.Misc.SeedSource.Get
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Get
  name: Get()
  nameWithType: SeedSource.Get()
  fullName: MLEM.Misc.SeedSource.Get()
  spec.csharp:
  - uid: MLEM.Misc.SeedSource.Get
    name: Get
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Get
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Misc.SeedSource.Get
    name: Get
    href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Get
  - name: (
  - name: )
- uid: MLEM.Misc.SeedSource.Random*
  commentId: Overload:MLEM.Misc.SeedSource.Random
  href: MLEM.Misc.SeedSource.html#MLEM_Misc_SeedSource_Random
  name: Random
  nameWithType: SeedSource.Random
  fullName: MLEM.Misc.SeedSource.Random
