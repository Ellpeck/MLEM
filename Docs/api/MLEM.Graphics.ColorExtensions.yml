### YamlMime:ManagedReference
items:
- uid: MLEM.Graphics.ColorExtensions
  commentId: T:MLEM.Graphics.ColorExtensions
  id: ColorExtensions
  parent: MLEM.Graphics
  children:
  - MLEM.Graphics.ColorExtensions.CopyAlpha(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  - MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  - MLEM.Graphics.ColorExtensions.Multiply(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  - MLEM.Graphics.ColorExtensions.ToHexStringRgb(Microsoft.Xna.Framework.Color,System.Boolean)
  - MLEM.Graphics.ColorExtensions.ToHexStringRgba(Microsoft.Xna.Framework.Color,System.Boolean)
  - MLEM.Graphics.ColorExtensions.ToHsl(Microsoft.Xna.Framework.Color)
  - MLEM.Graphics.ColorExtensions.ToHsv(Microsoft.Xna.Framework.Color)
  langs:
  - csharp
  - vb
  name: ColorExtensions
  nameWithType: ColorExtensions
  fullName: MLEM.Graphics.ColorExtensions
  type: Class
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ColorExtensions
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: A set of extensions for dealing with <xref href="Microsoft.Xna.Framework.Color" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public static class ColorExtensions
    content.vb: Public Module ColorExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Graphics.ColorExtensions.CopyAlpha(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.CopyAlpha(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  id: CopyAlpha(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: CopyAlpha(Color, Color)
  nameWithType: ColorExtensions.CopyAlpha(Color, Color)
  fullName: MLEM.Graphics.ColorExtensions.CopyAlpha(Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: CopyAlpha
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 16
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Copies the alpha value from another color into this color and returns the result.
  example: []
  syntax:
    content: public static Color CopyAlpha(this Color color, Color other)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color.
    - id: other
      type: Microsoft.Xna.Framework.Color
      description: The color to copy the alpha from.
    return:
      type: Microsoft.Xna.Framework.Color
      description: The first color with the second color's alpha value.
    content.vb: Public Shared Function CopyAlpha(color As Color, other As Color) As Color
  overload: MLEM.Graphics.ColorExtensions.CopyAlpha*
- uid: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  id: Invert(Microsoft.Xna.Framework.Color)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: Invert(Color)
  nameWithType: ColorExtensions.Invert(Color)
  fullName: MLEM.Graphics.ColorExtensions.Invert(Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Invert
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 25
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Returns an inverted version of this color.
  example: []
  syntax:
    content: public static Color Invert(this Color color)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to invert.
    return:
      type: Microsoft.Xna.Framework.Color
      description: The inverted color.
    content.vb: Public Shared Function Invert(color As Color) As Color
  overload: MLEM.Graphics.ColorExtensions.Invert*
- uid: MLEM.Graphics.ColorExtensions.Multiply(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.Multiply(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  id: Multiply(Microsoft.Xna.Framework.Color,Microsoft.Xna.Framework.Color)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: Multiply(Color, Color)
  nameWithType: ColorExtensions.Multiply(Color, Color)
  fullName: MLEM.Graphics.ColorExtensions.Multiply(Microsoft.Xna.Framework.Color, Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Multiply
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 35
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Multiplies this color with another color and returns the result.
  example: []
  syntax:
    content: public static Color Multiply(this Color color, Color other)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The first color.
    - id: other
      type: Microsoft.Xna.Framework.Color
      description: The second color.
    return:
      type: Microsoft.Xna.Framework.Color
      description: The two colors multiplied together.
    content.vb: Public Shared Function Multiply(color As Color, other As Color) As Color
  overload: MLEM.Graphics.ColorExtensions.Multiply*
- uid: MLEM.Graphics.ColorExtensions.ToHexStringRgba(Microsoft.Xna.Framework.Color,System.Boolean)
  commentId: M:MLEM.Graphics.ColorExtensions.ToHexStringRgba(Microsoft.Xna.Framework.Color,System.Boolean)
  id: ToHexStringRgba(Microsoft.Xna.Framework.Color,System.Boolean)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: ToHexStringRgba(Color, bool)
  nameWithType: ColorExtensions.ToHexStringRgba(Color, bool)
  fullName: MLEM.Graphics.ColorExtensions.ToHexStringRgba(Microsoft.Xna.Framework.Color, bool)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToHexStringRgba
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 45
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Returns the hexadecimal representation of this color as a string in the format <code>#AARRGGBB</code>, or optionally <code>AARRGGBB</code>, without the pound symbol.
  example: []
  syntax:
    content: public static string ToHexStringRgba(this Color color, bool hash = true)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to convert.
    - id: hash
      type: System.Boolean
      description: 'Whether a # should prepend the string.'
    return:
      type: System.String
      description: The resulting hex string.
    content.vb: Public Shared Function ToHexStringRgba(color As Color, hash As Boolean = True) As String
  overload: MLEM.Graphics.ColorExtensions.ToHexStringRgba*
  nameWithType.vb: ColorExtensions.ToHexStringRgba(Color, Boolean)
  fullName.vb: MLEM.Graphics.ColorExtensions.ToHexStringRgba(Microsoft.Xna.Framework.Color, Boolean)
  name.vb: ToHexStringRgba(Color, Boolean)
- uid: MLEM.Graphics.ColorExtensions.ToHexStringRgb(Microsoft.Xna.Framework.Color,System.Boolean)
  commentId: M:MLEM.Graphics.ColorExtensions.ToHexStringRgb(Microsoft.Xna.Framework.Color,System.Boolean)
  id: ToHexStringRgb(Microsoft.Xna.Framework.Color,System.Boolean)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: ToHexStringRgb(Color, bool)
  nameWithType: ColorExtensions.ToHexStringRgb(Color, bool)
  fullName: MLEM.Graphics.ColorExtensions.ToHexStringRgb(Microsoft.Xna.Framework.Color, bool)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToHexStringRgb
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 56
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: >-
    Returns the hexadecimal representation of this color as a string in the format <code>#RRGGBB</code>, or optionally <code>RRGGBB</code>, without the pound symbol.

    The alpha channel is ignored.
  example: []
  syntax:
    content: public static string ToHexStringRgb(this Color color, bool hash = true)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to convert.
    - id: hash
      type: System.Boolean
      description: 'Whether a # should prepend the string.'
    return:
      type: System.String
      description: The resulting hex string.
    content.vb: Public Shared Function ToHexStringRgb(color As Color, hash As Boolean = True) As String
  overload: MLEM.Graphics.ColorExtensions.ToHexStringRgb*
  nameWithType.vb: ColorExtensions.ToHexStringRgb(Color, Boolean)
  fullName.vb: MLEM.Graphics.ColorExtensions.ToHexStringRgb(Microsoft.Xna.Framework.Color, Boolean)
  name.vb: ToHexStringRgb(Color, Boolean)
- uid: MLEM.Graphics.ColorExtensions.ToHsl(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.ToHsl(Microsoft.Xna.Framework.Color)
  id: ToHsl(Microsoft.Xna.Framework.Color)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: ToHsl(Color)
  nameWithType: ColorExtensions.ToHsl(Color)
  fullName: MLEM.Graphics.ColorExtensions.ToHsl(Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToHsl
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 66
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Converts the given <code class="paramref">color</code> into HSL representation and returns the result as a value tuple with values between 0 and 1.
  remarks: This code is adapted from https://gist.github.com/mjackson/5311256.
  example: []
  syntax:
    content: public static (float H, float S, float L) ToHsl(this Color color)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to convert.
    return:
      type: System.ValueTuple{System.Single,System.Single,System.Single}
      description: The resulting HSL color as a value tuple containing H, S and L, each between 0 and 1.
    content.vb: Public Shared Function ToHsl(color As Color) As (H As Single, S As Single, L As Single)
  overload: MLEM.Graphics.ColorExtensions.ToHsl*
- uid: MLEM.Graphics.ColorExtensions.ToHsv(Microsoft.Xna.Framework.Color)
  commentId: M:MLEM.Graphics.ColorExtensions.ToHsv(Microsoft.Xna.Framework.Color)
  id: ToHsv(Microsoft.Xna.Framework.Color)
  isExtensionMethod: true
  parent: MLEM.Graphics.ColorExtensions
  langs:
  - csharp
  - vb
  name: ToHsv(Color)
  nameWithType: ColorExtensions.ToHsv(Color)
  fullName: MLEM.Graphics.ColorExtensions.ToHsv(Microsoft.Xna.Framework.Color)
  type: Method
  source:
    remote:
      path: MLEM/Graphics/ColorExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToHsv
    path: ../MLEM/Graphics/ColorExtensions.cs
    startLine: 99
  assemblies:
  - MLEM
  namespace: MLEM.Graphics
  summary: Converts the given <code class="paramref">color</code> into HSV representation and returns the result as a value tuple with values between 0 and 1.
  remarks: This code is adapted from https://gist.github.com/mjackson/5311256.
  example: []
  syntax:
    content: public static (float H, float S, float V) ToHsv(this Color color)
    parameters:
    - id: color
      type: Microsoft.Xna.Framework.Color
      description: The color to convert.
    return:
      type: System.ValueTuple{System.Single,System.Single,System.Single}
      description: The resulting HSV color as a value tuple containing H, S and V, each between 0 and 1.
    content.vb: Public Shared Function ToHsv(color As Color) As (H As Single, S As Single, V As Single)
  overload: MLEM.Graphics.ColorExtensions.ToHsv*
references:
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: MLEM.Graphics
  commentId: N:MLEM.Graphics
  href: MLEM.html
  name: MLEM.Graphics
  nameWithType: MLEM.Graphics
  fullName: MLEM.Graphics
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Graphics
    name: Graphics
    href: MLEM.Graphics.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Graphics
    name: Graphics
    href: MLEM.Graphics.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Graphics.ColorExtensions.CopyAlpha*
  commentId: Overload:MLEM.Graphics.ColorExtensions.CopyAlpha
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_CopyAlpha_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Color_
  name: CopyAlpha
  nameWithType: ColorExtensions.CopyAlpha
  fullName: MLEM.Graphics.ColorExtensions.CopyAlpha
- uid: MLEM.Graphics.ColorExtensions.Invert*
  commentId: Overload:MLEM.Graphics.ColorExtensions.Invert
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_Invert_Microsoft_Xna_Framework_Color_
  name: Invert
  nameWithType: ColorExtensions.Invert
  fullName: MLEM.Graphics.ColorExtensions.Invert
- uid: MLEM.Graphics.ColorExtensions.Multiply*
  commentId: Overload:MLEM.Graphics.ColorExtensions.Multiply
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_Multiply_Microsoft_Xna_Framework_Color_Microsoft_Xna_Framework_Color_
  name: Multiply
  nameWithType: ColorExtensions.Multiply
  fullName: MLEM.Graphics.ColorExtensions.Multiply
- uid: MLEM.Graphics.ColorExtensions.ToHexStringRgba*
  commentId: Overload:MLEM.Graphics.ColorExtensions.ToHexStringRgba
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_ToHexStringRgba_Microsoft_Xna_Framework_Color_System_Boolean_
  name: ToHexStringRgba
  nameWithType: ColorExtensions.ToHexStringRgba
  fullName: MLEM.Graphics.ColorExtensions.ToHexStringRgba
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MLEM.Graphics.ColorExtensions.ToHexStringRgb*
  commentId: Overload:MLEM.Graphics.ColorExtensions.ToHexStringRgb
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_ToHexStringRgb_Microsoft_Xna_Framework_Color_System_Boolean_
  name: ToHexStringRgb
  nameWithType: ColorExtensions.ToHexStringRgb
  fullName: MLEM.Graphics.ColorExtensions.ToHexStringRgb
- uid: MLEM.Graphics.ColorExtensions.ToHsl*
  commentId: Overload:MLEM.Graphics.ColorExtensions.ToHsl
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_ToHsl_Microsoft_Xna_Framework_Color_
  name: ToHsl
  nameWithType: ColorExtensions.ToHsl
  fullName: MLEM.Graphics.ColorExtensions.ToHsl
- uid: System.ValueTuple{System.Single,System.Single,System.Single}
  commentId: T:System.ValueTuple{System.Single,System.Single,System.Single}
  parent: System
  definition: System.ValueTuple`3
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: (float H, float S, float L)
  nameWithType: (float H, float S, float L)
  fullName: (float H, float S, float L)
  nameWithType.vb: (H As Single, S As Single, L As Single)
  fullName.vb: (H As Single, S As Single, L As Single)
  name.vb: (H As Single, S As Single, L As Single)
  spec.csharp:
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.H
    name: H
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.h
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.S
    name: S
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.s
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.L
    name: L
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.l
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.H
    name: H
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.h
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.S
    name: S
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.s
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Single,System.Single,System.Single}.L
    name: L
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.single,system.single,system.single-.l
  - name: " "
  - name: As
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`3
  commentId: T:System.ValueTuple`3
  name: (T1, T2, T3)
  nameWithType: (T1, T2, T3)
  fullName: (T1, T2, T3)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: T3
  - name: )
- uid: MLEM.Graphics.ColorExtensions.ToHsv*
  commentId: Overload:MLEM.Graphics.ColorExtensions.ToHsv
  href: MLEM.Graphics.ColorExtensions.html#MLEM_Graphics_ColorExtensions_ToHsv_Microsoft_Xna_Framework_Color_
  name: ToHsv
  nameWithType: ColorExtensions.ToHsv
  fullName: MLEM.Graphics.ColorExtensions.ToHsv
