### YamlMime:ManagedReference
items:
- uid: MLEM.Misc.IGenericDataHolder
  commentId: T:MLEM.Misc.IGenericDataHolder
  id: IGenericDataHolder
  parent: MLEM.Misc
  children:
  - MLEM.Misc.IGenericDataHolder.GetDataKeys
  - MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  - MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  langs:
  - csharp
  - vb
  name: IGenericDataHolder
  nameWithType: IGenericDataHolder
  fullName: MLEM.Misc.IGenericDataHolder
  type: Interface
  source:
    remote:
      path: MLEM/Misc/GenericDataHolder.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IGenericDataHolder
    path: ../MLEM/Misc/GenericDataHolder.cs
    startLine: 45
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: >-
    Represents an object that can hold generic key-value based data.

    A lot of MLEM components extend this class to allow for users to add additional data to them easily.
  example: []
  syntax:
    content: public interface IGenericDataHolder
    content.vb: Public Interface IGenericDataHolder
- uid: MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  commentId: M:MLEM.Misc.IGenericDataHolder.SetData``1(System.String,``0)
  id: SetData``1(System.String,``0)
  parent: MLEM.Misc.IGenericDataHolder
  langs:
  - csharp
  - vb
  name: SetData<T>(string, T)
  nameWithType: IGenericDataHolder.SetData<T>(string, T)
  fullName: MLEM.Misc.IGenericDataHolder.SetData<T>(string, T)
  type: Method
  source:
    remote:
      path: MLEM/Misc/GenericDataHolder.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SetData
    path: ../MLEM/Misc/GenericDataHolder.cs
    startLine: 52
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Store a piece of generic data on this object.
  example: []
  syntax:
    content: void SetData<T>(string key, T data)
    parameters:
    - id: key
      type: System.String
      description: The key to store the data by
    - id: data
      type: '{T}'
      description: The data to store in the object
    typeParameters:
    - id: T
    content.vb: Sub SetData(Of T)(key As String, data As T)
  overload: MLEM.Misc.IGenericDataHolder.SetData*
  nameWithType.vb: IGenericDataHolder.SetData(Of T)(String, T)
  fullName.vb: MLEM.Misc.IGenericDataHolder.SetData(Of T)(String, T)
  name.vb: SetData(Of T)(String, T)
- uid: MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.IGenericDataHolder.GetData``1(System.String)
  id: GetData``1(System.String)
  parent: MLEM.Misc.IGenericDataHolder
  langs:
  - csharp
  - vb
  name: GetData<T>(string)
  nameWithType: IGenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.IGenericDataHolder.GetData<T>(string)
  type: Method
  source:
    remote:
      path: MLEM/Misc/GenericDataHolder.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetData
    path: ../MLEM/Misc/GenericDataHolder.cs
    startLine: 60
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns a piece of generic data of the given type on this object.
  example: []
  syntax:
    content: T GetData<T>(string key)
    parameters:
    - id: key
      type: System.String
      description: The key that the data is stored by
    typeParameters:
    - id: T
      description: The type of the data stored
    return:
      type: '{T}'
      description: The data, or default if it doesn't exist
    content.vb: Function GetData(Of T)(key As String) As T
  overload: MLEM.Misc.IGenericDataHolder.GetData*
  nameWithType.vb: IGenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.IGenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
- uid: MLEM.Misc.IGenericDataHolder.GetDataKeys
  commentId: M:MLEM.Misc.IGenericDataHolder.GetDataKeys
  id: GetDataKeys
  parent: MLEM.Misc.IGenericDataHolder
  langs:
  - csharp
  - vb
  name: GetDataKeys()
  nameWithType: IGenericDataHolder.GetDataKeys()
  fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys()
  type: Method
  source:
    remote:
      path: MLEM/Misc/GenericDataHolder.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetDataKeys
    path: ../MLEM/Misc/GenericDataHolder.cs
    startLine: 66
  assemblies:
  - MLEM
  namespace: MLEM.Misc
  summary: Returns all of the generic data that this object stores.
  example: []
  syntax:
    content: IEnumerable<string> GetDataKeys()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: The generic data on this object
    content.vb: Function GetDataKeys() As IEnumerable(Of String)
  overload: MLEM.Misc.IGenericDataHolder.GetDataKeys*
references:
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Misc.IGenericDataHolder.SetData*
  commentId: Overload:MLEM.Misc.IGenericDataHolder.SetData
  href: MLEM.Misc.IGenericDataHolder.html#MLEM_Misc_IGenericDataHolder_SetData__1_System_String___0_
  name: SetData
  nameWithType: IGenericDataHolder.SetData
  fullName: MLEM.Misc.IGenericDataHolder.SetData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MLEM.Misc.IGenericDataHolder.GetData*
  commentId: Overload:MLEM.Misc.IGenericDataHolder.GetData
  href: MLEM.Misc.IGenericDataHolder.html#MLEM_Misc_IGenericDataHolder_GetData__1_System_String_
  name: GetData
  nameWithType: IGenericDataHolder.GetData
  fullName: MLEM.Misc.IGenericDataHolder.GetData
- uid: MLEM.Misc.IGenericDataHolder.GetDataKeys*
  commentId: Overload:MLEM.Misc.IGenericDataHolder.GetDataKeys
  href: MLEM.Misc.IGenericDataHolder.html#MLEM_Misc_IGenericDataHolder_GetDataKeys
  name: GetDataKeys
  nameWithType: IGenericDataHolder.GetDataKeys
  fullName: MLEM.Misc.IGenericDataHolder.GetDataKeys
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
