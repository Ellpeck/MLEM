### YamlMime:ManagedReference
items:
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  commentId: T:MLEM.Extended.Tiled.IndividualTiledMapRenderer
  id: IndividualTiledMapRenderer
  parent: MLEM.Extended.Tiled
  children:
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer(MLEM.Graphics.StaticSpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations(Microsoft.Xna.Framework.GameTime)
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: IndividualTiledMapRenderer
  nameWithType: IndividualTiledMapRenderer
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  type: Class
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IndividualTiledMapRenderer
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 16
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    A tiled map renderer that renders each tile individually, while optionally supplying a depth for each tile.

    Rendering in this manner allows for entities to be behind or in front of buildings based on their y height.
  example: []
  syntax:
    content: public class IndividualTiledMapRenderer
    content.vb: Public Class IndividualTiledMapRenderer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  id: '#ctor(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)'
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: IndividualTiledMapRenderer(TiledMap, GetDepth)
  nameWithType: IndividualTiledMapRenderer.IndividualTiledMapRenderer(TiledMap, IndividualTiledMapRenderer.GetDepth)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.IndividualTiledMapRenderer(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  type: Constructor
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 28
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Creates a new individual tiled map renderer using the given map and depth function
  example: []
  syntax:
    content: public IndividualTiledMapRenderer(TiledMap map = null, IndividualTiledMapRenderer.GetDepth depthFunction = null)
    parameters:
    - id: map
      type: MonoGame.Extended.Tiled.TiledMap
      description: The map to use
    - id: depthFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
      description: The depth function to use. Defaults to a function that assigns a depth of 0 to every tile.
    content.vb: Public Sub New(map As TiledMap = Nothing, depthFunction As IndividualTiledMapRenderer.GetDepth = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor*
  nameWithType.vb: IndividualTiledMapRenderer.New(TiledMap, IndividualTiledMapRenderer.GetDepth)
  fullName.vb: MLEM.Extended.Tiled.IndividualTiledMapRenderer.New(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  name.vb: New(TiledMap, GetDepth)
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  id: SetMap(MonoGame.Extended.Tiled.TiledMap,MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: SetMap(TiledMap, GetDepth)
  nameWithType: IndividualTiledMapRenderer.SetMap(TiledMap, IndividualTiledMapRenderer.GetDepth)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap(MonoGame.Extended.Tiled.TiledMap, MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: SetMap
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 38
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Sets this individual tiled map renderer's map and depth function
  example: []
  syntax:
    content: public void SetMap(TiledMap map, IndividualTiledMapRenderer.GetDepth depthFunction = null)
    parameters:
    - id: map
      type: MonoGame.Extended.Tiled.TiledMap
      description: The map to use
    - id: depthFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
      description: The depth function to use. Defaults to a function that assigns a depth of 0 to every tile.
    content.vb: Public Sub SetMap(map As TiledMap, depthFunction As IndividualTiledMapRenderer.GetDepth = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap*
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo(System.Int32,System.Int32,System.Int32)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo(System.Int32,System.Int32,System.Int32)
  id: UpdateDrawInfo(System.Int32,System.Int32,System.Int32)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: UpdateDrawInfo(int, int, int)
  nameWithType: IndividualTiledMapRenderer.UpdateDrawInfo(int, int, int)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo(int, int, int)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: UpdateDrawInfo
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 67
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Updates the rendering information for the tile in the given layer, x and y.
  example: []
  syntax:
    content: public void UpdateDrawInfo(int layerIndex, int x, int y)
    parameters:
    - id: layerIndex
      type: System.Int32
      description: The index of the layer in <xref href="MonoGame.Extended.Tiled.TiledMap.TileLayers" data-throw-if-not-resolved="false"></xref>
    - id: x
      type: System.Int32
      description: The x coordinate of the tile
    - id: y
      type: System.Int32
      description: The y coordinate of the tile
    content.vb: Public Sub UpdateDrawInfo(layerIndex As Integer, x As Integer, y As Integer)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo*
  nameWithType.vb: IndividualTiledMapRenderer.UpdateDrawInfo(Integer, Integer, Integer)
  fullName.vb: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo(Integer, Integer, Integer)
  name.vb: UpdateDrawInfo(Integer, Integer, Integer)
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  id: Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: Draw(SpriteBatch, RectangleF?, DrawDelegate)
  nameWithType: IndividualTiledMapRenderer.Draw(SpriteBatch, RectangleF?, IndividualTiledMapRenderer.DrawDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Draw
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 88
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Draws this individual tiled map renderer.

    Optionally, a frustum can be supplied that determines which positions, in pixel space, are visible at this time. <xref href="MLEM.Cameras.Camera" data-throw-if-not-resolved="false"></xref> provides <xref href="MLEM.Cameras.Camera.GetVisibleRectangle" data-throw-if-not-resolved="false"></xref> for this purpose.
  example: []
  syntax:
    content: public void Draw(SpriteBatch batch, RectangleF? frustum = null, IndividualTiledMapRenderer.DrawDelegate drawFunction = null)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use
    - id: frustum
      type: System.Nullable{MonoGame.Extended.RectangleF}
      description: The area that is visible, in pixel space.
    - id: drawFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
      description: The draw function to use, or null to use <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub Draw(batch As SpriteBatch, frustum As RectangleF? = Nothing, drawFunction As IndividualTiledMapRenderer.DrawDelegate = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw*
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  id: Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: Add(StaticSpriteBatch, RectangleF?, AddDelegate)
  nameWithType: IndividualTiledMapRenderer.Add(StaticSpriteBatch, RectangleF?, IndividualTiledMapRenderer.AddDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Add
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 102
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Adds this individual tiled map renderer to the given <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.

    Optionally, a frustum can be supplied that determines which positions, in pixel space, are visible at this time. <xref href="MLEM.Cameras.Camera" data-throw-if-not-resolved="false"></xref> provides <xref href="MLEM.Cameras.Camera.GetVisibleRectangle" data-throw-if-not-resolved="false"></xref> for this purpose.
  example: []
  syntax:
    content: public void Add(StaticSpriteBatch batch, RectangleF? frustum = null, IndividualTiledMapRenderer.AddDelegate addFunction = null)
    parameters:
    - id: batch
      type: MLEM.Graphics.StaticSpriteBatch
      description: The static sprite batch to use for drawing.
    - id: frustum
      type: System.Nullable{MonoGame.Extended.RectangleF}
      description: The area that is visible, in pixel space.
    - id: addFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
      description: The add function to use, or null to use <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub Add(batch As StaticSpriteBatch, frustum As RectangleF? = Nothing, addFunction As IndividualTiledMapRenderer.AddDelegate = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add*
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  id: DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: DrawLayer(SpriteBatch, int, RectangleF?, DrawDelegate)
  nameWithType: IndividualTiledMapRenderer.DrawLayer(SpriteBatch, int, RectangleF?, IndividualTiledMapRenderer.DrawDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch, int, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DrawLayer
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 117
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Draws the given layer of this individual tiled map renderer.

    Optionally, a frustum can be supplied that determines which positions, in pixel space, are visible at this time. <xref href="MLEM.Cameras.Camera" data-throw-if-not-resolved="false"></xref> provides <xref href="MLEM.Cameras.Camera.GetVisibleRectangle" data-throw-if-not-resolved="false"></xref> for this purpose.
  example: []
  syntax:
    content: public void DrawLayer(SpriteBatch batch, int layerIndex, RectangleF? frustum = null, IndividualTiledMapRenderer.DrawDelegate drawFunction = null)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use
    - id: layerIndex
      type: System.Int32
      description: The index of the layer in <xref href="MonoGame.Extended.Tiled.TiledMap.TileLayers" data-throw-if-not-resolved="false"></xref>
    - id: frustum
      type: System.Nullable{MonoGame.Extended.RectangleF}
      description: The area that is visible, in pixel space.
    - id: drawFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
      description: The draw function to use, or null to use <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub DrawLayer(batch As SpriteBatch, layerIndex As Integer, frustum As RectangleF? = Nothing, drawFunction As IndividualTiledMapRenderer.DrawDelegate = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer*
  nameWithType.vb: IndividualTiledMapRenderer.DrawLayer(SpriteBatch, Integer, RectangleF?, IndividualTiledMapRenderer.DrawDelegate)
  fullName.vb: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer(Microsoft.Xna.Framework.Graphics.SpriteBatch, Integer, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  name.vb: DrawLayer(SpriteBatch, Integer, RectangleF?, DrawDelegate)
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer(MLEM.Graphics.StaticSpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer(MLEM.Graphics.StaticSpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  id: AddLayer(MLEM.Graphics.StaticSpriteBatch,System.Int32,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: AddLayer(StaticSpriteBatch, int, RectangleF?, AddDelegate)
  nameWithType: IndividualTiledMapRenderer.AddLayer(StaticSpriteBatch, int, RectangleF?, IndividualTiledMapRenderer.AddDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer(MLEM.Graphics.StaticSpriteBatch, int, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AddLayer
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 137
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: >-
    Adds the given layer of this individual tiled map renderer to the given <xref href="MLEM.Graphics.StaticSpriteBatch" data-throw-if-not-resolved="false"></xref>.

    Optionally, a frustum can be supplied that determines which positions, in pixel space, are visible at this time. <xref href="MLEM.Cameras.Camera" data-throw-if-not-resolved="false"></xref> provides <xref href="MLEM.Cameras.Camera.GetVisibleRectangle" data-throw-if-not-resolved="false"></xref> for this purpose.
  example: []
  syntax:
    content: public void AddLayer(StaticSpriteBatch batch, int layerIndex, RectangleF? frustum = null, IndividualTiledMapRenderer.AddDelegate addFunction = null)
    parameters:
    - id: batch
      type: MLEM.Graphics.StaticSpriteBatch
      description: The static sprite batch to use for drawing.
    - id: layerIndex
      type: System.Int32
      description: The index of the layer in <xref href="MonoGame.Extended.Tiled.TiledMap.TileLayers" data-throw-if-not-resolved="false"></xref>.
    - id: frustum
      type: System.Nullable{MonoGame.Extended.RectangleF}
      description: The area that is visible, in pixel space.
    - id: addFunction
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
      description: The add function to use, or null to use <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Sub AddLayer(batch As StaticSpriteBatch, layerIndex As Integer, frustum As RectangleF? = Nothing, addFunction As IndividualTiledMapRenderer.AddDelegate = Nothing)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer*
  nameWithType.vb: IndividualTiledMapRenderer.AddLayer(StaticSpriteBatch, Integer, RectangleF?, IndividualTiledMapRenderer.AddDelegate)
  fullName.vb: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer(MLEM.Graphics.StaticSpriteBatch, Integer, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  name.vb: AddLayer(StaticSpriteBatch, Integer, RectangleF?, AddDelegate)
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations(Microsoft.Xna.Framework.GameTime)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations(Microsoft.Xna.Framework.GameTime)
  id: UpdateAnimations(Microsoft.Xna.Framework.GameTime)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: UpdateAnimations(GameTime)
  nameWithType: IndividualTiledMapRenderer.UpdateAnimations(GameTime)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations(Microsoft.Xna.Framework.GameTime)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: UpdateAnimations
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 153
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: Update all of the animated tiles in this individual tiled map renderer
  example: []
  syntax:
    content: public void UpdateAnimations(GameTime time)
    parameters:
    - id: time
      type: Microsoft.Xna.Framework.GameTime
      description: The game's time
    content.vb: Public Sub UpdateAnimations(time As GameTime)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations*
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  id: DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: DefaultDraw(SpriteBatch, TileDrawInfo)
  nameWithType: IndividualTiledMapRenderer.DefaultDraw(SpriteBatch, IndividualTiledMapRenderer.TileDrawInfo)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultDraw
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 172
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: The default implementation of <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate" data-throw-if-not-resolved="false"></xref> that is used by <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch%2cSystem.Nullable%7bMonoGame.Extended.RectangleF%7d%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)" data-throw-if-not-resolved="false"></xref> if no custom draw function is passed.
  example: []
  syntax:
    content: public static void DefaultDraw(SpriteBatch batch, IndividualTiledMapRenderer.TileDrawInfo info)
    parameters:
    - id: batch
      type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      description: The sprite batch to use for drawing
    - id: info
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
      description: The <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo" data-throw-if-not-resolved="false"></xref> to draw
    content.vb: Public Shared Sub DefaultDraw(batch As SpriteBatch, info As IndividualTiledMapRenderer.TileDrawInfo)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw*
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  id: DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  parent: MLEM.Extended.Tiled.IndividualTiledMapRenderer
  langs:
  - csharp
  - vb
  name: DefaultAdd(StaticSpriteBatch, TileDrawInfo)
  nameWithType: IndividualTiledMapRenderer.DefaultAdd(StaticSpriteBatch, IndividualTiledMapRenderer.TileDrawInfo)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch, MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  type: Method
  source:
    remote:
      path: MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DefaultAdd
    path: ../MLEM.Extended/Tiled/IndividualTiledMapRenderer.cs
    startLine: 184
  assemblies:
  - MLEM.Extended
  namespace: MLEM.Extended.Tiled
  summary: The default implementation of <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate" data-throw-if-not-resolved="false"></xref> that is used by <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch%2cSystem.Nullable%7bMonoGame.Extended.RectangleF%7d%2cMLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)" data-throw-if-not-resolved="false"></xref> if no custom add function is passed.
  example: []
  syntax:
    content: public static void DefaultAdd(StaticSpriteBatch batch, IndividualTiledMapRenderer.TileDrawInfo info)
    parameters:
    - id: batch
      type: MLEM.Graphics.StaticSpriteBatch
      description: The static sprite batch to use for drawing.
    - id: info
      type: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
      description: The <xref href="MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo" data-throw-if-not-resolved="false"></xref> to add.
    content.vb: Public Shared Sub DefaultAdd(batch As StaticSpriteBatch, info As IndividualTiledMapRenderer.TileDrawInfo)
  overload: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd*
references:
- uid: MLEM.Extended.Tiled
  commentId: N:MLEM.Extended.Tiled
  href: MLEM.html
  name: MLEM.Extended.Tiled
  nameWithType: MLEM.Extended.Tiled
  fullName: MLEM.Extended.Tiled
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Tiled
    name: Tiled
    href: MLEM.Extended.Tiled.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Extended
    name: Extended
    href: MLEM.Extended.html
  - name: .
  - uid: MLEM.Extended.Tiled
    name: Tiled
    href: MLEM.Extended.Tiled.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<MLEM.Extended.Tiled.IndividualTiledMapRenderer>(MLEM.Extended.Tiled.IndividualTiledMapRenderer, MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of MLEM.Extended.Tiled.IndividualTiledMapRenderer)(MLEM.Extended.Tiled.IndividualTiledMapRenderer, MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.Copy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<MLEM.Extended.Tiled.IndividualTiledMapRenderer>(MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of MLEM.Extended.Tiled.IndividualTiledMapRenderer)(MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<MLEM.Extended.Tiled.IndividualTiledMapRenderer>(MLEM.Extended.Tiled.IndividualTiledMapRenderer, MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of MLEM.Extended.Tiled.IndividualTiledMapRenderer)(MLEM.Extended.Tiled.IndividualTiledMapRenderer, MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.MLEM.Data.CopyExtensions.DeepCopy``1(System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  parent: MLEM.Data.CopyExtensions
  definition: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<IndividualTiledMapRenderer>(IndividualTiledMapRenderer, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<MLEM.Extended.Tiled.IndividualTiledMapRenderer>(MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of MLEM.Extended.Tiled.IndividualTiledMapRenderer)(MLEM.Extended.Tiled.IndividualTiledMapRenderer, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of IndividualTiledMapRenderer)(IndividualTiledMapRenderer, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: '>'
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(MLEM.Extended.Tiled.IndividualTiledMapRenderer,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: )
  - name: (
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: CopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions
  commentId: T:MLEM.Data.CopyExtensions
  parent: MLEM.Data
  href: MLEM.Data.CopyExtensions.html
  name: CopyExtensions
  nameWithType: CopyExtensions
  fullName: MLEM.Data.CopyExtensions
- uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: Copy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopyInto
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExternal: true
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  nameWithType.vb: CopyExtensions.DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  spec.csharp:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  - name: )
  spec.vb:
  - uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
    name: DeepCopy
    href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Reflection.BindingFlags
    name: BindingFlags
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  - name: ','
  - name: " "
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
  - name: )
- uid: MLEM.Data
  commentId: N:MLEM.Data
  href: MLEM.html
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.#ctor
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer__ctor_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_IndividualTiledMapRenderer_GetDepth_
  name: IndividualTiledMapRenderer
  nameWithType: IndividualTiledMapRenderer.IndividualTiledMapRenderer
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.IndividualTiledMapRenderer
  nameWithType.vb: IndividualTiledMapRenderer.New
  fullName.vb: MLEM.Extended.Tiled.IndividualTiledMapRenderer.New
  name.vb: New
- uid: MonoGame.Extended.Tiled.TiledMap
  commentId: T:MonoGame.Extended.Tiled.TiledMap
  parent: MonoGame.Extended.Tiled
  isExternal: true
  name: TiledMap
  nameWithType: TiledMap
  fullName: MonoGame.Extended.Tiled.TiledMap
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
  commentId: T:MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  name: IndividualTiledMapRenderer.GetDepth
  nameWithType: IndividualTiledMapRenderer.GetDepth
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
    name: GetDepth
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth
    name: GetDepth
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.GetDepth.html
- uid: MonoGame.Extended.Tiled
  commentId: N:MonoGame.Extended.Tiled
  isExternal: true
  name: MonoGame.Extended.Tiled
  nameWithType: MonoGame.Extended.Tiled
  fullName: MonoGame.Extended.Tiled
  spec.csharp:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  - name: .
  - uid: MonoGame.Extended.Tiled
    name: Tiled
    isExternal: true
  spec.vb:
  - uid: MonoGame
    name: MonoGame
    isExternal: true
  - name: .
  - uid: MonoGame.Extended
    name: Extended
    isExternal: true
  - name: .
  - uid: MonoGame.Extended.Tiled
    name: Tiled
    isExternal: true
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_SetMap_MonoGame_Extended_Tiled_TiledMap_MLEM_Extended_Tiled_IndividualTiledMapRenderer_GetDepth_
  name: SetMap
  nameWithType: IndividualTiledMapRenderer.SetMap
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.SetMap
- uid: MonoGame.Extended.Tiled.TiledMap.TileLayers
  commentId: P:MonoGame.Extended.Tiled.TiledMap.TileLayers
  isExternal: true
  name: TileLayers
  nameWithType: TiledMap.TileLayers
  fullName: MonoGame.Extended.Tiled.TiledMap.TileLayers
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_UpdateDrawInfo_System_Int32_System_Int32_System_Int32_
  name: UpdateDrawInfo
  nameWithType: IndividualTiledMapRenderer.UpdateDrawInfo
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateDrawInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  href: MLEM.Cameras.Camera.html
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
- uid: MLEM.Cameras.Camera.GetVisibleRectangle
  commentId: M:MLEM.Cameras.Camera.GetVisibleRectangle
  name: GetVisibleRectangle()
  nameWithType: Camera.GetVisibleRectangle()
  fullName: MLEM.Cameras.Camera.GetVisibleRectangle()
  spec.csharp:
  - uid: MLEM.Cameras.Camera.GetVisibleRectangle
    name: GetVisibleRectangle
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Cameras.Camera.GetVisibleRectangle
    name: GetVisibleRectangle
  - name: (
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  isExternal: true
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultDraw_Microsoft_Xna_Framework_Graphics_SpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  name: DefaultDraw(SpriteBatch, TileDrawInfo)
  nameWithType: IndividualTiledMapRenderer.DefaultDraw(SpriteBatch, IndividualTiledMapRenderer.TileDrawInfo)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch, MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
    name: DefaultDraw
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultDraw_Microsoft_Xna_Framework_Graphics_SpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw(Microsoft.Xna.Framework.Graphics.SpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
    name: DefaultDraw
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultDraw_Microsoft_Xna_Framework_Graphics_SpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Draw_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawDelegate_
  name: Draw
  nameWithType: IndividualTiledMapRenderer.Draw
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw
- uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
  commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: SpriteBatch
  nameWithType: SpriteBatch
  fullName: Microsoft.Xna.Framework.Graphics.SpriteBatch
- uid: System.Nullable{MonoGame.Extended.RectangleF}
  commentId: T:System.Nullable{MonoGame.Extended.RectangleF}
  parent: System
  definition: System.Nullable`1
  name: RectangleF?
  nameWithType: RectangleF?
  fullName: MonoGame.Extended.RectangleF?
  spec.csharp:
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
  commentId: T:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  name: IndividualTiledMapRenderer.DrawDelegate
  nameWithType: IndividualTiledMapRenderer.DrawDelegate
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
    name: DrawDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
    name: DrawDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate.html
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Graphics.StaticSpriteBatch
  commentId: T:MLEM.Graphics.StaticSpriteBatch
  parent: MLEM.Graphics
  href: MLEM.Graphics.StaticSpriteBatch.html
  name: StaticSpriteBatch
  nameWithType: StaticSpriteBatch
  fullName: MLEM.Graphics.StaticSpriteBatch
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultAdd_MLEM_Graphics_StaticSpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  name: DefaultAdd(StaticSpriteBatch, TileDrawInfo)
  nameWithType: IndividualTiledMapRenderer.DefaultAdd(StaticSpriteBatch, IndividualTiledMapRenderer.TileDrawInfo)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch, MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
    name: DefaultAdd
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultAdd_MLEM_Graphics_StaticSpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  - name: (
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd(MLEM.Graphics.StaticSpriteBatch,MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo)
    name: DefaultAdd
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultAdd_MLEM_Graphics_StaticSpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  - name: (
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Add_MLEM_Graphics_StaticSpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddDelegate_
  name: Add
  nameWithType: IndividualTiledMapRenderer.Add
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
  commentId: T:MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  name: IndividualTiledMapRenderer.AddDelegate
  nameWithType: IndividualTiledMapRenderer.AddDelegate
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
    name: AddDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
    name: AddDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate.html
- uid: MLEM.Graphics
  commentId: N:MLEM.Graphics
  href: MLEM.html
  name: MLEM.Graphics
  nameWithType: MLEM.Graphics
  fullName: MLEM.Graphics
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Graphics
    name: Graphics
    href: MLEM.Graphics.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Graphics
    name: Graphics
    href: MLEM.Graphics.html
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawLayer_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Int32_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawDelegate_
  name: DrawLayer
  nameWithType: IndividualTiledMapRenderer.DrawLayer
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawLayer
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddLayer_MLEM_Graphics_StaticSpriteBatch_System_Int32_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddDelegate_
  name: AddLayer
  nameWithType: IndividualTiledMapRenderer.AddLayer
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddLayer
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_UpdateAnimations_Microsoft_Xna_Framework_GameTime_
  name: UpdateAnimations
  nameWithType: IndividualTiledMapRenderer.UpdateAnimations
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.UpdateAnimations
- uid: Microsoft.Xna.Framework.GameTime
  commentId: T:Microsoft.Xna.Framework.GameTime
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: GameTime
  nameWithType: GameTime
  fullName: Microsoft.Xna.Framework.GameTime
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  isExternal: true
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Draw_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawDelegate_
  name: Draw(SpriteBatch, RectangleF?, DrawDelegate)
  nameWithType: IndividualTiledMapRenderer.Draw(SpriteBatch, RectangleF?, IndividualTiledMapRenderer.DrawDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
    name: Draw
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Draw_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawDelegate_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
    name: DrawDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Draw(Microsoft.Xna.Framework.Graphics.SpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate)
    name: Draw
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Draw_Microsoft_Xna_Framework_Graphics_SpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_DrawDelegate_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.SpriteBatch
    name: SpriteBatch
    isExternal: true
  - name: ','
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate
    name: DrawDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DrawDelegate.html
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
  commentId: T:MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
  parent: MLEM.Extended.Tiled
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  name: IndividualTiledMapRenderer.TileDrawInfo
  nameWithType: IndividualTiledMapRenderer.TileDrawInfo
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer
    name: IndividualTiledMapRenderer
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html
  - name: .
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo
    name: TileDrawInfo
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.TileDrawInfo.html
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultDraw_Microsoft_Xna_Framework_Graphics_SpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  name: DefaultDraw
  nameWithType: IndividualTiledMapRenderer.DefaultDraw
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultDraw
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  commentId: M:MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  isExternal: true
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Add_MLEM_Graphics_StaticSpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddDelegate_
  name: Add(StaticSpriteBatch, RectangleF?, AddDelegate)
  nameWithType: IndividualTiledMapRenderer.Add(StaticSpriteBatch, RectangleF?, IndividualTiledMapRenderer.AddDelegate)
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch, MonoGame.Extended.RectangleF?, MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
  spec.csharp:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
    name: Add
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Add_MLEM_Graphics_StaticSpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddDelegate_
  - name: (
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
  - name: ','
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
    name: AddDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate.html
  - name: )
  spec.vb:
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.Add(MLEM.Graphics.StaticSpriteBatch,System.Nullable{MonoGame.Extended.RectangleF},MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate)
    name: Add
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_Add_MLEM_Graphics_StaticSpriteBatch_System_Nullable_MonoGame_Extended_RectangleF__MLEM_Extended_Tiled_IndividualTiledMapRenderer_AddDelegate_
  - name: (
  - uid: MLEM.Graphics.StaticSpriteBatch
    name: StaticSpriteBatch
  - name: ','
  - name: " "
  - uid: MonoGame.Extended.RectangleF
    name: RectangleF
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate
    name: AddDelegate
    href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.AddDelegate.html
  - name: )
- uid: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd*
  commentId: Overload:MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd
  href: MLEM.Extended.Tiled.IndividualTiledMapRenderer.html#MLEM_Extended_Tiled_IndividualTiledMapRenderer_DefaultAdd_MLEM_Graphics_StaticSpriteBatch_MLEM_Extended_Tiled_IndividualTiledMapRenderer_TileDrawInfo_
  name: DefaultAdd
  nameWithType: IndividualTiledMapRenderer.DefaultAdd
  fullName: MLEM.Extended.Tiled.IndividualTiledMapRenderer.DefaultAdd
