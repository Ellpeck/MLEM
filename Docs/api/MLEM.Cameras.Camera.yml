### YamlMime:ManagedReference
items:
- uid: MLEM.Cameras.Camera
  commentId: T:MLEM.Cameras.Camera
  id: Camera
  parent: MLEM.Cameras
  children:
  - MLEM.Cameras.Camera.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Boolean)
  - MLEM.Cameras.Camera.ActualScale
  - MLEM.Cameras.Camera.AutoScaleReferenceSize
  - MLEM.Cameras.Camera.AutoScaleWithScreen
  - MLEM.Cameras.Camera.ConstrainWorldBounds(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  - MLEM.Cameras.Camera.Epsilon
  - MLEM.Cameras.Camera.GetVisibleRectangle
  - MLEM.Cameras.Camera.LookingPosition
  - MLEM.Cameras.Camera.Max
  - MLEM.Cameras.Camera.MaxScale
  - MLEM.Cameras.Camera.MinScale
  - MLEM.Cameras.Camera.Position
  - MLEM.Cameras.Camera.RoundPosition
  - MLEM.Cameras.Camera.Scale
  - MLEM.Cameras.Camera.ScaledViewport
  - MLEM.Cameras.Camera.ToCameraPos(Microsoft.Xna.Framework.Vector2)
  - MLEM.Cameras.Camera.ToWorldPos(Microsoft.Xna.Framework.Vector2)
  - MLEM.Cameras.Camera.ViewMatrix
  - MLEM.Cameras.Camera.Zoom(System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2})
  langs:
  - csharp
  - vb
  name: Camera
  nameWithType: Camera
  fullName: MLEM.Cameras.Camera
  type: Class
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Camera
    path: ../MLEM/Cameras/Camera.cs
    startLine: 10
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    Represents a simple, orthographic 2-dimensional camera that can be moved, scaled and that supports automatic viewport sizing.

    To draw with the camera's positioning and scaling applied, use <xref href="MLEM.Cameras.Camera.ViewMatrix" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class Camera
    content.vb: Public Class Camera
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Cameras.Camera.Epsilon
  commentId: F:MLEM.Cameras.Camera.Epsilon
  id: Epsilon
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Epsilon
  nameWithType: Camera.Epsilon
  fullName: MLEM.Cameras.Camera.Epsilon
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Epsilon
    path: ../MLEM/Cameras/Camera.cs
    startLine: 16
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    This field holds an epsilon value used in some camera calculations to mitigate floating point rounding inaccuracies.

    If camera <xref href="MLEM.Cameras.Camera.Position" data-throw-if-not-resolved="false"></xref> or <xref href="MLEM.Cameras.Camera.ScaledViewport" data-throw-if-not-resolved="false"></xref> size are extremely small or extremely big, this value can be reduced or increased.
  example: []
  syntax:
    content: public static float Epsilon
    return:
      type: System.Single
    content.vb: Public Shared Epsilon As Single
- uid: MLEM.Cameras.Camera.Position
  commentId: F:MLEM.Cameras.Camera.Position
  id: Position
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Position
  nameWithType: Camera.Position
  fullName: MLEM.Cameras.Camera.Position
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Position
    path: ../MLEM/Cameras/Camera.cs
    startLine: 22
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    The top-left corner of the camera's viewport.

    <xref href="MLEM.Cameras.Camera.LookingPosition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Vector2 Position
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Position As Vector2
- uid: MLEM.Cameras.Camera.Scale
  commentId: P:MLEM.Cameras.Camera.Scale
  id: Scale
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Scale
  nameWithType: Camera.Scale
  fullName: MLEM.Cameras.Camera.Scale
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Scale
    path: ../MLEM/Cameras/Camera.cs
    startLine: 26
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The scale that this camera's <xref href="MLEM.Cameras.Camera.ViewMatrix" data-throw-if-not-resolved="false"></xref> should have.
  example: []
  syntax:
    content: public float Scale { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Scale As Single
  overload: MLEM.Cameras.Camera.Scale*
- uid: MLEM.Cameras.Camera.MinScale
  commentId: F:MLEM.Cameras.Camera.MinScale
  id: MinScale
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: MinScale
  nameWithType: Camera.MinScale
  fullName: MLEM.Cameras.Camera.MinScale
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MinScale
    path: ../MLEM/Cameras/Camera.cs
    startLine: 33
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The minimum <xref href="MLEM.Cameras.Camera.Scale" data-throw-if-not-resolved="false"></xref> that the camera can have
  example: []
  syntax:
    content: public float MinScale
    return:
      type: System.Single
    content.vb: Public MinScale As Single
- uid: MLEM.Cameras.Camera.MaxScale
  commentId: F:MLEM.Cameras.Camera.MaxScale
  id: MaxScale
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: MaxScale
  nameWithType: Camera.MaxScale
  fullName: MLEM.Cameras.Camera.MaxScale
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MaxScale
    path: ../MLEM/Cameras/Camera.cs
    startLine: 37
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The maximum <xref href="MLEM.Cameras.Camera.Scale" data-throw-if-not-resolved="false"></xref> that the camera can have
  example: []
  syntax:
    content: public float MaxScale
    return:
      type: System.Single
    content.vb: Public MaxScale As Single
- uid: MLEM.Cameras.Camera.AutoScaleWithScreen
  commentId: F:MLEM.Cameras.Camera.AutoScaleWithScreen
  id: AutoScaleWithScreen
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: AutoScaleWithScreen
  nameWithType: Camera.AutoScaleWithScreen
  fullName: MLEM.Cameras.Camera.AutoScaleWithScreen
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AutoScaleWithScreen
    path: ../MLEM/Cameras/Camera.cs
    startLine: 42
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    If this is true, the camera will automatically adapt to changed screen sizes.

    You can use <xref href="MLEM.Cameras.Camera.AutoScaleReferenceSize" data-throw-if-not-resolved="false"></xref> to determine the initial screen size that this camera should base its calculations on.
  example: []
  syntax:
    content: public bool AutoScaleWithScreen
    return:
      type: System.Boolean
    content.vb: Public AutoScaleWithScreen As Boolean
- uid: MLEM.Cameras.Camera.AutoScaleReferenceSize
  commentId: F:MLEM.Cameras.Camera.AutoScaleReferenceSize
  id: AutoScaleReferenceSize
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: AutoScaleReferenceSize
  nameWithType: Camera.AutoScaleReferenceSize
  fullName: MLEM.Cameras.Camera.AutoScaleReferenceSize
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: AutoScaleReferenceSize
    path: ../MLEM/Cameras/Camera.cs
    startLine: 46
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: <xref href="MLEM.Cameras.Camera.AutoScaleWithScreen" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Point AutoScaleReferenceSize
    return:
      type: Microsoft.Xna.Framework.Point
    content.vb: Public AutoScaleReferenceSize As Point
- uid: MLEM.Cameras.Camera.ActualScale
  commentId: P:MLEM.Cameras.Camera.ActualScale
  id: ActualScale
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ActualScale
  nameWithType: Camera.ActualScale
  fullName: MLEM.Cameras.Camera.ActualScale
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ActualScale
    path: ../MLEM/Cameras/Camera.cs
    startLine: 50
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The scale that this camera currently has, based on <xref href="MLEM.Cameras.Camera.Scale" data-throw-if-not-resolved="false"></xref> and <xref href="MLEM.Cameras.Camera.AutoScaleReferenceSize" data-throw-if-not-resolved="false"></xref> if <xref href="MLEM.Cameras.Camera.AutoScaleWithScreen" data-throw-if-not-resolved="false"></xref> is true.
  example: []
  syntax:
    content: public float ActualScale { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ActualScale As Single
  overload: MLEM.Cameras.Camera.ActualScale*
- uid: MLEM.Cameras.Camera.ViewMatrix
  commentId: P:MLEM.Cameras.Camera.ViewMatrix
  id: ViewMatrix
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ViewMatrix
  nameWithType: Camera.ViewMatrix
  fullName: MLEM.Cameras.Camera.ViewMatrix
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ViewMatrix
    path: ../MLEM/Cameras/Camera.cs
    startLine: 61
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    The matrix that this camera "sees", based on its position and scale.

    Use this in your <code>SpriteBatch.Begin</code> calls to render based on the camera's viewport.
  example: []
  syntax:
    content: public Matrix ViewMatrix { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Matrix
    content.vb: Public ReadOnly Property ViewMatrix As Matrix
  overload: MLEM.Cameras.Camera.ViewMatrix*
- uid: MLEM.Cameras.Camera.Max
  commentId: P:MLEM.Cameras.Camera.Max
  id: Max
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Max
  nameWithType: Camera.Max
  fullName: MLEM.Cameras.Camera.Max
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Max
    path: ../MLEM/Cameras/Camera.cs
    startLine: 74
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    The bottom-right corner of the camera's viewport

    <xref href="MLEM.Cameras.Camera.LookingPosition" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Vector2 Max { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property Max As Vector2
  overload: MLEM.Cameras.Camera.Max*
- uid: MLEM.Cameras.Camera.LookingPosition
  commentId: P:MLEM.Cameras.Camera.LookingPosition
  id: LookingPosition
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: LookingPosition
  nameWithType: Camera.LookingPosition
  fullName: MLEM.Cameras.Camera.LookingPosition
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: LookingPosition
    path: ../MLEM/Cameras/Camera.cs
    startLine: 81
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The center of the camera's viewport, or the position that the camera is looking at.
  example: []
  syntax:
    content: public Vector2 LookingPosition { get; set; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public Property LookingPosition As Vector2
  overload: MLEM.Cameras.Camera.LookingPosition*
- uid: MLEM.Cameras.Camera.ScaledViewport
  commentId: P:MLEM.Cameras.Camera.ScaledViewport
  id: ScaledViewport
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ScaledViewport
  nameWithType: Camera.ScaledViewport
  fullName: MLEM.Cameras.Camera.ScaledViewport
  type: Property
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ScaledViewport
    path: ../MLEM/Cameras/Camera.cs
    startLine: 88
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: The viewport of this camera, based on the game's <xref href="Microsoft.Xna.Framework.Graphics.GraphicsDevice.Viewport" data-throw-if-not-resolved="false"></xref> and this camera's <xref href="MLEM.Cameras.Camera.ActualScale" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public Vector2 ScaledViewport { get; }
    parameters: []
    return:
      type: Microsoft.Xna.Framework.Vector2
    content.vb: Public ReadOnly Property ScaledViewport As Vector2
  overload: MLEM.Cameras.Camera.ScaledViewport*
- uid: MLEM.Cameras.Camera.RoundPosition
  commentId: F:MLEM.Cameras.Camera.RoundPosition
  id: RoundPosition
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: RoundPosition
  nameWithType: Camera.RoundPosition
  fullName: MLEM.Cameras.Camera.RoundPosition
  type: Field
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: RoundPosition
    path: ../MLEM/Cameras/Camera.cs
    startLine: 93
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    Whether the camera's <xref href="MLEM.Cameras.Camera.Position" data-throw-if-not-resolved="false"></xref> should be rounded to full integers when calculating the <xref href="MLEM.Cameras.Camera.ViewMatrix" data-throw-if-not-resolved="false"></xref>.

    If this value is true, the occurence of rendering fragments due to floating point rounding might be reduced.
  example: []
  syntax:
    content: public bool RoundPosition
    return:
      type: System.Boolean
    content.vb: Public RoundPosition As Boolean
- uid: MLEM.Cameras.Camera.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Boolean)
  commentId: M:MLEM.Cameras.Camera.#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Boolean)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.GraphicsDevice,System.Boolean)'
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Camera(GraphicsDevice, bool)
  nameWithType: Camera.Camera(GraphicsDevice, bool)
  fullName: MLEM.Cameras.Camera.Camera(Microsoft.Xna.Framework.Graphics.GraphicsDevice, bool)
  type: Constructor
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Cameras/Camera.cs
    startLine: 104
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: Creates a new camera.
  example: []
  syntax:
    content: public Camera(GraphicsDevice graphicsDevice, bool roundPosition = true)
    parameters:
    - id: graphicsDevice
      type: Microsoft.Xna.Framework.Graphics.GraphicsDevice
      description: The game's graphics device
    - id: roundPosition
      type: System.Boolean
      description: Whether the camera's <xref href="MLEM.Cameras.Camera.Position" data-throw-if-not-resolved="false"></xref> should be rounded to full integers when calculating the <xref href="MLEM.Cameras.Camera.ViewMatrix" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Sub New(graphicsDevice As GraphicsDevice, roundPosition As Boolean = True)
  overload: MLEM.Cameras.Camera.#ctor*
  nameWithType.vb: Camera.New(GraphicsDevice, Boolean)
  fullName.vb: MLEM.Cameras.Camera.New(Microsoft.Xna.Framework.Graphics.GraphicsDevice, Boolean)
  name.vb: New(GraphicsDevice, Boolean)
- uid: MLEM.Cameras.Camera.ToWorldPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Cameras.Camera.ToWorldPos(Microsoft.Xna.Framework.Vector2)
  id: ToWorldPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ToWorldPos(Vector2)
  nameWithType: Camera.ToWorldPos(Vector2)
  fullName: MLEM.Cameras.Camera.ToWorldPos(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToWorldPos
    path: ../MLEM/Cameras/Camera.cs
    startLine: 115
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: Converts a given position in screen space to world space
  example: []
  syntax:
    content: public Vector2 ToWorldPos(Vector2 pos)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position in screen space
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The position in world space
    content.vb: Public Function ToWorldPos(pos As Vector2) As Vector2
  overload: MLEM.Cameras.Camera.ToWorldPos*
- uid: MLEM.Cameras.Camera.ToCameraPos(Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Cameras.Camera.ToCameraPos(Microsoft.Xna.Framework.Vector2)
  id: ToCameraPos(Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ToCameraPos(Vector2)
  nameWithType: Camera.ToCameraPos(Vector2)
  fullName: MLEM.Cameras.Camera.ToCameraPos(Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToCameraPos
    path: ../MLEM/Cameras/Camera.cs
    startLine: 124
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: Converts a given position in world space to screen space
  example: []
  syntax:
    content: public Vector2 ToCameraPos(Vector2 pos)
    parameters:
    - id: pos
      type: Microsoft.Xna.Framework.Vector2
      description: The position in world space
    return:
      type: Microsoft.Xna.Framework.Vector2
      description: The position in camera space
    content.vb: Public Function ToCameraPos(pos As Vector2) As Vector2
  overload: MLEM.Cameras.Camera.ToCameraPos*
- uid: MLEM.Cameras.Camera.GetVisibleRectangle
  commentId: M:MLEM.Cameras.Camera.GetVisibleRectangle
  id: GetVisibleRectangle
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: GetVisibleRectangle()
  nameWithType: Camera.GetVisibleRectangle()
  fullName: MLEM.Cameras.Camera.GetVisibleRectangle()
  type: Method
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetVisibleRectangle
    path: ../MLEM/Cameras/Camera.cs
    startLine: 133
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    Returns the area that this camera can see, in world space.

    This can be useful for culling of tile and other entity renderers.
  example: []
  syntax:
    content: public RectangleF GetVisibleRectangle()
    return:
      type: MLEM.Maths.RectangleF
      description: A rectangle that represents the camera's visible area in world space
    content.vb: Public Function GetVisibleRectangle() As RectangleF
  overload: MLEM.Cameras.Camera.GetVisibleRectangle*
- uid: MLEM.Cameras.Camera.ConstrainWorldBounds(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  commentId: M:MLEM.Cameras.Camera.ConstrainWorldBounds(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  id: ConstrainWorldBounds(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: ConstrainWorldBounds(Vector2, Vector2)
  nameWithType: Camera.ConstrainWorldBounds(Vector2, Vector2)
  fullName: MLEM.Cameras.Camera.ConstrainWorldBounds(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
  type: Method
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ConstrainWorldBounds
    path: ../MLEM/Cameras/Camera.cs
    startLine: 145
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: >-
    Forces the camera's bounds into the given min and max positions in world space.

    If the space represented by the given values is smaller than what the camera can see, its position will be forced into the center of the area.
  example: []
  syntax:
    content: public bool ConstrainWorldBounds(Vector2 min, Vector2 max)
    parameters:
    - id: min
      type: Microsoft.Xna.Framework.Vector2
      description: The top left bound, in world space
    - id: max
      type: Microsoft.Xna.Framework.Vector2
      description: The bottom right bound, in world space
    return:
      type: System.Boolean
      description: Whether or not the camera's position changed as a result of the constraint
    content.vb: Public Function ConstrainWorldBounds(min As Vector2, max As Vector2) As Boolean
  overload: MLEM.Cameras.Camera.ConstrainWorldBounds*
- uid: MLEM.Cameras.Camera.Zoom(System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2})
  commentId: M:MLEM.Cameras.Camera.Zoom(System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2})
  id: Zoom(System.Single,System.Nullable{Microsoft.Xna.Framework.Vector2})
  parent: MLEM.Cameras.Camera
  langs:
  - csharp
  - vb
  name: Zoom(float, Vector2?)
  nameWithType: Camera.Zoom(float, Vector2?)
  fullName: MLEM.Cameras.Camera.Zoom(float, Microsoft.Xna.Framework.Vector2?)
  type: Method
  source:
    remote:
      path: MLEM/Cameras/Camera.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Zoom
    path: ../MLEM/Cameras/Camera.cs
    startLine: 173
  assemblies:
  - MLEM
  namespace: MLEM.Cameras
  summary: Zoom in the camera's view by a given amount, optionally focusing on a given center point.
  example: []
  syntax:
    content: public void Zoom(float delta, Vector2? zoomCenter = null)
    parameters:
    - id: delta
      type: System.Single
      description: The amount to zoom in or out by
    - id: zoomCenter
      type: System.Nullable{Microsoft.Xna.Framework.Vector2}
      description: The position that should be regarded as the zoom's center, in screen space. The default value is the center.
    content.vb: Public Sub Zoom(delta As Single, zoomCenter As Vector2? = Nothing)
  overload: MLEM.Cameras.Camera.Zoom*
  nameWithType.vb: Camera.Zoom(Single, Vector2?)
  fullName.vb: MLEM.Cameras.Camera.Zoom(Single, Microsoft.Xna.Framework.Vector2?)
  name.vb: Zoom(Single, Vector2?)
references:
- uid: MLEM.Cameras.Camera.ViewMatrix
  commentId: P:MLEM.Cameras.Camera.ViewMatrix
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ViewMatrix
  name: ViewMatrix
  nameWithType: Camera.ViewMatrix
  fullName: MLEM.Cameras.Camera.ViewMatrix
- uid: MLEM.Cameras
  commentId: N:MLEM.Cameras
  href: MLEM.html
  name: MLEM.Cameras
  nameWithType: MLEM.Cameras
  fullName: MLEM.Cameras
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Cameras
    name: Cameras
    href: MLEM.Cameras.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Cameras
    name: Cameras
    href: MLEM.Cameras.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Cameras.Camera.Position
  commentId: F:MLEM.Cameras.Camera.Position
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_Position
  name: Position
  nameWithType: Camera.Position
  fullName: MLEM.Cameras.Camera.Position
- uid: MLEM.Cameras.Camera.ScaledViewport
  commentId: P:MLEM.Cameras.Camera.ScaledViewport
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ScaledViewport
  name: ScaledViewport
  nameWithType: Camera.ScaledViewport
  fullName: MLEM.Cameras.Camera.ScaledViewport
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Cameras.Camera.LookingPosition
  commentId: P:MLEM.Cameras.Camera.LookingPosition
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_LookingPosition
  name: LookingPosition
  nameWithType: Camera.LookingPosition
  fullName: MLEM.Cameras.Camera.LookingPosition
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Cameras.Camera.Scale*
  commentId: Overload:MLEM.Cameras.Camera.Scale
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_Scale
  name: Scale
  nameWithType: Camera.Scale
  fullName: MLEM.Cameras.Camera.Scale
- uid: MLEM.Cameras.Camera.Scale
  commentId: P:MLEM.Cameras.Camera.Scale
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_Scale
  name: Scale
  nameWithType: Camera.Scale
  fullName: MLEM.Cameras.Camera.Scale
- uid: MLEM.Cameras.Camera.AutoScaleReferenceSize
  commentId: F:MLEM.Cameras.Camera.AutoScaleReferenceSize
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_AutoScaleReferenceSize
  name: AutoScaleReferenceSize
  nameWithType: Camera.AutoScaleReferenceSize
  fullName: MLEM.Cameras.Camera.AutoScaleReferenceSize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Cameras.Camera.AutoScaleWithScreen
  commentId: F:MLEM.Cameras.Camera.AutoScaleWithScreen
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_AutoScaleWithScreen
  name: AutoScaleWithScreen
  nameWithType: Camera.AutoScaleWithScreen
  fullName: MLEM.Cameras.Camera.AutoScaleWithScreen
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: MLEM.Cameras.Camera.ActualScale*
  commentId: Overload:MLEM.Cameras.Camera.ActualScale
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ActualScale
  name: ActualScale
  nameWithType: Camera.ActualScale
  fullName: MLEM.Cameras.Camera.ActualScale
- uid: MLEM.Cameras.Camera.ViewMatrix*
  commentId: Overload:MLEM.Cameras.Camera.ViewMatrix
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ViewMatrix
  name: ViewMatrix
  nameWithType: Camera.ViewMatrix
  fullName: MLEM.Cameras.Camera.ViewMatrix
- uid: Microsoft.Xna.Framework.Matrix
  commentId: T:Microsoft.Xna.Framework.Matrix
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Matrix
  nameWithType: Matrix
  fullName: Microsoft.Xna.Framework.Matrix
- uid: MLEM.Cameras.Camera.Max*
  commentId: Overload:MLEM.Cameras.Camera.Max
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_Max
  name: Max
  nameWithType: Camera.Max
  fullName: MLEM.Cameras.Camera.Max
- uid: MLEM.Cameras.Camera.LookingPosition*
  commentId: Overload:MLEM.Cameras.Camera.LookingPosition
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_LookingPosition
  name: LookingPosition
  nameWithType: Camera.LookingPosition
  fullName: MLEM.Cameras.Camera.LookingPosition
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice.Viewport
  commentId: P:Microsoft.Xna.Framework.Graphics.GraphicsDevice.Viewport
  isExternal: true
  name: Viewport
  nameWithType: GraphicsDevice.Viewport
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice.Viewport
- uid: MLEM.Cameras.Camera.ActualScale
  commentId: P:MLEM.Cameras.Camera.ActualScale
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ActualScale
  name: ActualScale
  nameWithType: Camera.ActualScale
  fullName: MLEM.Cameras.Camera.ActualScale
- uid: MLEM.Cameras.Camera.ScaledViewport*
  commentId: Overload:MLEM.Cameras.Camera.ScaledViewport
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ScaledViewport
  name: ScaledViewport
  nameWithType: Camera.ScaledViewport
  fullName: MLEM.Cameras.Camera.ScaledViewport
- uid: MLEM.Cameras.Camera.#ctor*
  commentId: Overload:MLEM.Cameras.Camera.#ctor
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera__ctor_Microsoft_Xna_Framework_Graphics_GraphicsDevice_System_Boolean_
  name: Camera
  nameWithType: Camera.Camera
  fullName: MLEM.Cameras.Camera.Camera
  nameWithType.vb: Camera.New
  fullName.vb: MLEM.Cameras.Camera.New
  name.vb: New
- uid: Microsoft.Xna.Framework.Graphics.GraphicsDevice
  commentId: T:Microsoft.Xna.Framework.Graphics.GraphicsDevice
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: GraphicsDevice
  nameWithType: GraphicsDevice
  fullName: Microsoft.Xna.Framework.Graphics.GraphicsDevice
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Cameras.Camera.ToWorldPos*
  commentId: Overload:MLEM.Cameras.Camera.ToWorldPos
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ToWorldPos_Microsoft_Xna_Framework_Vector2_
  name: ToWorldPos
  nameWithType: Camera.ToWorldPos
  fullName: MLEM.Cameras.Camera.ToWorldPos
- uid: MLEM.Cameras.Camera.ToCameraPos*
  commentId: Overload:MLEM.Cameras.Camera.ToCameraPos
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ToCameraPos_Microsoft_Xna_Framework_Vector2_
  name: ToCameraPos
  nameWithType: Camera.ToCameraPos
  fullName: MLEM.Cameras.Camera.ToCameraPos
- uid: MLEM.Cameras.Camera.GetVisibleRectangle*
  commentId: Overload:MLEM.Cameras.Camera.GetVisibleRectangle
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_GetVisibleRectangle
  name: GetVisibleRectangle
  nameWithType: Camera.GetVisibleRectangle
  fullName: MLEM.Cameras.Camera.GetVisibleRectangle
- uid: MLEM.Maths.RectangleF
  commentId: T:MLEM.Maths.RectangleF
  parent: MLEM.Maths
  href: MLEM.Maths.RectangleF.html
  name: RectangleF
  nameWithType: RectangleF
  fullName: MLEM.Maths.RectangleF
- uid: MLEM.Maths
  commentId: N:MLEM.Maths
  href: MLEM.html
  name: MLEM.Maths
  nameWithType: MLEM.Maths
  fullName: MLEM.Maths
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Maths
    name: Maths
    href: MLEM.Maths.html
- uid: MLEM.Cameras.Camera.ConstrainWorldBounds*
  commentId: Overload:MLEM.Cameras.Camera.ConstrainWorldBounds
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_ConstrainWorldBounds_Microsoft_Xna_Framework_Vector2_Microsoft_Xna_Framework_Vector2_
  name: ConstrainWorldBounds
  nameWithType: Camera.ConstrainWorldBounds
  fullName: MLEM.Cameras.Camera.ConstrainWorldBounds
- uid: MLEM.Cameras.Camera.Zoom*
  commentId: Overload:MLEM.Cameras.Camera.Zoom
  href: MLEM.Cameras.Camera.html#MLEM_Cameras_Camera_Zoom_System_Single_System_Nullable_Microsoft_Xna_Framework_Vector2__
  name: Zoom
  nameWithType: Camera.Zoom
  fullName: MLEM.Cameras.Camera.Zoom
- uid: System.Nullable{Microsoft.Xna.Framework.Vector2}
  commentId: T:System.Nullable{Microsoft.Xna.Framework.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: Microsoft.Xna.Framework.Vector2?
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
