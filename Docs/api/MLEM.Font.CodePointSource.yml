### YamlMime:ManagedReference
items:
- uid: MLEM.Font.CodePointSource
  commentId: T:MLEM.Font.CodePointSource
  id: CodePointSource
  parent: MLEM.Font
  children:
  - MLEM.Font.CodePointSource.#ctor(System.String)
  - MLEM.Font.CodePointSource.#ctor(System.Text.StringBuilder)
  - MLEM.Font.CodePointSource.EnsureSurrogateBoundary(System.Int32,System.Boolean)
  - MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
  - MLEM.Font.CodePointSource.GetEnumerator
  - MLEM.Font.CodePointSource.Length
  - MLEM.Font.CodePointSource.ToString(System.Int32)
  langs:
  - csharp
  - vb
  name: CodePointSource
  nameWithType: CodePointSource
  fullName: MLEM.Font.CodePointSource
  type: Struct
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: CodePointSource
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 8
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: A code point source is a wrapper around a <xref href="System.String" data-throw-if-not-resolved="false"></xref> or <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref> that allows retrieving UTF-32 code points at a given index using <xref href="MLEM.Font.CodePointSource.GetCodePoint(System.Int32%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>. Additionally, it allows enumerating every code point in the underlying <xref href="System.String" data-throw-if-not-resolved="false"></xref> or <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref>. This class also contains <xref href="MLEM.Font.CodePointSource.ToString(System.Int32)" data-throw-if-not-resolved="false"></xref>, which converts a code point into its <xref href="System.String" data-throw-if-not-resolved="false"></xref> representation, but caches the result to avoid allocating excess memory.
  example: []
  syntax:
    content: 'public readonly struct CodePointSource : IEnumerable<int>, IEnumerable'
    content.vb: Public Structure CodePointSource Implements IEnumerable(Of Integer), IEnumerable
  implements:
  - System.Collections.Generic.IEnumerable{System.Int32}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  extensionMethods:
  - System.Collections.Generic.IEnumerable{System.Int32}.MLEM.Misc.CollectionExtensions.Append``1(System.Int32)
  - System.Collections.Generic.IEnumerable{System.Int32}.MLEM.Misc.CollectionExtensions.Prepend``1(System.Int32)
- uid: MLEM.Font.CodePointSource.Length
  commentId: P:MLEM.Font.CodePointSource.Length
  id: Length
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: CodePointSource.Length
  fullName: MLEM.Font.CodePointSource.Length
  type: Property
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Length
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 20
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    The length of this code point, in characters.

    Note that this is not representative of the amount of code points in this source.
  example: []
  syntax:
    content: public int Length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Length As Integer
  overload: MLEM.Font.CodePointSource.Length*
- uid: MLEM.Font.CodePointSource.#ctor(System.String)
  commentId: M:MLEM.Font.CodePointSource.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: CodePointSource(string)
  nameWithType: CodePointSource.CodePointSource(string)
  fullName: MLEM.Font.CodePointSource.CodePointSource(string)
  type: Constructor
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 26
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Creates a new code point source from the given <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CodePointSource(string strg)
    parameters:
    - id: strg
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> whose code points to inspect.
    content.vb: Public Sub New(strg As String)
  overload: MLEM.Font.CodePointSource.#ctor*
  nameWithType.vb: CodePointSource.New(String)
  fullName.vb: MLEM.Font.CodePointSource.New(String)
  name.vb: New(String)
- uid: MLEM.Font.CodePointSource.#ctor(System.Text.StringBuilder)
  commentId: M:MLEM.Font.CodePointSource.#ctor(System.Text.StringBuilder)
  id: '#ctor(System.Text.StringBuilder)'
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: CodePointSource(StringBuilder)
  nameWithType: CodePointSource.CodePointSource(StringBuilder)
  fullName: MLEM.Font.CodePointSource.CodePointSource(System.Text.StringBuilder)
  type: Constructor
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 35
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Creates a new code point source from the given <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public CodePointSource(StringBuilder builder)
    parameters:
    - id: builder
      type: System.Text.StringBuilder
      description: The <xref href="System.Text.StringBuilder" data-throw-if-not-resolved="false"></xref> whose code points to inspect.
    content.vb: Public Sub New(builder As StringBuilder)
  overload: MLEM.Font.CodePointSource.#ctor*
  nameWithType.vb: CodePointSource.New(StringBuilder)
  fullName.vb: MLEM.Font.CodePointSource.New(System.Text.StringBuilder)
  name.vb: New(StringBuilder)
- uid: MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
  commentId: M:MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
  id: GetCodePoint(System.Int32,System.Boolean)
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: GetCodePoint(int, bool)
  nameWithType: CodePointSource.GetCodePoint(int, bool)
  fullName: MLEM.Font.CodePointSource.GetCodePoint(int, bool)
  type: Method
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetCodePoint
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 47
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: >-
    Returns the code point at the given <code class="paramref">index</code> in this code point source's underlying string, where the index is measured in characters and not code points.

    The resulting code point will either be a single <xref href="System.Char" data-throw-if-not-resolved="false"></xref> cast to an <xref href="System.Int32" data-throw-if-not-resolved="false"></xref>, at which point the returned length will be 1, or a UTF-32 <xref href="System.Int32" data-throw-if-not-resolved="false"></xref> character made up of two <xref href="System.Char" data-throw-if-not-resolved="false"></xref> values, at which point the returned length will be 2.
  example: []
  syntax:
    content: public (int CodePoint, int Length) GetCodePoint(int index, bool indexLowSurrogate = false)
    parameters:
    - id: index
      type: System.Int32
      description: The index at which to return the code point, which is measured in characters.
    - id: indexLowSurrogate
      type: System.Boolean
      description: Whether the <code class="paramref">index</code> represents a low surrogate. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">false</a>, the <code class="paramref">index</code> represents a high surrogate and the low surrogate will be looked for in the following character. If this is <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/builtin-types/bool">true</a>, the <code class="paramref">index</code> represents a low surrogate and the high surrogate will be looked for in the previous character.
    return:
      type: System.ValueTuple{System.Int32,System.Int32}
      description: The code point at the given location, as well as its length.
    content.vb: Public Function GetCodePoint(index As Integer, indexLowSurrogate As Boolean = False) As (CodePoint As Integer, Length As Integer)
  overload: MLEM.Font.CodePointSource.GetCodePoint*
  nameWithType.vb: CodePointSource.GetCodePoint(Integer, Boolean)
  fullName.vb: MLEM.Font.CodePointSource.GetCodePoint(Integer, Boolean)
  name.vb: GetCodePoint(Integer, Boolean)
- uid: MLEM.Font.CodePointSource.EnsureSurrogateBoundary(System.Int32,System.Boolean)
  commentId: M:MLEM.Font.CodePointSource.EnsureSurrogateBoundary(System.Int32,System.Boolean)
  id: EnsureSurrogateBoundary(System.Int32,System.Boolean)
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: EnsureSurrogateBoundary(int, bool)
  nameWithType: CodePointSource.EnsureSurrogateBoundary(int, bool)
  fullName: MLEM.Font.CodePointSource.EnsureSurrogateBoundary(int, bool)
  type: Method
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: EnsureSurrogateBoundary
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 71
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Returns an index in this code point source that is as close to <code class="paramref">index</code> as possible, but not between two members of a surrogate pair. If the <code class="paramref">index</code> is already not between surrogate pairs, it is returned unchanged.
  example: []
  syntax:
    content: public int EnsureSurrogateBoundary(int index, bool increase)
    parameters:
    - id: index
      type: System.Int32
      description: The index to ensure is not between surrogates.
    - id: increase
      type: System.Boolean
      description: Whether the returned index should be increased by 1 (instead of decreased by 1) when it is between surrogates.
    return:
      type: System.Int32
      description: An index close to <code class="paramref">index</code>, but not between surrogates.
    content.vb: Public Function EnsureSurrogateBoundary(index As Integer, increase As Boolean) As Integer
  overload: MLEM.Font.CodePointSource.EnsureSurrogateBoundary*
  nameWithType.vb: CodePointSource.EnsureSurrogateBoundary(Integer, Boolean)
  fullName.vb: MLEM.Font.CodePointSource.EnsureSurrogateBoundary(Integer, Boolean)
  name.vb: EnsureSurrogateBoundary(Integer, Boolean)
- uid: MLEM.Font.CodePointSource.GetEnumerator
  commentId: M:MLEM.Font.CodePointSource.GetEnumerator
  id: GetEnumerator
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: CodePointSource.GetEnumerator()
  fullName: MLEM.Font.CodePointSource.GetEnumerator()
  type: Method
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: GetEnumerator
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 80
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Returns an enumerator that iterates through the collection.
  example: []
  syntax:
    content: public IEnumerator<int> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Int32}
      description: A <xref href="System.Collections.Generic.IEnumerator%601" data-throw-if-not-resolved="false"></xref> that can be used to iterate through the collection.
    content.vb: Public Function GetEnumerator() As IEnumerator(Of Integer)
  overload: MLEM.Font.CodePointSource.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Int32}.GetEnumerator
- uid: MLEM.Font.CodePointSource.ToString(System.Int32)
  commentId: M:MLEM.Font.CodePointSource.ToString(System.Int32)
  id: ToString(System.Int32)
  parent: MLEM.Font.CodePointSource
  langs:
  - csharp
  - vb
  name: ToString(int)
  nameWithType: CodePointSource.ToString(int)
  fullName: MLEM.Font.CodePointSource.ToString(int)
  type: Method
  source:
    remote:
      path: MLEM/Font/CodePointSource.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToString
    path: ../MLEM/Font/CodePointSource.cs
    startLine: 101
  assemblies:
  - MLEM
  namespace: MLEM.Font
  summary: Converts the given UTF-32 <code class="paramref">codePoint</code> into a string using <xref href="System.Char.ConvertFromUtf32(System.Int32)" data-throw-if-not-resolved="false"></xref>, but caches the result in a <xref href="System.Collections.Generic.Dictionary%602" data-throw-if-not-resolved="false"></xref> cache to avoid allocating excess memory.
  example: []
  syntax:
    content: public static string ToString(int codePoint)
    parameters:
    - id: codePoint
      type: System.Int32
      description: The UTF-32 code point to convert.
    return:
      type: System.String
      description: The string representation of the code point.
    content.vb: Public Shared Function ToString(codePoint As Integer) As String
  overload: MLEM.Font.CodePointSource.ToString*
  nameWithType.vb: CodePointSource.ToString(Integer)
  fullName.vb: MLEM.Font.CodePointSource.ToString(Integer)
  name.vb: ToString(Integer)
references:
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
  commentId: M:MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
  isExternal: true
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_GetCodePoint_System_Int32_System_Boolean_
  name: GetCodePoint(int, bool)
  nameWithType: CodePointSource.GetCodePoint(int, bool)
  fullName: MLEM.Font.CodePointSource.GetCodePoint(int, bool)
  nameWithType.vb: CodePointSource.GetCodePoint(Integer, Boolean)
  fullName.vb: MLEM.Font.CodePointSource.GetCodePoint(Integer, Boolean)
  name.vb: GetCodePoint(Integer, Boolean)
  spec.csharp:
  - uid: MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
    name: GetCodePoint
    href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_GetCodePoint_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: MLEM.Font.CodePointSource.GetCodePoint(System.Int32,System.Boolean)
    name: GetCodePoint
    href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_GetCodePoint_System_Int32_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Font.CodePointSource.ToString(System.Int32)
  commentId: M:MLEM.Font.CodePointSource.ToString(System.Int32)
  isExternal: true
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_ToString_System_Int32_
  name: ToString(int)
  nameWithType: CodePointSource.ToString(int)
  fullName: MLEM.Font.CodePointSource.ToString(int)
  nameWithType.vb: CodePointSource.ToString(Integer)
  fullName.vb: MLEM.Font.CodePointSource.ToString(Integer)
  name.vb: ToString(Integer)
  spec.csharp:
  - uid: MLEM.Font.CodePointSource.ToString(System.Int32)
    name: ToString
    href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MLEM.Font.CodePointSource.ToString(System.Int32)
    name: ToString
    href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_ToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: MLEM.Font
  commentId: N:MLEM.Font
  href: MLEM.html
  name: MLEM.Font
  nameWithType: MLEM.Font
  fullName: MLEM.Font
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Font
    name: Font
    href: MLEM.Font.html
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<int>
  nameWithType: IEnumerable<int>
  fullName: System.Collections.Generic.IEnumerable<int>
  nameWithType.vb: IEnumerable(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer)
  name.vb: IEnumerable(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Int32}.MLEM.Misc.CollectionExtensions.Append``1(System.Int32)
  commentId: M:MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: MLEM.Misc.CollectionExtensions
  definition: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  name: Append<int>(IEnumerable<int>, int)
  nameWithType: CollectionExtensions.Append<int>(IEnumerable<int>, int)
  fullName: MLEM.Misc.CollectionExtensions.Append<int>(System.Collections.Generic.IEnumerable<int>, int)
  nameWithType.vb: CollectionExtensions.Append(Of Integer)(IEnumerable(Of Integer), Integer)
  fullName.vb: MLEM.Misc.CollectionExtensions.Append(Of Integer)(System.Collections.Generic.IEnumerable(Of Integer), Integer)
  name.vb: Append(Of Integer)(IEnumerable(Of Integer), Integer)
  spec.csharp:
  - uid: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
    name: Append
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
    name: Append
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Int32}.MLEM.Misc.CollectionExtensions.Prepend``1(System.Int32)
  commentId: M:MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: MLEM.Misc.CollectionExtensions
  definition: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  name: Prepend<int>(IEnumerable<int>, int)
  nameWithType: CollectionExtensions.Prepend<int>(IEnumerable<int>, int)
  fullName: MLEM.Misc.CollectionExtensions.Prepend<int>(System.Collections.Generic.IEnumerable<int>, int)
  nameWithType.vb: CollectionExtensions.Prepend(Of Integer)(IEnumerable(Of Integer), Integer)
  fullName.vb: MLEM.Misc.CollectionExtensions.Prepend(Of Integer)(System.Collections.Generic.IEnumerable(Of Integer), Integer)
  name.vb: Prepend(Of Integer)(IEnumerable(Of Integer), Integer)
  spec.csharp:
  - uid: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
    name: Prepend
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{System.Int32},System.Int32)
    name: Prepend
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  commentId: M:MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  name: Append<T>(IEnumerable<T>, T)
  nameWithType: CollectionExtensions.Append<T>(IEnumerable<T>, T)
  fullName: MLEM.Misc.CollectionExtensions.Append<T>(System.Collections.Generic.IEnumerable<T>, T)
  nameWithType.vb: CollectionExtensions.Append(Of T)(IEnumerable(Of T), T)
  fullName.vb: MLEM.Misc.CollectionExtensions.Append(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: Append(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Append
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Append__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc.CollectionExtensions
  commentId: T:MLEM.Misc.CollectionExtensions
  parent: MLEM.Misc
  href: MLEM.Misc.CollectionExtensions.html
  name: CollectionExtensions
  nameWithType: CollectionExtensions
  fullName: MLEM.Misc.CollectionExtensions
- uid: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  commentId: M:MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
  isExternal: true
  href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  name: Prepend<T>(IEnumerable<T>, T)
  nameWithType: CollectionExtensions.Prepend<T>(IEnumerable<T>, T)
  fullName: MLEM.Misc.CollectionExtensions.Prepend<T>(System.Collections.Generic.IEnumerable<T>, T)
  nameWithType.vb: CollectionExtensions.Prepend(Of T)(IEnumerable(Of T), T)
  fullName.vb: MLEM.Misc.CollectionExtensions.Prepend(Of T)(System.Collections.Generic.IEnumerable(Of T), T)
  name.vb: Prepend(Of T)(IEnumerable(Of T), T)
  spec.csharp:
  - uid: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: MLEM.Misc.CollectionExtensions.Prepend``1(System.Collections.Generic.IEnumerable{``0},``0)
    name: Prepend
    href: MLEM.Misc.CollectionExtensions.html#MLEM_Misc_CollectionExtensions_Prepend__1_System_Collections_Generic_IEnumerable___0____0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
- uid: MLEM.Font.CodePointSource.Length*
  commentId: Overload:MLEM.Font.CodePointSource.Length
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_Length
  name: Length
  nameWithType: CodePointSource.Length
  fullName: MLEM.Font.CodePointSource.Length
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: MLEM.Font.CodePointSource.#ctor*
  commentId: Overload:MLEM.Font.CodePointSource.#ctor
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource__ctor_System_String_
  name: CodePointSource
  nameWithType: CodePointSource.CodePointSource
  fullName: MLEM.Font.CodePointSource.CodePointSource
  nameWithType.vb: CodePointSource.New
  fullName.vb: MLEM.Font.CodePointSource.New
  name.vb: New
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: MLEM.Font.CodePointSource.GetCodePoint*
  commentId: Overload:MLEM.Font.CodePointSource.GetCodePoint
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_GetCodePoint_System_Int32_System_Boolean_
  name: GetCodePoint
  nameWithType: CodePointSource.GetCodePoint
  fullName: MLEM.Font.CodePointSource.GetCodePoint
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueTuple{System.Int32,System.Int32}
  commentId: T:System.ValueTuple{System.Int32,System.Int32}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int CodePoint, int Length)
  nameWithType: (int CodePoint, int Length)
  fullName: (int CodePoint, int Length)
  nameWithType.vb: (CodePoint As Integer, Length As Integer)
  fullName.vb: (CodePoint As Integer, Length As Integer)
  name.vb: (CodePoint As Integer, Length As Integer)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.CodePoint
    name: CodePoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.codepoint
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Length
    name: Length
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.length
  - name: )
  spec.vb:
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Int32}.CodePoint
    name: CodePoint
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.codepoint
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Int32}.Length
    name: Length
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.int32-.length
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: MLEM.Font.CodePointSource.EnsureSurrogateBoundary*
  commentId: Overload:MLEM.Font.CodePointSource.EnsureSurrogateBoundary
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_EnsureSurrogateBoundary_System_Int32_System_Boolean_
  name: EnsureSurrogateBoundary
  nameWithType: CodePointSource.EnsureSurrogateBoundary
  fullName: MLEM.Font.CodePointSource.EnsureSurrogateBoundary
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Font.CodePointSource.GetEnumerator*
  commentId: Overload:MLEM.Font.CodePointSource.GetEnumerator
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_GetEnumerator
  name: GetEnumerator
  nameWithType: CodePointSource.GetEnumerator
  fullName: MLEM.Font.CodePointSource.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Int32}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Int32}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Int32}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<int>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<int>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Integer).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of Integer).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable{System.Int32}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable{System.Int32}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.IEnumerator{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerator{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  name: IEnumerator<int>
  nameWithType: IEnumerator<int>
  fullName: System.Collections.Generic.IEnumerator<int>
  nameWithType.vb: IEnumerator(Of Integer)
  fullName.vb: System.Collections.Generic.IEnumerator(Of Integer)
  name.vb: IEnumerator(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerator-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1.getenumerator
  - name: (
  - name: )
- uid: System.Char.ConvertFromUtf32(System.Int32)
  commentId: M:System.Char.ConvertFromUtf32(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char.convertfromutf32
  name: ConvertFromUtf32(int)
  nameWithType: char.ConvertFromUtf32(int)
  fullName: char.ConvertFromUtf32(int)
  nameWithType.vb: Char.ConvertFromUtf32(Integer)
  fullName.vb: Char.ConvertFromUtf32(Integer)
  name.vb: ConvertFromUtf32(Integer)
  spec.csharp:
  - uid: System.Char.ConvertFromUtf32(System.Int32)
    name: ConvertFromUtf32
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.convertfromutf32
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Char.ConvertFromUtf32(System.Int32)
    name: ConvertFromUtf32
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char.convertfromutf32
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: MLEM.Font.CodePointSource.ToString*
  commentId: Overload:MLEM.Font.CodePointSource.ToString
  href: MLEM.Font.CodePointSource.html#MLEM_Font_CodePointSource_ToString_System_Int32_
  name: ToString
  nameWithType: CodePointSource.ToString
  fullName: MLEM.Font.CodePointSource.ToString
