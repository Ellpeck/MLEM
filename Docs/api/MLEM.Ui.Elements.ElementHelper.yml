### YamlMime:ManagedReference
items:
- uid: MLEM.Ui.Elements.ElementHelper
  commentId: T:MLEM.Ui.Elements.ElementHelper
  id: ElementHelper
  parent: MLEM.Ui.Elements
  children:
  - MLEM.Ui.Elements.ElementHelper.ImageButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,System.String,System.String,System.Single)
  - MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.GenericInput,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  - MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.Keybind,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  - MLEM.Ui.Elements.ElementHelper.MakeColumns(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)
  - MLEM.Ui.Elements.ElementHelper.MakeGrid(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32)
  - MLEM.Ui.Elements.ElementHelper.NumberField(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,MLEM.Ui.Elements.TextField.Rule,MLEM.Ui.Elements.TextField.TextChanged)
  - MLEM.Ui.Elements.ElementHelper.ShowInfoBox(MLEM.Ui.UiSystem,MLEM.Ui.Anchor,System.Single,System.String,System.Single,System.String)
  langs:
  - csharp
  - vb
  name: ElementHelper
  nameWithType: ElementHelper
  fullName: MLEM.Ui.Elements.ElementHelper
  type: Class
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ElementHelper
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 13
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: This class contains a set of helper methods that aid in creating special kinds of compound <xref href="MLEM.Ui.Elements.Element" data-throw-if-not-resolved="false"></xref> types for use inside of a <xref href="MLEM.Ui.UiSystem" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static class ElementHelper
    content.vb: Public Module ElementHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Ui.Elements.ElementHelper.ImageButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,System.String,System.String,System.Single)
  commentId: M:MLEM.Ui.Elements.ElementHelper.ImageButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,System.String,System.String,System.Single)
  id: ImageButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Textures.TextureRegion,System.String,System.String,System.Single)
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: ImageButton(Anchor, Vector2, TextureRegion, string, string, float)
  nameWithType: ElementHelper.ImageButton(Anchor, Vector2, TextureRegion, string, string, float)
  fullName: MLEM.Ui.Elements.ElementHelper.ImageButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, string, string, float)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ImageButton
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 25
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Creates a button with an image on the left side of its text.
  example: []
  syntax:
    content: public static Button ImageButton(Anchor anchor, Vector2 size, TextureRegion texture, string text = null, string tooltipText = null, float imagePadding = 2)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The button's anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The button's size
    - id: texture
      type: MLEM.Textures.TextureRegion
      description: The texture of the image to render on the button
    - id: text
      type: System.String
      description: The text to display on the button
    - id: tooltipText
      type: System.String
      description: The text of the button's tooltip
    - id: imagePadding
      type: System.Single
      description: The <xref href="MLEM.Ui.Elements.Element.Padding" data-throw-if-not-resolved="false"></xref> of the button's image
    return:
      type: MLEM.Ui.Elements.Button
      description: An image button
    content.vb: Public Shared Function ImageButton(anchor As Anchor, size As Vector2, texture As TextureRegion, text As String = Nothing, tooltipText As String = Nothing, imagePadding As Single = 2) As Button
  overload: MLEM.Ui.Elements.ElementHelper.ImageButton*
  nameWithType.vb: ElementHelper.ImageButton(Anchor, Vector2, TextureRegion, String, String, Single)
  fullName.vb: MLEM.Ui.Elements.ElementHelper.ImageButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Textures.TextureRegion, String, String, Single)
  name.vb: ImageButton(Anchor, Vector2, TextureRegion, String, String, Single)
- uid: MLEM.Ui.Elements.ElementHelper.ShowInfoBox(MLEM.Ui.UiSystem,MLEM.Ui.Anchor,System.Single,System.String,System.Single,System.String)
  commentId: M:MLEM.Ui.Elements.ElementHelper.ShowInfoBox(MLEM.Ui.UiSystem,MLEM.Ui.Anchor,System.Single,System.String,System.Single,System.String)
  id: ShowInfoBox(MLEM.Ui.UiSystem,MLEM.Ui.Anchor,System.Single,System.String,System.Single,System.String)
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: ShowInfoBox(UiSystem, Anchor, float, string, float, string)
  nameWithType: ElementHelper.ShowInfoBox(UiSystem, Anchor, float, string, float, string)
  fullName: MLEM.Ui.Elements.ElementHelper.ShowInfoBox(MLEM.Ui.UiSystem, MLEM.Ui.Anchor, float, string, float, string)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ShowInfoBox
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 45
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: >-
    Creates a panel that contains a paragraph of text and a button to close the panel.

    The panel is part of a group, which causes elements in the background (behind and around the panel) to not be clickable, leaving only the "close" button.
  example: []
  syntax:
    content: public static Panel ShowInfoBox(UiSystem system, Anchor anchor, float width, string text, float buttonHeight = 10, string okText = "Okay")
    parameters:
    - id: system
      type: MLEM.Ui.UiSystem
      description: The ui system to add the panel to, optional.
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The anchor of the panel
    - id: width
      type: System.Single
      description: The width of the panel
    - id: text
      type: System.String
      description: The text to display on the panel
    - id: buttonHeight
      type: System.Single
      description: The height of the "close" button
    - id: okText
      type: System.String
      description: The text on the "close" button
    return:
      type: MLEM.Ui.Elements.Panel
      description: An info box panel
    content.vb: Public Shared Function ShowInfoBox(system As UiSystem, anchor As Anchor, width As Single, text As String, buttonHeight As Single = 10, okText As String = "Okay") As Panel
  overload: MLEM.Ui.Elements.ElementHelper.ShowInfoBox*
  nameWithType.vb: ElementHelper.ShowInfoBox(UiSystem, Anchor, Single, String, Single, String)
  fullName.vb: MLEM.Ui.Elements.ElementHelper.ShowInfoBox(MLEM.Ui.UiSystem, MLEM.Ui.Anchor, Single, String, Single, String)
  name.vb: ShowInfoBox(UiSystem, Anchor, Single, String, Single, String)
- uid: MLEM.Ui.Elements.ElementHelper.MakeColumns(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)
  commentId: M:MLEM.Ui.Elements.ElementHelper.MakeColumns(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)
  id: MakeColumns(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Boolean)
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: MakeColumns(Element, Vector2, int, bool)
  nameWithType: ElementHelper.MakeColumns(Element, Vector2, int, bool)
  fullName: MLEM.Ui.Elements.ElementHelper.MakeColumns(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Vector2, int, bool)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MakeColumns
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 66
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Creates an array of groups with a fixed width that can be used to create a column structure
  example: []
  syntax:
    content: public static Group[] MakeColumns(Element parent, Vector2 totalSize, int amount, bool setHeightBasedOnChildren = true)
    parameters:
    - id: parent
      type: MLEM.Ui.Elements.Element
      description: The element the groups should be added to, optional.
    - id: totalSize
      type: Microsoft.Xna.Framework.Vector2
      description: The total width of all of the groups combined
    - id: amount
      type: System.Int32
      description: The amount of groups to split the total size into
    - id: setHeightBasedOnChildren
      type: System.Boolean
      description: Whether the groups should set their heights based on their children's heights
    return:
      type: MLEM.Ui.Elements.Group[]
      description: An array of columns
    content.vb: Public Shared Function MakeColumns(parent As Element, totalSize As Vector2, amount As Integer, setHeightBasedOnChildren As Boolean = True) As Group()
  overload: MLEM.Ui.Elements.ElementHelper.MakeColumns*
  nameWithType.vb: ElementHelper.MakeColumns(Element, Vector2, Integer, Boolean)
  fullName.vb: MLEM.Ui.Elements.ElementHelper.MakeColumns(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Vector2, Integer, Boolean)
  name.vb: MakeColumns(Element, Vector2, Integer, Boolean)
- uid: MLEM.Ui.Elements.ElementHelper.MakeGrid(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32)
  commentId: M:MLEM.Ui.Elements.ElementHelper.MakeGrid(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32)
  id: MakeGrid(MLEM.Ui.Elements.Element,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32)
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: MakeGrid(Element, Vector2, int, int)
  nameWithType: ElementHelper.MakeGrid(Element, Vector2, int, int)
  fullName: MLEM.Ui.Elements.ElementHelper.MakeGrid(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Vector2, int, int)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: MakeGrid
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 84
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Creates an array of groups with a fixed width and height that can be used to create a grid with equally sized boxes.
  example: []
  syntax:
    content: public static Group[,] MakeGrid(Element parent, Vector2 totalSize, int width, int height)
    parameters:
    - id: parent
      type: MLEM.Ui.Elements.Element
      description: The element the groups should be added to, can be <a href="https://learn.microsoft.com/dotnet/csharp/language-reference/keywords/null">null</a>.
    - id: totalSize
      type: Microsoft.Xna.Framework.Vector2
      description: The total size that the grid should take up.
    - id: width
      type: System.Int32
      description: The width of the grid, or the amount of columns it should have.
    - id: height
      type: System.Int32
      description: The height of the grid, or the amount of rows it should have.
    return:
      type: MLEM.Ui.Elements.Group[,]
      description: The created grid.
    content.vb: Public Shared Function MakeGrid(parent As Element, totalSize As Vector2, width As Integer, height As Integer) As Group(,)
  overload: MLEM.Ui.Elements.ElementHelper.MakeGrid*
  nameWithType.vb: ElementHelper.MakeGrid(Element, Vector2, Integer, Integer)
  fullName.vb: MLEM.Ui.Elements.ElementHelper.MakeGrid(MLEM.Ui.Elements.Element, Microsoft.Xna.Framework.Vector2, Integer, Integer)
  name.vb: MakeGrid(Element, Vector2, Integer, Integer)
- uid: MLEM.Ui.Elements.ElementHelper.NumberField(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,MLEM.Ui.Elements.TextField.Rule,MLEM.Ui.Elements.TextField.TextChanged)
  commentId: M:MLEM.Ui.Elements.ElementHelper.NumberField(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,MLEM.Ui.Elements.TextField.Rule,MLEM.Ui.Elements.TextField.TextChanged)
  id: NumberField(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,MLEM.Ui.Elements.TextField.Rule,MLEM.Ui.Elements.TextField.TextChanged)
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: NumberField(Anchor, Vector2, int, int, Rule, TextChanged)
  nameWithType: ElementHelper.NumberField(Anchor, Vector2, int, int, TextField.Rule, TextField.TextChanged)
  fullName: MLEM.Ui.Elements.ElementHelper.NumberField(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, int, int, MLEM.Ui.Elements.TextField.Rule, MLEM.Ui.Elements.TextField.TextChanged)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: NumberField
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 106
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: Creates a <xref href="MLEM.Ui.Elements.TextField" data-throw-if-not-resolved="false"></xref> with a + and a - button next to it, to allow for easy number input.
  example: []
  syntax:
    content: public static Group NumberField(Anchor anchor, Vector2 size, int defaultValue = 0, int stepPerClick = 1, TextField.Rule rule = null, TextField.TextChanged onTextChange = null)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The text field's anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The size of the text field
    - id: defaultValue
      type: System.Int32
      description: The default content of the text field
    - id: stepPerClick
      type: System.Int32
      description: The value that is added or removed to the text field's value when clicking the + or - buttons
    - id: rule
      type: MLEM.Ui.Elements.TextField.Rule
      description: The rule for text input. <xref href="MLEM.Ui.Elements.TextField.OnlyNumbers" data-throw-if-not-resolved="false"></xref> by default.
    - id: onTextChange
      type: MLEM.Ui.Elements.TextField.TextChanged
      description: A callback that is invoked when the text field's text changes
    return:
      type: MLEM.Ui.Elements.Group
      description: A group that contains the number field
    content.vb: Public Shared Function NumberField(anchor As Anchor, size As Vector2, defaultValue As Integer = 0, stepPerClick As Integer = 1, rule As TextField.Rule = Nothing, onTextChange As TextField.TextChanged = Nothing) As Group
  overload: MLEM.Ui.Elements.ElementHelper.NumberField*
  nameWithType.vb: ElementHelper.NumberField(Anchor, Vector2, Integer, Integer, TextField.Rule, TextField.TextChanged)
  fullName.vb: MLEM.Ui.Elements.ElementHelper.NumberField(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, Integer, Integer, MLEM.Ui.Elements.TextField.Rule, MLEM.Ui.Elements.TextField.TextChanged)
  name.vb: NumberField(Anchor, Vector2, Integer, Integer, Rule, TextChanged)
- uid: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.GenericInput,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  commentId: M:MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.GenericInput,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  id: KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.GenericInput,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: KeybindButton(Anchor, Vector2, Keybind, InputHandler, string, GenericInput, string, Func<GenericInput, string>, int, Func<GenericInput, IEnumerable<GenericInput>, bool>)
  nameWithType: ElementHelper.KeybindButton(Anchor, Vector2, Keybind, InputHandler, string, GenericInput, string, Func<GenericInput, string>, int, Func<GenericInput, IEnumerable<GenericInput>, bool>)
  fullName: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Input.Keybind, MLEM.Input.InputHandler, string, MLEM.Input.GenericInput, string, System.Func<MLEM.Input.GenericInput, string>, int, System.Func<MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable<MLEM.Input.GenericInput>, bool>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: KeybindButton
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 139
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: >-
    Creates a <xref href="MLEM.Ui.Elements.Button" data-throw-if-not-resolved="false"></xref> that acts as a way to input a custom value for a <xref href="MLEM.Input.Keybind" data-throw-if-not-resolved="false"></xref>.

    Note that only the <xref href="MLEM.Input.Keybind.Combination" data-throw-if-not-resolved="false"></xref> at index <code class="paramref">index</code> of the given keybind is displayed and edited, all others are ignored.

    Inputting custom keybinds using this element supports <xref href="MLEM.Input.ModifierKey" data-throw-if-not-resolved="false"></xref>-based modifiers and any <xref href="MLEM.Input.GenericInput" data-throw-if-not-resolved="false"></xref>-based keys.

    The keybind button's current state can be retrieved using the "Active" <xref href="MLEM.Misc.GenericDataHolder.GetData%60%601(System.String)" data-throw-if-not-resolved="false"></xref> key, which stores a bool that indicates whether the button is currently waiting for a new value to be assigned.
  example: []
  syntax:
    content: public static Button KeybindButton(Anchor anchor, Vector2 size, Keybind keybind, InputHandler inputHandler, string activePlaceholder, GenericInput unbindKey = default, string unboundPlaceholder = "", Func<GenericInput, string> inputName = null, int index = 0, Func<GenericInput, IEnumerable<GenericInput>, bool> isKeybindAllowed = null)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The button's anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The button's size
    - id: keybind
      type: MLEM.Input.Keybind
      description: The keybind that this button should represent
    - id: inputHandler
      type: MLEM.Input.InputHandler
      description: The input handler to query inputs with
    - id: activePlaceholder
      type: System.String
      description: A placeholder text that is displayed while the keybind is being edited
    - id: unbindKey
      type: MLEM.Input.GenericInput
    - id: unboundPlaceholder
      type: System.String
      description: A placeholder text that is displayed if the keybind is unbound
    - id: inputName
      type: System.Func{MLEM.Input.GenericInput,System.String}
      description: An optional function to give each input a display name that is easier to read. If this is null, <xref href="MLEM.Input.GenericInput.ToString" data-throw-if-not-resolved="false"></xref> is used.
    - id: index
      type: System.Int32
      description: The index in the <code class="paramref">keybind</code> that the button should display. Note that, if the index is greater than the amount of combinations, combinations entered using this button will be stored at an earlier index.
    - id: isKeybindAllowed
      type: System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean}
      description: A function that can optionally determine whether a given input and modifier combination is allowed. If this is null, all combinations are allowed.
    return:
      type: MLEM.Ui.Elements.Button
      description: A keybind button with the given settings
    content.vb: Public Shared Function KeybindButton(anchor As Anchor, size As Vector2, keybind As Keybind, inputHandler As InputHandler, activePlaceholder As String, unbindKey As GenericInput = Nothing, unboundPlaceholder As String = "", inputName As Func(Of GenericInput, String) = Nothing, index As Integer = 0, isKeybindAllowed As Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean) = Nothing) As Button
  overload: MLEM.Ui.Elements.ElementHelper.KeybindButton*
  nameWithType.vb: ElementHelper.KeybindButton(Anchor, Vector2, Keybind, InputHandler, String, GenericInput, String, Func(Of GenericInput, String), Integer, Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean))
  fullName.vb: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Input.Keybind, MLEM.Input.InputHandler, String, MLEM.Input.GenericInput, String, System.Func(Of MLEM.Input.GenericInput, String), Integer, System.Func(Of MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable(Of MLEM.Input.GenericInput), Boolean))
  name.vb: KeybindButton(Anchor, Vector2, Keybind, InputHandler, String, GenericInput, String, Func(Of GenericInput, String), Integer, Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean))
- uid: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.Keybind,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  commentId: M:MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.Keybind,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  id: KeybindButton(MLEM.Ui.Anchor,Microsoft.Xna.Framework.Vector2,MLEM.Input.Keybind,MLEM.Input.InputHandler,System.String,MLEM.Input.Keybind,System.String,System.Func{MLEM.Input.GenericInput,System.String},System.Int32,System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean})
  parent: MLEM.Ui.Elements.ElementHelper
  langs:
  - csharp
  - vb
  name: KeybindButton(Anchor, Vector2, Keybind, InputHandler, string, Keybind, string, Func<GenericInput, string>, int, Func<GenericInput, IEnumerable<GenericInput>, bool>)
  nameWithType: ElementHelper.KeybindButton(Anchor, Vector2, Keybind, InputHandler, string, Keybind, string, Func<GenericInput, string>, int, Func<GenericInput, IEnumerable<GenericInput>, bool>)
  fullName: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Input.Keybind, MLEM.Input.InputHandler, string, MLEM.Input.Keybind, string, System.Func<MLEM.Input.GenericInput, string>, int, System.Func<MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable<MLEM.Input.GenericInput>, bool>)
  type: Method
  source:
    remote:
      path: MLEM.Ui/Elements/ElementHelper.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: KeybindButton
    path: ../MLEM.Ui/Elements/ElementHelper.cs
    startLine: 160
  assemblies:
  - MLEM.Ui
  namespace: MLEM.Ui.Elements
  summary: >-
    Creates a <xref href="MLEM.Ui.Elements.Button" data-throw-if-not-resolved="false"></xref> that acts as a way to input a custom value for a <xref href="MLEM.Input.Keybind" data-throw-if-not-resolved="false"></xref>.

    Note that only the <xref href="MLEM.Input.Keybind.Combination" data-throw-if-not-resolved="false"></xref> at index <code class="paramref">index</code> of the given keybind is displayed and edited, all others are ignored.

    Inputting custom keybinds using this element supports <xref href="MLEM.Input.ModifierKey" data-throw-if-not-resolved="false"></xref>-based modifiers and any <xref href="MLEM.Input.GenericInput" data-throw-if-not-resolved="false"></xref>-based keys.

    The keybind button's current state can be retrieved using the "Active" <xref href="MLEM.Misc.GenericDataHolder.GetData%60%601(System.String)" data-throw-if-not-resolved="false"></xref> key, which stores a bool that indicates whether the button is currently waiting for a new value to be assigned.
  example: []
  syntax:
    content: public static Button KeybindButton(Anchor anchor, Vector2 size, Keybind keybind, InputHandler inputHandler, string activePlaceholder, Keybind unbind = null, string unboundPlaceholder = "", Func<GenericInput, string> inputName = null, int index = 0, Func<GenericInput, IEnumerable<GenericInput>, bool> isKeybindAllowed = null)
    parameters:
    - id: anchor
      type: MLEM.Ui.Anchor
      description: The button's anchor
    - id: size
      type: Microsoft.Xna.Framework.Vector2
      description: The button's size
    - id: keybind
      type: MLEM.Input.Keybind
      description: The keybind that this button should represent
    - id: inputHandler
      type: MLEM.Input.InputHandler
      description: The input handler to query inputs with
    - id: activePlaceholder
      type: System.String
      description: A placeholder text that is displayed while the keybind is being edited
    - id: unbind
      type: MLEM.Input.Keybind
      description: An optional keybind to press that allows the keybind value to be unbound, clearing the combination
    - id: unboundPlaceholder
      type: System.String
      description: A placeholder text that is displayed if the keybind is unbound
    - id: inputName
      type: System.Func{MLEM.Input.GenericInput,System.String}
      description: An optional function to give each input a display name that is easier to read. If this is null, <xref href="MLEM.Input.GenericInput.ToString" data-throw-if-not-resolved="false"></xref> is used.
    - id: index
      type: System.Int32
      description: The index in the <code class="paramref">keybind</code> that the button should display. Note that, if the index is greater than the amount of combinations, combinations entered using this button will be stored at an earlier index.
    - id: isKeybindAllowed
      type: System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean}
      description: A function that can optionally determine whether a given input and modifier combination is allowed. If this is null, all combinations are allowed.
    return:
      type: MLEM.Ui.Elements.Button
      description: A keybind button with the given settings
    content.vb: Public Shared Function KeybindButton(anchor As Anchor, size As Vector2, keybind As Keybind, inputHandler As InputHandler, activePlaceholder As String, unbind As Keybind = Nothing, unboundPlaceholder As String = "", inputName As Func(Of GenericInput, String) = Nothing, index As Integer = 0, isKeybindAllowed As Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean) = Nothing) As Button
  overload: MLEM.Ui.Elements.ElementHelper.KeybindButton*
  nameWithType.vb: ElementHelper.KeybindButton(Anchor, Vector2, Keybind, InputHandler, String, Keybind, String, Func(Of GenericInput, String), Integer, Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean))
  fullName.vb: MLEM.Ui.Elements.ElementHelper.KeybindButton(MLEM.Ui.Anchor, Microsoft.Xna.Framework.Vector2, MLEM.Input.Keybind, MLEM.Input.InputHandler, String, MLEM.Input.Keybind, String, System.Func(Of MLEM.Input.GenericInput, String), Integer, System.Func(Of MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable(Of MLEM.Input.GenericInput), Boolean))
  name.vb: KeybindButton(Anchor, Vector2, Keybind, InputHandler, String, Keybind, String, Func(Of GenericInput, String), Integer, Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean))
references:
- uid: MLEM.Ui.Elements.Element
  commentId: T:MLEM.Ui.Elements.Element
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Element.html
  name: Element
  nameWithType: Element
  fullName: MLEM.Ui.Elements.Element
- uid: MLEM.Ui.UiSystem
  commentId: T:MLEM.Ui.UiSystem
  parent: MLEM.Ui
  href: MLEM.Ui.UiSystem.html
  name: UiSystem
  nameWithType: UiSystem
  fullName: MLEM.Ui.UiSystem
- uid: MLEM.Ui.Elements
  commentId: N:MLEM.Ui.Elements
  href: MLEM.html
  name: MLEM.Ui.Elements
  nameWithType: MLEM.Ui.Elements
  fullName: MLEM.Ui.Elements
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    href: MLEM.Ui.Elements.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  - name: .
  - uid: MLEM.Ui.Elements
    name: Elements
    href: MLEM.Ui.Elements.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: MLEM.Ui
  commentId: N:MLEM.Ui
  href: MLEM.html
  name: MLEM.Ui
  nameWithType: MLEM.Ui
  fullName: MLEM.Ui
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Ui
    name: Ui
    href: MLEM.Ui.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Ui.Elements.Element.Padding
  commentId: F:MLEM.Ui.Elements.Element.Padding
  parent: MLEM.Ui.Elements.Element
  href: MLEM.Ui.Elements.Element.html#MLEM_Ui_Elements_Element_Padding
  name: Padding
  nameWithType: Element.Padding
  fullName: MLEM.Ui.Elements.Element.Padding
- uid: MLEM.Ui.Elements.ElementHelper.ImageButton*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.ImageButton
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_ImageButton_MLEM_Ui_Anchor_Microsoft_Xna_Framework_Vector2_MLEM_Textures_TextureRegion_System_String_System_String_System_Single_
  name: ImageButton
  nameWithType: ElementHelper.ImageButton
  fullName: MLEM.Ui.Elements.ElementHelper.ImageButton
- uid: MLEM.Ui.Anchor
  commentId: T:MLEM.Ui.Anchor
  parent: MLEM.Ui
  href: MLEM.Ui.Anchor.html
  name: Anchor
  nameWithType: Anchor
  fullName: MLEM.Ui.Anchor
- uid: Microsoft.Xna.Framework.Vector2
  commentId: T:Microsoft.Xna.Framework.Vector2
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: Microsoft.Xna.Framework.Vector2
- uid: MLEM.Textures.TextureRegion
  commentId: T:MLEM.Textures.TextureRegion
  parent: MLEM.Textures
  href: MLEM.Textures.TextureRegion.html
  name: TextureRegion
  nameWithType: TextureRegion
  fullName: MLEM.Textures.TextureRegion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MLEM.Ui.Elements.Button
  commentId: T:MLEM.Ui.Elements.Button
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Button.html
  name: Button
  nameWithType: Button
  fullName: MLEM.Ui.Elements.Button
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  href: MLEM.html
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
- uid: MLEM.Ui.Elements.ElementHelper.ShowInfoBox*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.ShowInfoBox
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_ShowInfoBox_MLEM_Ui_UiSystem_MLEM_Ui_Anchor_System_Single_System_String_System_Single_System_String_
  name: ShowInfoBox
  nameWithType: ElementHelper.ShowInfoBox
  fullName: MLEM.Ui.Elements.ElementHelper.ShowInfoBox
- uid: MLEM.Ui.Elements.Panel
  commentId: T:MLEM.Ui.Elements.Panel
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Panel.html
  name: Panel
  nameWithType: Panel
  fullName: MLEM.Ui.Elements.Panel
- uid: MLEM.Ui.Elements.ElementHelper.MakeColumns*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.MakeColumns
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_MakeColumns_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_Vector2_System_Int32_System_Boolean_
  name: MakeColumns
  nameWithType: ElementHelper.MakeColumns
  fullName: MLEM.Ui.Elements.ElementHelper.MakeColumns
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Ui.Elements.Group[]
  isExternal: true
  href: MLEM.Ui.Elements.Group.html
  name: Group[]
  nameWithType: Group[]
  fullName: MLEM.Ui.Elements.Group[]
  nameWithType.vb: Group()
  fullName.vb: MLEM.Ui.Elements.Group()
  name.vb: Group()
  spec.csharp:
  - uid: MLEM.Ui.Elements.Group
    name: Group
    href: MLEM.Ui.Elements.Group.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: MLEM.Ui.Elements.Group
    name: Group
    href: MLEM.Ui.Elements.Group.html
  - name: (
  - name: )
- uid: MLEM.Ui.Elements.ElementHelper.MakeGrid*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.MakeGrid
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_MakeGrid_MLEM_Ui_Elements_Element_Microsoft_Xna_Framework_Vector2_System_Int32_System_Int32_
  name: MakeGrid
  nameWithType: ElementHelper.MakeGrid
  fullName: MLEM.Ui.Elements.ElementHelper.MakeGrid
- uid: MLEM.Ui.Elements.Group[,]
  isExternal: true
  href: MLEM.Ui.Elements.Group.html
  name: Group[,]
  nameWithType: Group[,]
  fullName: MLEM.Ui.Elements.Group[,]
  nameWithType.vb: Group(,)
  fullName.vb: MLEM.Ui.Elements.Group(,)
  name.vb: Group(,)
  spec.csharp:
  - uid: MLEM.Ui.Elements.Group
    name: Group
    href: MLEM.Ui.Elements.Group.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: MLEM.Ui.Elements.Group
    name: Group
    href: MLEM.Ui.Elements.Group.html
  - name: (
  - name: ','
  - name: )
- uid: MLEM.Ui.Elements.TextField
  commentId: T:MLEM.Ui.Elements.TextField
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.TextField.html
  name: TextField
  nameWithType: TextField
  fullName: MLEM.Ui.Elements.TextField
- uid: MLEM.Ui.Elements.TextField.OnlyNumbers
  commentId: F:MLEM.Ui.Elements.TextField.OnlyNumbers
  href: MLEM.Ui.Elements.TextField.html#MLEM_Ui_Elements_TextField_OnlyNumbers
  name: OnlyNumbers
  nameWithType: TextField.OnlyNumbers
  fullName: MLEM.Ui.Elements.TextField.OnlyNumbers
- uid: MLEM.Ui.Elements.ElementHelper.NumberField*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.NumberField
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_NumberField_MLEM_Ui_Anchor_Microsoft_Xna_Framework_Vector2_System_Int32_System_Int32_MLEM_Ui_Elements_TextField_Rule_MLEM_Ui_Elements_TextField_TextChanged_
  name: NumberField
  nameWithType: ElementHelper.NumberField
  fullName: MLEM.Ui.Elements.ElementHelper.NumberField
- uid: MLEM.Ui.Elements.TextField.Rule
  commentId: T:MLEM.Ui.Elements.TextField.Rule
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.TextField.html
  name: TextField.Rule
  nameWithType: TextField.Rule
  fullName: MLEM.Ui.Elements.TextField.Rule
  spec.csharp:
  - uid: MLEM.Ui.Elements.TextField
    name: TextField
    href: MLEM.Ui.Elements.TextField.html
  - name: .
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    href: MLEM.Ui.Elements.TextField.Rule.html
  spec.vb:
  - uid: MLEM.Ui.Elements.TextField
    name: TextField
    href: MLEM.Ui.Elements.TextField.html
  - name: .
  - uid: MLEM.Ui.Elements.TextField.Rule
    name: Rule
    href: MLEM.Ui.Elements.TextField.Rule.html
- uid: MLEM.Ui.Elements.TextField.TextChanged
  commentId: T:MLEM.Ui.Elements.TextField.TextChanged
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.TextField.html
  name: TextField.TextChanged
  nameWithType: TextField.TextChanged
  fullName: MLEM.Ui.Elements.TextField.TextChanged
  spec.csharp:
  - uid: MLEM.Ui.Elements.TextField
    name: TextField
    href: MLEM.Ui.Elements.TextField.html
  - name: .
  - uid: MLEM.Ui.Elements.TextField.TextChanged
    name: TextChanged
    href: MLEM.Ui.Elements.TextField.TextChanged.html
  spec.vb:
  - uid: MLEM.Ui.Elements.TextField
    name: TextField
    href: MLEM.Ui.Elements.TextField.html
  - name: .
  - uid: MLEM.Ui.Elements.TextField.TextChanged
    name: TextChanged
    href: MLEM.Ui.Elements.TextField.TextChanged.html
- uid: MLEM.Ui.Elements.Group
  commentId: T:MLEM.Ui.Elements.Group
  parent: MLEM.Ui.Elements
  href: MLEM.Ui.Elements.Group.html
  name: Group
  nameWithType: Group
  fullName: MLEM.Ui.Elements.Group
- uid: MLEM.Input.Keybind
  commentId: T:MLEM.Input.Keybind
  parent: MLEM.Input
  href: MLEM.Input.Keybind.html
  name: Keybind
  nameWithType: Keybind
  fullName: MLEM.Input.Keybind
- uid: MLEM.Input.Keybind.Combination
  commentId: T:MLEM.Input.Keybind.Combination
  parent: MLEM.Input
  href: MLEM.Input.Keybind.html
  name: Keybind.Combination
  nameWithType: Keybind.Combination
  fullName: MLEM.Input.Keybind.Combination
  spec.csharp:
  - uid: MLEM.Input.Keybind
    name: Keybind
    href: MLEM.Input.Keybind.html
  - name: .
  - uid: MLEM.Input.Keybind.Combination
    name: Combination
    href: MLEM.Input.Keybind.Combination.html
  spec.vb:
  - uid: MLEM.Input.Keybind
    name: Keybind
    href: MLEM.Input.Keybind.html
  - name: .
  - uid: MLEM.Input.Keybind.Combination
    name: Combination
    href: MLEM.Input.Keybind.Combination.html
- uid: MLEM.Input.ModifierKey
  commentId: T:MLEM.Input.ModifierKey
  parent: MLEM.Input
  href: MLEM.Input.ModifierKey.html
  name: ModifierKey
  nameWithType: ModifierKey
  fullName: MLEM.Input.ModifierKey
- uid: MLEM.Input.GenericInput
  commentId: T:MLEM.Input.GenericInput
  parent: MLEM.Input
  href: MLEM.Input.GenericInput.html
  name: GenericInput
  nameWithType: GenericInput
  fullName: MLEM.Input.GenericInput
- uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  commentId: M:MLEM.Misc.GenericDataHolder.GetData``1(System.String)
  parent: MLEM.Misc.GenericDataHolder
  isExternal: true
  href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  name: GetData<T>(string)
  nameWithType: GenericDataHolder.GetData<T>(string)
  fullName: MLEM.Misc.GenericDataHolder.GetData<T>(string)
  nameWithType.vb: GenericDataHolder.GetData(Of T)(String)
  fullName.vb: MLEM.Misc.GenericDataHolder.GetData(Of T)(String)
  name.vb: GetData(Of T)(String)
  spec.csharp:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: MLEM.Misc.GenericDataHolder.GetData``1(System.String)
    name: GetData
    href: MLEM.Misc.GenericDataHolder.html#MLEM_Misc_GenericDataHolder_GetData__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: MLEM.Input.GenericInput.ToString
  commentId: M:MLEM.Input.GenericInput.ToString
  href: MLEM.Input.GenericInput.html#MLEM_Input_GenericInput_ToString
  name: ToString()
  nameWithType: GenericInput.ToString()
  fullName: MLEM.Input.GenericInput.ToString()
  spec.csharp:
  - uid: MLEM.Input.GenericInput.ToString
    name: ToString
    href: MLEM.Input.GenericInput.html#MLEM_Input_GenericInput_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: MLEM.Input.GenericInput.ToString
    name: ToString
    href: MLEM.Input.GenericInput.html#MLEM_Input_GenericInput_ToString
  - name: (
  - name: )
- uid: MLEM.Ui.Elements.ElementHelper.KeybindButton*
  commentId: Overload:MLEM.Ui.Elements.ElementHelper.KeybindButton
  href: MLEM.Ui.Elements.ElementHelper.html#MLEM_Ui_Elements_ElementHelper_KeybindButton_MLEM_Ui_Anchor_Microsoft_Xna_Framework_Vector2_MLEM_Input_Keybind_MLEM_Input_InputHandler_System_String_MLEM_Input_GenericInput_System_String_System_Func_MLEM_Input_GenericInput_System_String__System_Int32_System_Func_MLEM_Input_GenericInput_System_Collections_Generic_IEnumerable_MLEM_Input_GenericInput__System_Boolean__
  name: KeybindButton
  nameWithType: ElementHelper.KeybindButton
  fullName: MLEM.Ui.Elements.ElementHelper.KeybindButton
- uid: MLEM.Input.InputHandler
  commentId: T:MLEM.Input.InputHandler
  parent: MLEM.Input
  href: MLEM.Input.InputHandler.html
  name: InputHandler
  nameWithType: InputHandler
  fullName: MLEM.Input.InputHandler
- uid: System.Func{MLEM.Input.GenericInput,System.String}
  commentId: T:System.Func{MLEM.Input.GenericInput,System.String}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<GenericInput, string>
  nameWithType: Func<GenericInput, string>
  fullName: System.Func<MLEM.Input.GenericInput, string>
  nameWithType.vb: Func(Of GenericInput, String)
  fullName.vb: System.Func(Of MLEM.Input.GenericInput, String)
  name.vb: Func(Of GenericInput, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean}
  commentId: T:System.Func{MLEM.Input.GenericInput,System.Collections.Generic.IEnumerable{MLEM.Input.GenericInput},System.Boolean}
  parent: System
  definition: System.Func`3
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<GenericInput, IEnumerable<GenericInput>, bool>
  nameWithType: Func<GenericInput, IEnumerable<GenericInput>, bool>
  fullName: System.Func<MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable<MLEM.Input.GenericInput>, bool>
  nameWithType.vb: Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean)
  fullName.vb: System.Func(Of MLEM.Input.GenericInput, System.Collections.Generic.IEnumerable(Of MLEM.Input.GenericInput), Boolean)
  name.vb: Func(Of GenericInput, IEnumerable(Of GenericInput), Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: MLEM.Input.GenericInput
    name: GenericInput
    href: MLEM.Input.GenericInput.html
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: MLEM.Input
  commentId: N:MLEM.Input
  href: MLEM.html
  name: MLEM.Input
  nameWithType: MLEM.Input
  fullName: MLEM.Input
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Input
    name: Input
    href: MLEM.Input.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Input
    name: Input
    href: MLEM.Input.html
- uid: MLEM.Misc.GenericDataHolder
  commentId: T:MLEM.Misc.GenericDataHolder
  parent: MLEM.Misc
  href: MLEM.Misc.GenericDataHolder.html
  name: GenericDataHolder
  nameWithType: GenericDataHolder
  fullName: MLEM.Misc.GenericDataHolder
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-3
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: MLEM.Misc
  commentId: N:MLEM.Misc
  href: MLEM.html
  name: MLEM.Misc
  nameWithType: MLEM.Misc
  fullName: MLEM.Misc
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Misc
    name: Misc
    href: MLEM.Misc.html
