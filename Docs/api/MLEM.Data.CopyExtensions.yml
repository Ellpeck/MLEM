### YamlMime:ManagedReference
items:
- uid: MLEM.Data.CopyExtensions
  commentId: T:MLEM.Data.CopyExtensions
  id: CopyExtensions
  parent: MLEM.Data
  children:
  - MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  - MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  langs:
  - csharp
  - vb
  name: CopyExtensions
  nameWithType: CopyExtensions
  fullName: MLEM.Data.CopyExtensions
  type: Class
  source:
    remote:
      path: MLEM.Data/CopyExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: CopyExtensions
    path: ../MLEM.Data/CopyExtensions.cs
    startLine: 13
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: A set of extensions for dealing with copying objects.
  example: []
  syntax:
    content: >-
      [Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")]

      public static class CopyExtensions
    content.vb: >-
      <Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")>

      Public Module CopyExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.
- uid: MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  id: Copy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExtensionMethod: true
  parent: MLEM.Data.CopyExtensions
  langs:
  - csharp
  - vb
  name: Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.Copy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.Copy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  type: Method
  source:
    remote:
      path: MLEM.Data/CopyExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Copy
    path: ../MLEM.Data/CopyExtensions.cs
    startLine: 31
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Creates a shallow copy of the object and returns it.

    Object creation occurs using a constructor with the <xref href="MLEM.Data.CopyConstructorAttribute" data-throw-if-not-resolved="false"></xref> or, if none is present, the first constructor with the correct <xref href="System.Reflection.BindingFlags" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")]

      public static T Copy<T>(this T obj, BindingFlags flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, Predicate<FieldInfo> fieldInclusion = null)
    parameters:
    - id: obj
      type: '{T}'
      description: The object to create a shallow copy of
    - id: flags
      type: System.Reflection.BindingFlags
      description: The binding flags for field searching
    - id: fieldInclusion
      type: System.Predicate{System.Reflection.FieldInfo}
      description: A predicate that determines whether or not the given field should be copied. If null, all fields will be copied.
    typeParameters:
    - id: T
      description: The type of the object to copy
    return:
      type: '{T}'
      description: A shallow copy of the object
    content.vb: >-
      <Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")>

      Public Shared Function Copy(Of T)(obj As T, flags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic, fieldInclusion As Predicate(Of FieldInfo) = Nothing) As T
  overload: MLEM.Data.CopyExtensions.Copy*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.
  nameWithType.vb: CopyExtensions.Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.Copy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: Copy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
- uid: MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  id: DeepCopy``1(``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExtensionMethod: true
  parent: MLEM.Data.CopyExtensions
  langs:
  - csharp
  - vb
  name: DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopy<T>(T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopy<T>(T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  type: Method
  source:
    remote:
      path: MLEM.Data/CopyExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DeepCopy
    path: ../MLEM.Data/CopyExtensions.cs
    startLine: 47
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Creates a deep copy of the object and returns it.

    Object creation occurs using a constructor with the <xref href="MLEM.Data.CopyConstructorAttribute" data-throw-if-not-resolved="false"></xref> or, if none is present, the first constructor with the correct <xref href="System.Reflection.BindingFlags" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")]

      public static T DeepCopy<T>(this T obj, BindingFlags flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, Predicate<FieldInfo> fieldInclusion = null)
    parameters:
    - id: obj
      type: '{T}'
      description: The object to create a deep copy of
    - id: flags
      type: System.Reflection.BindingFlags
      description: The binding flags for field searching
    - id: fieldInclusion
      type: System.Predicate{System.Reflection.FieldInfo}
      description: A predicate that determines whether or not the given field should be copied. If null, all fields will be copied.
    typeParameters:
    - id: T
      description: The type of the object to copy
    return:
      type: '{T}'
      description: A deep copy of the object
    content.vb: >-
      <Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")>

      Public Shared Function DeepCopy(Of T)(obj As T, flags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic, fieldInclusion As Predicate(Of FieldInfo) = Nothing) As T
  overload: MLEM.Data.CopyExtensions.DeepCopy*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.
  nameWithType.vb: CopyExtensions.DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopy(Of T)(T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopy(Of T)(T, BindingFlags, Predicate(Of FieldInfo))
- uid: MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  id: CopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExtensionMethod: true
  parent: MLEM.Data.CopyExtensions
  langs:
  - csharp
  - vb
  name: CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.CopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.CopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  type: Method
  source:
    remote:
      path: MLEM.Data/CopyExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: CopyInto
    path: ../MLEM.Data/CopyExtensions.cs
    startLine: 62
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: Copies the given object <code class="paramref">obj</code> into the given object <code class="paramref">otherObj</code> in a shallow manner.
  example: []
  syntax:
    content: >-
      [Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")]

      public static void CopyInto<T>(this T obj, T otherObj, BindingFlags flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, Predicate<FieldInfo> fieldInclusion = null)
    parameters:
    - id: obj
      type: '{T}'
      description: The object to create a shallow copy of
    - id: otherObj
      type: '{T}'
      description: The object to copy into
    - id: flags
      type: System.Reflection.BindingFlags
      description: The binding flags for field searching
    - id: fieldInclusion
      type: System.Predicate{System.Reflection.FieldInfo}
      description: A predicate that determines whether or not the given field should be copied. If null, all fields will be copied.
    typeParameters:
    - id: T
      description: The type of the object to copy
    content.vb: >-
      <Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")>

      Public Shared Sub CopyInto(Of T)(obj As T, otherObj As T, flags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic, fieldInclusion As Predicate(Of FieldInfo) = Nothing)
  overload: MLEM.Data.CopyExtensions.CopyInto*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.
  nameWithType.vb: CopyExtensions.CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.CopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: CopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
- uid: MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  commentId: M:MLEM.Data.CopyExtensions.DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  id: DeepCopyInto``1(``0,``0,System.Reflection.BindingFlags,System.Predicate{System.Reflection.FieldInfo})
  isExtensionMethod: true
  parent: MLEM.Data.CopyExtensions
  langs:
  - csharp
  - vb
  name: DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  nameWithType: CopyExtensions.DeepCopyInto<T>(T, T, BindingFlags, Predicate<FieldInfo>)
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto<T>(T, T, System.Reflection.BindingFlags, System.Predicate<System.Reflection.FieldInfo>)
  type: Method
  source:
    remote:
      path: MLEM.Data/CopyExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: DeepCopyInto
    path: ../MLEM.Data/CopyExtensions.cs
    startLine: 79
  assemblies:
  - MLEM.Data
  namespace: MLEM.Data
  summary: >-
    Copies the given object <code class="paramref">obj</code> into the given object <code class="paramref">otherObj</code> in a deep manner.

    Object creation occurs using a constructor with the <xref href="MLEM.Data.CopyConstructorAttribute" data-throw-if-not-resolved="false"></xref> or, if none is present, the first constructor with the correct <xref href="System.Reflection.BindingFlags" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")]

      public static void DeepCopyInto<T>(this T obj, T otherObj, BindingFlags flags = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic, Predicate<FieldInfo> fieldInclusion = null)
    parameters:
    - id: obj
      type: '{T}'
      description: The object to create a deep copy of
    - id: otherObj
      type: '{T}'
      description: The object to copy into
    - id: flags
      type: System.Reflection.BindingFlags
      description: The binding flags for field searching
    - id: fieldInclusion
      type: System.Predicate{System.Reflection.FieldInfo}
      description: A predicate that determines whether or not the given field should be copied. If null, all fields will be copied.
    typeParameters:
    - id: T
      description: The type of the object to copy
    content.vb: >-
      <Obsolete("CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.")>

      Public Shared Sub DeepCopyInto(Of T)(obj As T, otherObj As T, flags As BindingFlags = BindingFlags.Instance Or BindingFlags.Public Or BindingFlags.NonPublic, fieldInclusion As Predicate(Of FieldInfo) = Nothing)
  overload: MLEM.Data.CopyExtensions.DeepCopyInto*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: CopyExtensions has major flaws and insufficient speed compared to other libraries specifically designed for copying objects.
  nameWithType.vb: CopyExtensions.DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
  fullName.vb: MLEM.Data.CopyExtensions.DeepCopyInto(Of T)(T, T, System.Reflection.BindingFlags, System.Predicate(Of System.Reflection.FieldInfo))
  name.vb: DeepCopyInto(Of T)(T, T, BindingFlags, Predicate(Of FieldInfo))
references:
- uid: MLEM.Data
  commentId: N:MLEM.Data
  href: MLEM.html
  name: MLEM.Data
  nameWithType: MLEM.Data
  fullName: MLEM.Data
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Data
    name: Data
    href: MLEM.Data.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Data.CopyConstructorAttribute
  commentId: T:MLEM.Data.CopyConstructorAttribute
  href: MLEM.Data.CopyConstructorAttribute.html
  name: CopyConstructorAttribute
  nameWithType: CopyConstructorAttribute
  fullName: MLEM.Data.CopyConstructorAttribute
- uid: System.Reflection.BindingFlags
  commentId: T:System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.bindingflags
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: MLEM.Data.CopyExtensions.Copy*
  commentId: Overload:MLEM.Data.CopyExtensions.Copy
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_Copy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: Copy
  nameWithType: CopyExtensions.Copy
  fullName: MLEM.Data.CopyExtensions.Copy
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Predicate{System.Reflection.FieldInfo}
  commentId: T:System.Predicate{System.Reflection.FieldInfo}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<FieldInfo>
  nameWithType: Predicate<FieldInfo>
  fullName: System.Predicate<System.Reflection.FieldInfo>
  nameWithType.vb: Predicate(Of FieldInfo)
  fullName.vb: System.Predicate(Of System.Reflection.FieldInfo)
  name.vb: Predicate(Of FieldInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.fieldinfo
  - name: )
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: MLEM.Data.CopyExtensions.DeepCopy*
  commentId: Overload:MLEM.Data.CopyExtensions.DeepCopy
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopy__1___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopy
  nameWithType: CopyExtensions.DeepCopy
  fullName: MLEM.Data.CopyExtensions.DeepCopy
- uid: MLEM.Data.CopyExtensions.CopyInto*
  commentId: Overload:MLEM.Data.CopyExtensions.CopyInto
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_CopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: CopyInto
  nameWithType: CopyExtensions.CopyInto
  fullName: MLEM.Data.CopyExtensions.CopyInto
- uid: MLEM.Data.CopyExtensions.DeepCopyInto*
  commentId: Overload:MLEM.Data.CopyExtensions.DeepCopyInto
  href: MLEM.Data.CopyExtensions.html#MLEM_Data_CopyExtensions_DeepCopyInto__1___0___0_System_Reflection_BindingFlags_System_Predicate_System_Reflection_FieldInfo__
  name: DeepCopyInto
  nameWithType: CopyExtensions.DeepCopyInto
  fullName: MLEM.Data.CopyExtensions.DeepCopyInto
