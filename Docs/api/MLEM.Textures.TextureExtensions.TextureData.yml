### YamlMime:ManagedReference
items:
- uid: MLEM.Textures.TextureExtensions.TextureData
  commentId: T:MLEM.Textures.TextureExtensions.TextureData
  id: TextureExtensions.TextureData
  parent: MLEM.Textures
  children:
  - MLEM.Textures.TextureExtensions.TextureData.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)
  - MLEM.Textures.TextureExtensions.TextureData.Dispose
  - MLEM.Textures.TextureExtensions.TextureData.FromIndex(System.Int32)
  - MLEM.Textures.TextureExtensions.TextureData.IsInBounds(System.Int32,System.Int32)
  - MLEM.Textures.TextureExtensions.TextureData.Item(Microsoft.Xna.Framework.Point)
  - MLEM.Textures.TextureExtensions.TextureData.Item(System.Int32,System.Int32)
  - MLEM.Textures.TextureExtensions.TextureData.Store
  - MLEM.Textures.TextureExtensions.TextureData.ToIndex(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: TextureExtensions.TextureData
  nameWithType: TextureExtensions.TextureData
  fullName: MLEM.Textures.TextureExtensions.TextureData
  type: Class
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: TextureData
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 41
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: A struct that represents the data of a texture, accessed through <xref href="MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public class TextureExtensions.TextureData : IDisposable'
    content.vb: Public Class TextureExtensions.TextureData Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MLEM.Textures.TextureExtensions.TextureData.Item(System.Int32,System.Int32)
  commentId: P:MLEM.Textures.TextureExtensions.TextureData.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: this[int, int]
  nameWithType: TextureExtensions.TextureData.this[int, int]
  fullName: MLEM.Textures.TextureExtensions.TextureData.this[int, int]
  type: Property
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 52
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Returns the color at the given x,y position of the texture, where 0,0 represents the bottom left.
  example: []
  syntax:
    content: public Color this[int x, int y] { get; set; }
    parameters:
    - id: x
      type: System.Int32
      description: The x coordinate of the texture location
    - id: y
      type: System.Int32
      description: The y coordinate of the texture location
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Default Property this[](x As Integer, y As Integer) As Color
  overload: MLEM.Textures.TextureExtensions.TextureData.Item*
  nameWithType.vb: TextureExtensions.TextureData.this[](Integer, Integer)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.this[](Integer, Integer)
  name.vb: this[](Integer, Integer)
- uid: MLEM.Textures.TextureExtensions.TextureData.Item(Microsoft.Xna.Framework.Point)
  commentId: P:MLEM.Textures.TextureExtensions.TextureData.Item(Microsoft.Xna.Framework.Point)
  id: Item(Microsoft.Xna.Framework.Point)
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: this[Point]
  nameWithType: TextureExtensions.TextureData.this[Point]
  fullName: MLEM.Textures.TextureExtensions.TextureData.this[Microsoft.Xna.Framework.Point]
  type: Property
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: this[]
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 63
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Returns the color at the given x,y position of the texture, where 0,0 represents the bottom left.
  example: []
  syntax:
    content: public Color this[Point point] { get; set; }
    parameters:
    - id: point
      type: Microsoft.Xna.Framework.Point
    return:
      type: Microsoft.Xna.Framework.Color
    content.vb: Public Default Property this[](point As Point) As Color
  overload: MLEM.Textures.TextureExtensions.TextureData.Item*
  nameWithType.vb: TextureExtensions.TextureData.this[](Point)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.this[](Microsoft.Xna.Framework.Point)
  name.vb: this[](Point)
- uid: MLEM.Textures.TextureExtensions.TextureData.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)
  id: '#ctor(Microsoft.Xna.Framework.Graphics.Texture2D)'
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: TextureData(Texture2D)
  nameWithType: TextureExtensions.TextureData.TextureData(Texture2D)
  fullName: MLEM.Textures.TextureExtensions.TextureData.TextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
  type: Constructor
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: .ctor
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 73
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: >-
    Creates a new texture data instance for the given texture.

    Note that this can more easily be invoked using <xref href="MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TextureData(Texture2D texture)
    parameters:
    - id: texture
      type: Microsoft.Xna.Framework.Graphics.Texture2D
      description: The texture whose data to get
    content.vb: Public Sub New(texture As Texture2D)
  overload: MLEM.Textures.TextureExtensions.TextureData.#ctor*
  nameWithType.vb: TextureExtensions.TextureData.New(Texture2D)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.New(Microsoft.Xna.Framework.Graphics.Texture2D)
  name.vb: New(Texture2D)
- uid: MLEM.Textures.TextureExtensions.TextureData.Store
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.Store
  id: Store
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: Store()
  nameWithType: TextureExtensions.TextureData.Store()
  fullName: MLEM.Textures.TextureExtensions.TextureData.Store()
  type: Method
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Store
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 82
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Stores this texture data back into the underlying texture
  example: []
  syntax:
    content: public void Store()
    content.vb: Public Sub Store()
  overload: MLEM.Textures.TextureExtensions.TextureData.Store*
- uid: MLEM.Textures.TextureExtensions.TextureData.ToIndex(System.Int32,System.Int32)
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.ToIndex(System.Int32,System.Int32)
  id: ToIndex(System.Int32,System.Int32)
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: ToIndex(int, int)
  nameWithType: TextureExtensions.TextureData.ToIndex(int, int)
  fullName: MLEM.Textures.TextureExtensions.TextureData.ToIndex(int, int)
  type: Method
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: ToIndex
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 96
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Converts the given x,y texture coordinate to the corresponding index in the <xref href="Microsoft.Xna.Framework.Graphics.Texture2D.GetData%60%601(%60%600%5b%5d)" data-throw-if-not-resolved="false"></xref> array.
  example: []
  syntax:
    content: public int ToIndex(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x coordinate
    - id: y
      type: System.Int32
      description: The y coordinate
    return:
      type: System.Int32
      description: The corresponding texture array index
    content.vb: Public Function ToIndex(x As Integer, y As Integer) As Integer
  overload: MLEM.Textures.TextureExtensions.TextureData.ToIndex*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If the given coordinate is out of bounds
  nameWithType.vb: TextureExtensions.TextureData.ToIndex(Integer, Integer)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.ToIndex(Integer, Integer)
  name.vb: ToIndex(Integer, Integer)
- uid: MLEM.Textures.TextureExtensions.TextureData.FromIndex(System.Int32)
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.FromIndex(System.Int32)
  id: FromIndex(System.Int32)
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: FromIndex(int)
  nameWithType: TextureExtensions.TextureData.FromIndex(int)
  fullName: MLEM.Textures.TextureExtensions.TextureData.FromIndex(int)
  type: Method
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: FromIndex
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 108
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Converts the given index from the <xref href="Microsoft.Xna.Framework.Graphics.Texture2D.GetData%60%601(%60%600%5b%5d)" data-throw-if-not-resolved="false"></xref> array into the corresponding x,y texture coordinate.
  example: []
  syntax:
    content: public Point FromIndex(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The texture array index
    return:
      type: Microsoft.Xna.Framework.Point
      description: The corresponding texture coordinate
    content.vb: Public Function FromIndex(index As Integer) As Point
  overload: MLEM.Textures.TextureExtensions.TextureData.FromIndex*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If the given index is out of bounds
  nameWithType.vb: TextureExtensions.TextureData.FromIndex(Integer)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.FromIndex(Integer)
  name.vb: FromIndex(Integer)
- uid: MLEM.Textures.TextureExtensions.TextureData.IsInBounds(System.Int32,System.Int32)
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.IsInBounds(System.Int32,System.Int32)
  id: IsInBounds(System.Int32,System.Int32)
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: IsInBounds(int, int)
  nameWithType: TextureExtensions.TextureData.IsInBounds(int, int)
  fullName: MLEM.Textures.TextureExtensions.TextureData.IsInBounds(int, int)
  type: Method
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: IsInBounds
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 120
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Checks if the given x,y texture coordinates is within the bounds of the underlying texture.
  example: []
  syntax:
    content: public bool IsInBounds(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: The x coordinate
    - id: y
      type: System.Int32
      description: The y coordinate
    return:
      type: System.Boolean
      description: Whether the given coordinate is within bounds of the underlying texture
    content.vb: Public Function IsInBounds(x As Integer, y As Integer) As Boolean
  overload: MLEM.Textures.TextureExtensions.TextureData.IsInBounds*
  nameWithType.vb: TextureExtensions.TextureData.IsInBounds(Integer, Integer)
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.IsInBounds(Integer, Integer)
  name.vb: IsInBounds(Integer, Integer)
- uid: MLEM.Textures.TextureExtensions.TextureData.Dispose
  commentId: M:MLEM.Textures.TextureExtensions.TextureData.Dispose
  id: Dispose
  parent: MLEM.Textures.TextureExtensions.TextureData
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TextureExtensions.TextureData.Dispose()
  fullName: MLEM.Textures.TextureExtensions.TextureData.Dispose()
  type: Method
  source:
    remote:
      path: MLEM/Textures/TextureExtensions.cs
      branch: main
      repo: https://github.com/Ellpeck/MLEM
    id: Dispose
    path: ../MLEM/Textures/TextureExtensions.cs
    startLine: 125
  assemblies:
  - MLEM
  namespace: MLEM.Textures
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: MLEM.Textures.TextureExtensions.TextureData.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
  commentId: M:MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
  isExternal: true
  href: MLEM.Textures.TextureExtensions.html#MLEM_Textures_TextureExtensions_GetTextureData_Microsoft_Xna_Framework_Graphics_Texture2D_
  name: GetTextureData(Texture2D)
  nameWithType: TextureExtensions.GetTextureData(Texture2D)
  fullName: MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
  spec.csharp:
  - uid: MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
    name: GetTextureData
    href: MLEM.Textures.TextureExtensions.html#MLEM_Textures_TextureExtensions_GetTextureData_Microsoft_Xna_Framework_Graphics_Texture2D_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
  spec.vb:
  - uid: MLEM.Textures.TextureExtensions.GetTextureData(Microsoft.Xna.Framework.Graphics.Texture2D)
    name: GetTextureData
    href: MLEM.Textures.TextureExtensions.html#MLEM_Textures_TextureExtensions_GetTextureData_Microsoft_Xna_Framework_Graphics_Texture2D_
  - name: (
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: MLEM.Textures
  commentId: N:MLEM.Textures
  href: MLEM.html
  name: MLEM.Textures
  nameWithType: MLEM.Textures
  fullName: MLEM.Textures
  spec.csharp:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
  spec.vb:
  - uid: MLEM
    name: MLEM
    href: MLEM.html
  - name: .
  - uid: MLEM.Textures
    name: Textures
    href: MLEM.Textures.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: MLEM.Textures.TextureExtensions.TextureData.Item*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.Item
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_Item_System_Int32_System_Int32_
  name: this
  nameWithType: TextureExtensions.TextureData.this
  fullName: MLEM.Textures.TextureExtensions.TextureData.this
  nameWithType.vb: TextureExtensions.TextureData.this[]
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.this[]
  name.vb: this[]
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Microsoft.Xna.Framework.Color
  commentId: T:Microsoft.Xna.Framework.Color
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: Microsoft.Xna.Framework.Color
- uid: Microsoft.Xna.Framework
  commentId: N:Microsoft.Xna.Framework
  isExternal: true
  name: Microsoft.Xna.Framework
  nameWithType: Microsoft.Xna.Framework
  fullName: Microsoft.Xna.Framework
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
- uid: Microsoft.Xna.Framework.Point
  commentId: T:Microsoft.Xna.Framework.Point
  parent: Microsoft.Xna.Framework
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Microsoft.Xna.Framework.Point
- uid: MLEM.Textures.TextureExtensions.TextureData.#ctor*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.#ctor
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData__ctor_Microsoft_Xna_Framework_Graphics_Texture2D_
  name: TextureData
  nameWithType: TextureExtensions.TextureData.TextureData
  fullName: MLEM.Textures.TextureExtensions.TextureData.TextureData
  nameWithType.vb: TextureExtensions.TextureData.New
  fullName.vb: MLEM.Textures.TextureExtensions.TextureData.New
  name.vb: New
- uid: Microsoft.Xna.Framework.Graphics.Texture2D
  commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  parent: Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D
- uid: Microsoft.Xna.Framework.Graphics
  commentId: N:Microsoft.Xna.Framework.Graphics
  isExternal: true
  name: Microsoft.Xna.Framework.Graphics
  nameWithType: Microsoft.Xna.Framework.Graphics
  fullName: Microsoft.Xna.Framework.Graphics
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
  - name: .
  - uid: Microsoft.Xna
    name: Xna
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework
    name: Framework
    isExternal: true
  - name: .
  - uid: Microsoft.Xna.Framework.Graphics
    name: Graphics
    isExternal: true
- uid: MLEM.Textures.TextureExtensions.TextureData.Store*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.Store
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_Store
  name: Store
  nameWithType: TextureExtensions.TextureData.Store
  fullName: MLEM.Textures.TextureExtensions.TextureData.Store
- uid: Microsoft.Xna.Framework.Graphics.Texture2D.GetData``1(``0[])
  commentId: M:Microsoft.Xna.Framework.Graphics.Texture2D.GetData``1(``0[])
  isExternal: true
  name: GetData<T>(T[])
  nameWithType: Texture2D.GetData<T>(T[])
  fullName: Microsoft.Xna.Framework.Graphics.Texture2D.GetData<T>(T[])
  nameWithType.vb: Texture2D.GetData(Of T)(T())
  fullName.vb: Microsoft.Xna.Framework.Graphics.Texture2D.GetData(Of T)(T())
  name.vb: GetData(Of T)(T())
  spec.csharp:
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D.GetData``1(``0[])
    name: GetData
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Microsoft.Xna.Framework.Graphics.Texture2D.GetData``1(``0[])
    name: GetData
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: MLEM.Textures.TextureExtensions.TextureData.ToIndex*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.ToIndex
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_ToIndex_System_Int32_System_Int32_
  name: ToIndex
  nameWithType: TextureExtensions.TextureData.ToIndex
  fullName: MLEM.Textures.TextureExtensions.TextureData.ToIndex
- uid: MLEM.Textures.TextureExtensions.TextureData.FromIndex*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.FromIndex
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_FromIndex_System_Int32_
  name: FromIndex
  nameWithType: TextureExtensions.TextureData.FromIndex
  fullName: MLEM.Textures.TextureExtensions.TextureData.FromIndex
- uid: MLEM.Textures.TextureExtensions.TextureData.IsInBounds*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.IsInBounds
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_IsInBounds_System_Int32_System_Int32_
  name: IsInBounds
  nameWithType: TextureExtensions.TextureData.IsInBounds
  fullName: MLEM.Textures.TextureExtensions.TextureData.IsInBounds
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: MLEM.Textures.TextureExtensions.TextureData.Dispose*
  commentId: Overload:MLEM.Textures.TextureExtensions.TextureData.Dispose
  href: MLEM.Textures.TextureExtensions.TextureData.html#MLEM_Textures_TextureExtensions_TextureData_Dispose
  name: Dispose
  nameWithType: TextureExtensions.TextureData.Dispose
  fullName: MLEM.Textures.TextureExtensions.TextureData.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
